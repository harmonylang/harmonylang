{
  "nstates": 5462,
  "issue": "Safety violation",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/clock.hny",
            "lines": [
                "const FIFO = False",
                "",
                "def CLOCK(n) returns result:",
                "    result = { .entries: [None,] * n, .recent: {}, .hand: 0, .misses: 0 }",
                "",
                "def ref(clock, x):",
                "    if x not in clock->entries:",
                "        while clock->entries[clock->hand] in clock->recent:",
                "            clock->recent -= {clock->entries[clock->hand]}",
                "            clock->hand = (clock->hand + 1) % len(clock->entries)",
                "        clock->entries[clock->hand] = x",
                "        clock->hand = (clock->hand + 1) % len(clock->entries)",
                "        clock->misses += 1",
                "    if not FIFO:",
                "        clock->recent |= {x}",
                "",
                "clock3, clock4, refs = CLOCK(3), CLOCK(4), []",
                "",
                "const VALUES = { 1..5 }",
                "",
                "var last = {}",
                "for i in {1..100}:",
                "    let x = i if i < 5 else choose(VALUES - last):",
                "        refs = refs + [x,]",
                "        ref(?clock3, x); ref(?clock4, x)",
                "        assert(clock4.misses <= clock3.misses)",
                "        last = {x}"
              ],
            "identifiers": {
                "x": "local-const",
                "CLOCK": "constant",
                "n": "local-const",
                "i": "local-const",
                "clock4": "global",
                "refs": "global",
                "this": "local-var",
                "FIFO": "constant",
                "ref": "constant",
                "VALUES": "constant",
                "clock": "local-const",
                "last": "local-var",
                "___": "___",
                "clock3": "global"
              }
          }
      },
    "labels": {
        "__end__": 221
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 134",
            "jump over method definition: set program counter to 134"
          ],
        [
            "Frame CLOCK(n)",
            "start of method CLOCK"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push None",
            "push constant None"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "2-ary *",
            "pop 2 values and push the result of applying *"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"recent\"",
            "push constant \"recent\""
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "Push \"misses\"",
            "push constant \"misses\""
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 134",
            "jump over method definition: set program counter to 134"
          ],
        [
            "Frame ref(clock, x)",
            "start of method ref"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond True 117",
            "pop a value and jump to 117 if the value is True"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"recent\"",
            "push constant \"recent\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 83",
            "pop a value and jump to 83 if the value is False"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"recent\"",
            "push constant \"recent\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary %",
            "pop 2 values and push the result of applying %"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 33",
            "set program counter to 33"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"hand\"",
            "push constant \"hand\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"entries\"",
            "push constant \"entries\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary len",
            "pop 1 value and push the result of applying len"
          ],
        [
            "2-ary %",
            "pop 2 values and push the result of applying %"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "Push \"misses\"",
            "push constant \"misses\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "JumpCond True 131",
            "pop a value and jump to 131 if the value is True"
          ],
        [
            "LoadVar clock",
            "push the value of clock"
          ],
        [
            "DelVar clock",
            "delete method variable clock"
          ],
        [
            "Push \"recent\"",
            "push constant \"recent\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "DelVar clock",
            "delete method variable clock"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ?clock3",
            "push constant ?clock3"
          ],
        [
            "Push ?clock4",
            "push constant ?clock4"
          ],
        [
            "Push ?refs",
            "push constant ?refs"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push 3",
            "push constant 3"
          ],
        [
            "Apply PC(2)",
            "call method PC(2)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "Apply PC(2)",
            "call method PC(2)"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Split 3",
            "splits a tuple value into its elements"
          ],
        [
            "Move 4",
            "move stack element to top"
          ],
        [
            "Move 2",
            "move stack element to top"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Move 3",
            "move stack element to top"
          ],
        [
            "Move 2",
            "move stack element to top"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "StoreVar last",
            "pop a value and store in last"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "Push 100",
            "push constant 100"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 217",
            "check if loop is done: pop a value and jump to 217 if the value is False"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "Push 5",
            "push constant 5"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 170",
            "pop a value and jump to 170 if the value is False"
          ],
        [
            "DelVar last",
            "delete method variable last"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Jump 176",
            "set program counter to 176"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "Push { 1, 2, 3, 4, 5 }",
            "push constant { 1, 2, 3, 4, 5 }"
          ],
        [
            "LoadVar last",
            "push the value of last"
          ],
        [
            "DelVar last",
            "delete method variable last"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar x",
            "pop a value and store in x"
          ],
        [
            "Load refs",
            "push value of shared variable refs"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store refs",
            "pop a value and store it in shared variable refs"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push ?clock3",
            "push constant ?clock3"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(25)",
            "call method PC(25)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push ?clock4",
            "push constant ?clock4"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(25)",
            "call method PC(25)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "Push ?clock4",
            "push constant ?clock4"
          ],
        [
            "Push \"misses\"",
            "push constant \"misses\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push ?clock3",
            "push constant ?clock3"
          ],
        [
            "Push \"misses\"",
            "push constant \"misses\""
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary <=",
            "pop 2 values and push the result of applying <="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar last",
            "pop a value and store in last"
          ],
        [
            "Jump 160",
            "set program counter to 160"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar last",
            "delete method variable last"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                1,
                1,
                28,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                28
              ],
            "line": 3,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                28
              ],
            "line": 3,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 23,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 31,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 30,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 31,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 36,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 45,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 56,
            "column": 52
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 59,
            "column": 59
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 68,
            "column": 62
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 71
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 71,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                5,
                4,
                73
              ],
            "line": 4,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 3,
            "stmt": [
                3,
                1,
                3,
                28
              ],
            "line": 3,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 21,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 8
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                31
              ],
            "line": 7,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 28,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 28,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 40,
            "column": 37
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 40,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 40,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 41,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 41,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 50,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 58,
            "column": 53
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 58,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 58,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 58,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 25,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 58,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 58,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 57,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 35,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 44,
            "column": 38
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 44,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 50,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 56,
            "column": 53
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 56,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 56,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 57,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 57,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 57,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 58,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                13,
                9,
                58
              ],
            "line": 9,
            "endcolumn": 28,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 23,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 23,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 32,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 38,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 38,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 42,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 55,
            "column": 51
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 64,
            "column": 58
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 64,
            "column": 51
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 64,
            "column": 51
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 65,
            "column": 47
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 65,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                13,
                10,
                65
              ],
            "line": 10,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 59,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 28,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 34,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 34,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 34,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 35,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                39
              ],
            "line": 11,
            "endcolumn": 37,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 28,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 34,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 34,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 34,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 38,
            "column": 38
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 38,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 51,
            "column": 47
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 60,
            "column": 54
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 60,
            "column": 47
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 60,
            "column": 47
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 61,
            "column": 43
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 61,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                9,
                12,
                61
              ],
            "line": 12,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 26,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                9,
                13,
                26
              ],
            "line": 13,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                5,
                14,
                16
              ],
            "line": 14,
            "endcolumn": 15,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                5,
                14,
                16
              ],
            "line": 14,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 28,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 28,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 28,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                9,
                15,
                28
              ],
            "line": 15,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 45,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 45,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 41,
            "column": 34
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 45,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 45,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 45,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 20,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                1,
                17,
                45
              ],
            "line": 17,
            "endcolumn": 22,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                13
              ],
            "line": 21,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                1,
                21,
                13
              ],
            "line": 21,
            "endcolumn": 13,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 16,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 22,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 49,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 16,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 41,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 41,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 45
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 45
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 48,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 49,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                5,
                23,
                49
              ],
            "line": 23,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                9,
                24,
                26
              ],
            "line": 24,
            "endcolumn": 19,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                9,
                24,
                26
              ],
            "line": 24,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                9,
                24,
                26
              ],
            "line": 24,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                9,
                24,
                26
              ],
            "line": 24,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                9,
                24,
                26
              ],
            "line": 24,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                9,
                24,
                26
              ],
            "line": 24,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 19,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                9,
                25,
                23
              ],
            "line": 25,
            "endcolumn": 23,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 39,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 36,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 39,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 39,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 40,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                26,
                25,
                40
              ],
            "line": 25,
            "endcolumn": 40,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 46,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 46,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 28,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 28,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 45,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 45,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 45,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 45,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 45,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 46,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                46
              ],
            "line": 26,
            "endcolumn": 46,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                9,
                27,
                18
              ],
            "line": 27,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                9,
                27,
                18
              ],
            "line": 27,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                9,
                27,
                18
              ],
            "line": 27,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                9,
                27,
                18
              ],
            "line": 27,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                9,
                27,
                18
              ],
            "line": 27,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                17
              ],
            "line": 22,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                1,
                1,
                28,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                1,
                1,
                28,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                1,
                1,
                28,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                1,
                1,
                28,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "134",
            "op": "Jump"
          },
        {
            "args": "n",
            "name": "CLOCK",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "*",
            "op": "Nary"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "recent"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "atom",
                "value": "misses"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "134",
            "op": "Jump"
          },
        {
            "args": "(clock, x)",
            "name": "ref",
            "op": "Frame"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "117",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "recent"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "83",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "recent"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "%",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "pc": "33",
            "op": "Jump"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "op": "Store"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "hand"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "entries"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "len",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "%",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "misses"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "pc": "131",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "clock",
            "op": "LoadVar"
          },
        {
            "value": "clock",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "atom",
                "value": "recent"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "value": "clock",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "clock3"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "clock4"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "refs"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 3
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "count": "3",
            "op": "Split"
          },
        {
            "offset": "4",
            "op": "Move"
          },
        {
            "offset": "2",
            "op": "Move"
          },
        {
            "op": "Store"
          },
        {
            "offset": "3",
            "op": "Move"
          },
        {
            "offset": "2",
            "op": "Move"
          },
        {
            "op": "Store"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "last",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 100
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "217",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 5
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "170",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "last",
            "op": "DelVar"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "pc": "176",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [
                    {
                        "type": "int",
                        "value": 1
                      },
                    {
                        "type": "int",
                        "value": 2
                      },
                    {
                        "type": "int",
                        "value": 3
                      },
                    {
                        "type": "int",
                        "value": 4
                      },
                    {
                        "type": "int",
                        "value": 5
                      }
                  ]
              },
            "op": "Push"
          },
        {
            "value": "last",
            "op": "LoadVar"
          },
        {
            "value": "last",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "value": "x",
            "op": "StoreVar"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "refs"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "refs"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "clock3"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "25"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "clock4"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "25"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "clock4"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "misses"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "clock3"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "atom",
                "value": "misses"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "<=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "last",
            "op": "StoreVar"
          },
        {
            "pc": "160",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "last",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "macrosteps": [
    {
      "id": "1",
      "tid": "0",
      "shared": { },
      "name": "__init__()",
      "context": {
        "tid": "0",
        "hvalue": "7fd1a4fd351a",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "0",
        "sp": "1",
        "stack": [{ "type": "list", "value": [] }],
        "trace": [
{"pc": "0","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Frame", "name": "__init__", "args": "()", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame __init__()",
          "explain": "pop argument () and run method \"__init__\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "__init__" } ] },
          "npc": "1",
          "fp": "1",
          "trace": [
{"pc": "1","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },

        {
          "code": "Jump 134",
          "explain": "jump over method definition: set program counter to 134",
          "explain2": { "text": "jump over method definition: set program counter to 134", "args": [] },
          "npc": "134",
          "push": [ ],
          "pc": "1"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "135",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "134"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "136",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "135"
        },

        {
          "code": "Push ?refs",
          "explain": "push constant ?refs",
          "explain2": { "text": "push constant ?refs", "args": [] },
          "npc": "137",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ],
          "pc": "136"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "138",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "137"
        },

        {
          "code": "Push 3",
          "explain": "push constant 3",
          "explain2": { "text": "push constant 3", "args": [] },
          "npc": "139",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "138"
        },

        {
          "code": "Apply PC(2)",
          "explain": "pop an argument (3) and call method (2: \"CLOCK\")",
          "explain2": { "text": "pop an argument (#+) and call method (2: #+)", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "CLOCK" } ] },
          "npc": "2",
          "fp": "8",
          "trace": [
{"pc": "140","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "2","xpc": "2","method_name": { "type": "atom", "value": "CLOCK" },
"method_arg": { "type": "int", "value": "3" },
"method": "CLOCK(3)","calltype": "normal","vars":{ },"sp": 7}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "2226" }, { "type": "int", "value": "3" } ],
          "pc": "139"
        },

        {
          "code": "Frame CLOCK(n)",
          "explain": "pop argument (3), assign to n, and run method \"CLOCK\"",
          "explain2": { "text": "pop argument (#+), assign to n, and run method #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "CLOCK" } ] },
          "npc": "3",
          "local": { "n": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "4",
          "push": [ ],
          "pc": "3"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "5",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "4"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "6",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "5"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "7",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "6"
        },

        {
          "code": "Push None",
          "explain": "push constant None",
          "explain2": { "text": "push constant None", "args": [] },
          "npc": "8",
          "push": [ { "type": "address" } ],
          "pc": "7"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (None, []); insert first value into the second; push result ([None])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address" } ] } ] },
          "npc": "9",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address" } ] } ],
          "pc": "8"
        },

        {
          "code": "LoadVar n",
          "explain": "push value (3) of variable \"n\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "n" } ] },
          "npc": "10",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "9"
        },

        {
          "code": "DelVar n",
          "explain": "delete method variable n",
          "explain2": { "text": "delete method variable n", "args": [] },
          "npc": "11",
          "local": { },
          "push": [ ],
          "pc": "10"
        },

        {
          "code": "2-ary *",
          "explain": "pop 2 values (3, [None]); create multiple copies of list; push result ([None, None, None])",
          "explain2": { "text": "pop 2 values (#+, #+); create multiple copies of list; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "list", "value": [{ "type": "address" } ] }, { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "12",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "11"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ([None, None, None], \"entries\", {:}); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] }, { "type": "atom", "value": "entries" }, { "type": "dict", "value": [] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } } ] } ] },
          "npc": "13",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } } ] } ],
          "pc": "12"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "14",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "13"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "15",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "14"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({}, \"recent\", { \"entries\": [None, None, None] }); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None], \"recent\": {} })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "recent" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "16",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "15"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "17",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "16"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "18",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "17"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (0, \"hand\", { \"entries\": [None, None, None], \"recent\": {} }); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None], \"hand\": 0, \"recent\": {} })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "hand" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "19",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "18"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "20",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "19"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "21",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "20"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (0, \"misses\", { \"entries\": [None, None, None], \"hand\": 0, \"recent\": {} }); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "misses" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "22",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "21"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "23",
          "local": { "result": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "22"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "140",
          "fp": "1",
          "trace": [
{"pc": "140","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "23"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }, []); insert first value into the second; push result ([{ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] } ] },
          "npc": "141",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] } ],
          "pc": "140"
        },

        {
          "code": "Push 4",
          "explain": "push constant 4",
          "explain2": { "text": "push constant 4", "args": [] },
          "npc": "142",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "141"
        },

        {
          "code": "Apply PC(2)",
          "explain": "pop an argument (4) and call method (2: \"CLOCK\")",
          "explain2": { "text": "pop an argument (#+) and call method (2: #+)", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "CLOCK" } ] },
          "npc": "2",
          "fp": "8",
          "trace": [
{"pc": "143","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0},{"pc": "2","xpc": "2","method_name": { "type": "atom", "value": "CLOCK" },
"method_arg": { "type": "int", "value": "4" },
"method": "CLOCK(4)","calltype": "normal","vars":{ },"sp": 7}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "2274" }, { "type": "int", "value": "4" } ],
          "pc": "142"
        },

        {
          "code": "Frame CLOCK(n)",
          "explain": "pop argument (4), assign to n, and run method \"CLOCK\"",
          "explain2": { "text": "pop argument (#+), assign to n, and run method #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "CLOCK" } ] },
          "npc": "3",
          "local": { "n": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "2"
        },

        {
          "code": "DelVar result",
          "explain": "delete method variable result",
          "explain2": { "text": "delete method variable result", "args": [] },
          "npc": "4",
          "push": [ ],
          "pc": "3"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "5",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "4"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "6",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "5"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "7",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "6"
        },

        {
          "code": "Push None",
          "explain": "push constant None",
          "explain2": { "text": "push constant None", "args": [] },
          "npc": "8",
          "push": [ { "type": "address" } ],
          "pc": "7"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (None, []); insert first value into the second; push result ([None])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address" } ] } ] },
          "npc": "9",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address" } ] } ],
          "pc": "8"
        },

        {
          "code": "LoadVar n",
          "explain": "push value (4) of variable \"n\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "n" } ] },
          "npc": "10",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "9"
        },

        {
          "code": "DelVar n",
          "explain": "delete method variable n",
          "explain2": { "text": "delete method variable n", "args": [] },
          "npc": "11",
          "local": { },
          "push": [ ],
          "pc": "10"
        },

        {
          "code": "2-ary *",
          "explain": "pop 2 values (4, [None]); create multiple copies of list; push result ([None, None, None, None])",
          "explain2": { "text": "pop 2 values (#+, #+); create multiple copies of list; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "address" } ] }, { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "12",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "11"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ([None, None, None, None], \"entries\", {:}); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None, None] })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] }, { "type": "atom", "value": "entries" }, { "type": "dict", "value": [] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } } ] } ] },
          "npc": "13",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } } ] } ],
          "pc": "12"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "14",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "13"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "15",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "14"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values ({}, \"recent\", { \"entries\": [None, None, None, None] }); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None, None], \"recent\": {} })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "atom", "value": "recent" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "16",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "15"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "17",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "16"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "18",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "17"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (0, \"hand\", { \"entries\": [None, None, None, None], \"recent\": {} }); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None, None], \"hand\": 0, \"recent\": {} })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "hand" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "19",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "18"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "20",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "19"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "21",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "20"
        },

        {
          "code": "3-ary DictAdd",
          "explain": "pop 3 values (0, \"misses\", { \"entries\": [None, None, None, None], \"hand\": 0, \"recent\": {} }); add key/value pair to dictionary; push result ({ \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} })",
          "explain2": { "text": "pop 3 values (#+, #+, #+); add key/value pair to dictionary; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "misses" }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "22",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "21"
        },

        {
          "code": "StoreVar result",
          "explain": "pop value ({ \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }) and store locally in variable \\\"result\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"result\"", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "23",
          "local": { "result": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "22"
        },

        {
          "code": "ReturnOp(result)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] },
          "npc": "143",
          "fp": "1",
          "trace": [
{"pc": "143","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "local": { },
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "23"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ({ \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }, [{ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }]); insert first value into the second; push result ([{ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }, { \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] } ] },
          "npc": "144",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] } ],
          "pc": "143"
        },

        {
          "code": "Push ()",
          "explain": "push constant ()",
          "explain2": { "text": "push constant ()", "args": [] },
          "npc": "145",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "144"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values ([], [{ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }, { \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }]); insert first value into the second; push result ([{ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }, { \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }, []])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ] }, { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "list", "value": [] } ] } ] },
          "npc": "146",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "list", "value": [] } ] } ],
          "pc": "145"
        },

        {
          "code": "Split 3",
          "explain": "splits a tuple value into its elements",
          "explain2": { "text": "splits a tuple value into its elements", "args": [] },
          "npc": "147",
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "list", "value": [] } ],
          "pc": "146"
        },

        {
          "code": "Move 4",
          "explain": "move stack element to top",
          "explain2": { "text": "move stack element to top", "args": [] },
          "npc": "148",
          "pop": "4",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ],
          "pc": "147"
        },

        {
          "code": "Move 2",
          "explain": "move stack element to top",
          "explain2": { "text": "move stack element to top", "args": [] },
          "npc": "149",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] }, { "type": "list", "value": [] } ],
          "pc": "148"
        },

        {
          "code": "Store",
          "explain": "pop value ([]) and address (?refs) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "list", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "refs": { "type": "list", "value": [] } },
          "npc": "150",
          "pop": "2",
          "push": [ ],
          "pc": "149"
        },

        {
          "code": "Move 3",
          "explain": "move stack element to top",
          "explain2": { "text": "move stack element to top", "args": [] },
          "npc": "151",
          "pop": "3",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "150"
        },

        {
          "code": "Move 2",
          "explain": "move stack element to top",
          "explain2": { "text": "move stack element to top", "args": [] },
          "npc": "152",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] } ],
          "pc": "151"
        },

        {
          "code": "Store",
          "explain": "pop value ({ \"entries\": [None, None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }) and address (?clock4) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] },
          "shared": { "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [] } },
          "npc": "153",
          "pop": "2",
          "push": [ ],
          "pc": "152"
        },

        {
          "code": "Store",
          "explain": "pop value ({ \"entries\": [None, None, None], \"hand\": 0, \"misses\": 0, \"recent\": {} }) and address (?clock3) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [] } },
          "npc": "154",
          "pop": "2",
          "push": [ ],
          "pc": "153"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "155",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "154"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({}) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [] } ] },
          "npc": "156",
          "local": { "last": { "type": "set", "value": [] } },
          "pop": "1",
          "push": [ ],
          "pc": "155"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "157",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "156"
        },

        {
          "code": "Push 100",
          "explain": "push constant 100",
          "explain2": { "text": "push constant 100", "args": [] },
          "npc": "158",
          "push": [ { "type": "int", "value": "100" } ],
          "pc": "157"
        },

        {
          "code": "2-ary ..",
          "explain": "pop 2 values (100, 1); range of integers; push result ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 })",
          "explain2": { "text": "pop 2 values (#+, #+); range of integers; push result (#+)", "args": [ { "type": "int", "value": "100" }, { "type": "int", "value": "1" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] } ] },
          "npc": "159",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] } ],
          "pc": "158"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "160",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "159"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (0) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (1) to i; push new index (1) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (1) and True", "args": [ { "type": "int", "value": "0" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "1" }, "last": { "type": "set", "value": [] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (1) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 1); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (True), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "166",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "167",
          "local": { "i": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "166"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (1) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "i" } ] },
          "npc": "168",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "167"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "169",
          "local": { },
          "push": [ ],
          "pc": "168"
        },

        {
          "code": "Jump 176",
          "explain": "set program counter to 176",
          "explain2": { "text": "set program counter to 176", "args": [] },
          "npc": "176",
          "push": [ ],
          "pc": "169"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (1) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, []); insert first value into the second; push result ([1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([1], []); concatenate the lists; push result ([1])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?clock3]); insert first value into the second; push result ([?clock3, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 1]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] },
"method": "ref(?clock3, 1)","calltype": "normal","vars":{ "x": { "type": "int", "value": "1" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 1]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([None, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([None, None, None], 1); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({}, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"entries\"][0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, None, None]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 1 }, {}); union; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?clock4]); insert first value into the second; push result ([?clock4, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 1]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] },
"method": "ref(?clock4, 1)","calltype": "normal","vars":{ "x": { "type": "int", "value": "1" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 1]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([None, None, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([None, None, None, None], 1); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "address" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][0]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({}, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock4[\"entries\"][0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, None, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, None, None, None]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 1 }, {}); union; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (1, 1); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 1 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (1) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (2) to i; push new index (2) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (2) and True", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "2" }, "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (2) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 2); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (True), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "166",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "167",
          "local": { "i": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "166"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (2) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "i" } ] },
          "npc": "168",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "167"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "169",
          "local": { },
          "push": [ ],
          "pc": "168"
        },

        {
          "code": "Jump 176",
          "explain": "set program counter to 176",
          "explain2": { "text": "set program counter to 176", "args": [] },
          "npc": "176",
          "push": [ ],
          "pc": "169"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (2) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, []); insert first value into the second; push result ([2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([2], [1]); concatenate the lists; push result ([1, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock3]); insert first value into the second; push result ([?clock3, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock3, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, None, None], 2); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1 }, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock3[\"entries\"][1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, None]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock3[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1 }); union; push result ({ 1, 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock4]); insert first value into the second; push result ([?clock4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock4, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, None, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, None, None, None], 2); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "address" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][1]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1 }, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock4[\"entries\"][1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, None, None]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1 }); union; push result ({ 1, 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (2, 2); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 2 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (2) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (3) to i; push new index (3) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (3) and True", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "3" }, "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (3) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 3); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (True), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "166",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "167",
          "local": { "i": { "type": "int", "value": "3" } },
          "push": [ ],
          "pc": "166"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (3) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "i" } ] },
          "npc": "168",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "167"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "169",
          "local": { },
          "push": [ ],
          "pc": "168"
        },

        {
          "code": "Jump 176",
          "explain": "set program counter to 176",
          "explain2": { "text": "set program counter to 176", "args": [] },
          "npc": "176",
          "push": [ ],
          "pc": "169"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (3) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "3" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (3, []); insert first value into the second; push result ([3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([3], [1, 2]); concatenate the lists; push result ([1, 2, 3])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "3" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (3, [?clock3]); insert first value into the second; push result ([?clock3, 3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "3" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "3" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 3]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "3" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "3" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "3" } ] },
"method": "ref(?clock3, 3)","calltype": "normal","vars":{ "x": { "type": "int", "value": "3" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "3" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 3]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "3" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "3" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, None], 3); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" } ] }, { "type": "int", "value": "3" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][2]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2 }, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock3[\"entries\"][2]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 3); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "3" }, { "type": "int", "value": "0" } ] },
          "npc": "108",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (0) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock3[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "3" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (3, {}); insert first value into the second; push result ({ 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 3 }, { 1, 2 }); union; push result ({ 1, 2, 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 3 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "3" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "3" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (3, [?clock4]); insert first value into the second; push result ([?clock4, 3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "3" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "3" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 3]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "3" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "3" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "3" } ] },
"method": "ref(?clock4, 3)","calltype": "normal","vars":{ "x": { "type": "int", "value": "3" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "3" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 3]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "3" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "3" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "3" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, None, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, None, None], 3); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "address" }, { "type": "address" } ] }, { "type": "int", "value": "3" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][2]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2 }, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock4[\"entries\"][2]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3, None]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 3); second value modulo the first; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "3" }, { "type": "int", "value": "3" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "3" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (3, {}); insert first value into the second; push result ({ 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 3 }, { 1, 2 }); union; push result ({ 1, 2, 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 3 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "3" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "3" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (3, 3); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (3) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "3" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (3, {}); insert first value into the second; push result ({ 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 3 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "3" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (3) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (4) to i; push new index (4) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (4) and True", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "4" }, "last": { "type": "set", "value": [{ "type": "int", "value": "3" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (4) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 4); check if second value is less than the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (True), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "166",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "167",
          "local": { "i": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "166"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (4) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "i" } ] },
          "npc": "168",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "167"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "169",
          "local": { },
          "push": [ ],
          "pc": "168"
        },

        {
          "code": "Jump 176",
          "explain": "set program counter to 176",
          "explain2": { "text": "set program counter to 176", "args": [] },
          "npc": "176",
          "push": [ ],
          "pc": "169"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (4) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "4" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, []); insert first value into the second; push result ([4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([4], [1, 2, 3]); concatenate the lists; push result ([1, 2, 3, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [?clock3]); insert first value into the second; push result ([?clock3, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 4]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "4" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "4" } ] },
"method": "ref(?clock3, 4)","calltype": "normal","vars":{ "x": { "type": "int", "value": "4" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 4]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, 3], 4); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2, 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2, 3 }, 1); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2, 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 1 }, { 1, 2, 3 }); the second integer minus the first; push result ({ 2, 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 2, 3 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 2, 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 2, 3 }, 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 2, 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 2 }, { 2, 3 }); the second integer minus the first; push result ({ 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 3 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "3" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][2]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 3 }, 3); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][2]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (3, {}); insert first value into the second; push result ({ 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 3 }, { 3 }); the second integer minus the first; push result ({})",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "set", "value": [] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({}) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([1, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 3); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "3" }, { "type": "int", "value": "0" } ] },
          "npc": "81",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (0) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({}, 1); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (4) and address (?clock3[\"entries\"][0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2, 3]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 3); add the integers; push result (4)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (4) and address (?clock3[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 4 }, {}); union; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 4 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "4" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (4, [?clock4]); insert first value into the second; push result ([?clock4, 4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "4" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 4]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "4" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "4" } ] },
"method": "ref(?clock4, 4)","calltype": "normal","vars":{ "x": { "type": "int", "value": "4" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "4" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 4]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "4" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "4" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "4" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, None])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, 3, None], 4); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "address" } ] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (3, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][3])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][3]) and push value (None)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] }, { "type": "address" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2, 3 }, None); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "address" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (3, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][3])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (4) and address (?clock4[\"entries\"][3]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 3); add the integers; push result (4)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 4); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "4" }, { "type": "int", "value": "0" } ] },
          "npc": "108",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (0) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 3); add the integers; push result (4)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (4) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "4" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "4" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 4 }, { 1, 2, 3 }); union; push result ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 3, 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "4" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "4" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (4, 4); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (4) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "4" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 4 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (4) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (5) to i; push new index (5) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (5) and True", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "5" }, "last": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "5" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (5) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 5); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "5" }, { "type": "bool", "value": "False" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (False), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "170",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "171",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } },
          "push": [ ],
          "pc": "170"
        },

        {
          "code": "Push { 1, 2, 3, 4, 5 }",
          "explain": "push constant { 1, 2, 3, 4, 5 }",
          "explain2": { "text": "push constant { 1, 2, 3, 4, 5 }", "args": [] },
          "npc": "172",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "171"
        },

        {
          "code": "LoadVar last",
          "explain": "push value ({ 4 }) of variable \"last\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "atom", "value": "last" } ] },
          "npc": "173",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "172"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "174",
          "local": { },
          "push": [ ],
          "pc": "173"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 4 }, { 1, 2, 3, 4, 5 }); the second integer minus the first; push result ({ 1, 2, 3, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "175",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] } ],
          "pc": "174"
        }

      ],
      "ctxbag": {
          "7fd199f0282a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd199f0282a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "175",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "5" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] }],
          "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "3",
      "tid": "0",
      "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
      "name": "__init__()",
      "choice": { "type": "int", "value": "2" },
      "context": {
        "tid": "0",
        "hvalue": "7fd199f0282a",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "175",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "5" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] }],
        "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ 1, 2, 3, 5 }) with choice (2)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "5" } ] }, { "type": "int", "value": "2" } ] },
          "choose": { "type": "int", "value": "2" },
          "npc": "176",
          "fp": "1",
          "trace": [
{"pc": "176","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "175"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (2) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3, 4]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, []); insert first value into the second; push result ([2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([2], [1, 2, 3, 4]); concatenate the lists; push result ([1, 2, 3, 4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4, 2]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock3]); insert first value into the second; push result ([?clock3, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock3, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([4, 2, 3], 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 4 }); union; push result ({ 2, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 2, 4 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock4]); insert first value into the second; push result ([?clock4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock4, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, 3, 4], 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1, 2, 3, 4 }); union; push result ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "1",
          "push": [ ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 3, 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (4, 4); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 2 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (5) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (6) to i; push new index (6) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (6) and True", "args": [ { "type": "int", "value": "5" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "6" }, "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "6" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (6) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "6" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 6); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "bool", "value": "False" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (False), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "170",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "171",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "push": [ ],
          "pc": "170"
        },

        {
          "code": "Push { 1, 2, 3, 4, 5 }",
          "explain": "push constant { 1, 2, 3, 4, 5 }",
          "explain2": { "text": "push constant { 1, 2, 3, 4, 5 }", "args": [] },
          "npc": "172",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "171"
        },

        {
          "code": "LoadVar last",
          "explain": "push value ({ 2 }) of variable \"last\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "atom", "value": "last" } ] },
          "npc": "173",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "172"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "174",
          "local": { },
          "push": [ ],
          "pc": "173"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 2 }, { 1, 2, 3, 4, 5 }); the second integer minus the first; push result ({ 1, 3, 4, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "175",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "174"
        }

      ],
      "ctxbag": {
          "7fd197f0054a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd197f0054a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "175",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "6" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
          "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "10",
      "tid": "0",
      "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } },
      "name": "__init__()",
      "choice": { "type": "int", "value": "1" },
      "context": {
        "tid": "0",
        "hvalue": "7fd197f0054a",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "175",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "6" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
        "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ 1, 3, 4, 5 }) with choice (1)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "int", "value": "1" } ] },
          "choose": { "type": "int", "value": "1" },
          "npc": "176",
          "fp": "1",
          "trace": [
{"pc": "176","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "175"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (1) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3, 4, 2]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, []); insert first value into the second; push result ([1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([1], [1, 2, 3, 4, 2]); concatenate the lists; push result ([1, 2, 3, 4, 2, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4, 2, 1]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?clock3]); insert first value into the second; push result ([?clock3, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 1]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] },
"method": "ref(?clock3, 1)","calltype": "normal","vars":{ "x": { "type": "int", "value": "1" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 1]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([4, 2, 3], 1); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 2, 4 }, 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 2 }, { 2, 4 }); the second integer minus the first; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 4 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 3])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2, 3]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][2]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 4 }, 3); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "3" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"entries\"][2]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2, 1]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 3); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "3" }, { "type": "int", "value": "0" } ] },
          "npc": "108",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (0) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 4); add the integers; push result (5)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (5) and address (?clock3[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "5" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 1 }, { 4 }); union; push result ({ 1, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 4 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?clock4]); insert first value into the second; push result ([?clock4, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 1]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] },
"method": "ref(?clock4, 1)","calltype": "normal","vars":{ "x": { "type": "int", "value": "1" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 1]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, 3, 4], 1); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 1 }, { 1, 2, 3, 4 }); union; push result ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "1",
          "push": [ ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 3, 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (5)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (5, 4); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 1 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (6) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (7) to i; push new index (7) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (7) and True", "args": [ { "type": "int", "value": "6" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "7" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "7" }, "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "7" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (7) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "7" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "7" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 7); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "7" }, { "type": "bool", "value": "False" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (False), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "170",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "171",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "push": [ ],
          "pc": "170"
        },

        {
          "code": "Push { 1, 2, 3, 4, 5 }",
          "explain": "push constant { 1, 2, 3, 4, 5 }",
          "explain2": { "text": "push constant { 1, 2, 3, 4, 5 }", "args": [] },
          "npc": "172",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "171"
        },

        {
          "code": "LoadVar last",
          "explain": "push value ({ 1 }) of variable \"last\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "atom", "value": "last" } ] },
          "npc": "173",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "172"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "174",
          "local": { },
          "push": [ ],
          "pc": "173"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 1 }, { 1, 2, 3, 4, 5 }); the second integer minus the first; push result ({ 2, 3, 4, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "175",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "174"
        }

      ],
      "ctxbag": {
          "7fd1b18010ba": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd1b18010ba",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "175",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "7" }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
          "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "38",
      "tid": "0",
      "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } },
      "name": "__init__()",
      "choice": { "type": "int", "value": "2" },
      "context": {
        "tid": "0",
        "hvalue": "7fd1b18010ba",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "175",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "7" }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
        "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ 2, 3, 4, 5 }) with choice (2)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "int", "value": "2" } ] },
          "choose": { "type": "int", "value": "2" },
          "npc": "176",
          "fp": "1",
          "trace": [
{"pc": "176","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "175"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (2) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3, 4, 2, 1]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, []); insert first value into the second; push result ([2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([2], [1, 2, 3, 4, 2, 1]); concatenate the lists; push result ([1, 2, 3, 4, 2, 1, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4, 2, 1, 2]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock3]); insert first value into the second; push result ([?clock3, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock3, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([4, 2, 1], 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1, 4 }); union; push result ({ 1, 2, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 4 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock4]); insert first value into the second; push result ([?clock4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock4, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, 3, 4], 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1, 2, 3, 4 }); union; push result ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "130",
          "pop": "1",
          "push": [ ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 3, 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (5)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (5, 4); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 2 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (7) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (8) to i; push new index (8) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (8) and True", "args": [ { "type": "int", "value": "7" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "8" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "8" }, "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "8" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (8) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "8" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "8" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 8); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "8" }, { "type": "bool", "value": "False" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (False), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "170",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "171",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "2" } ] } },
          "push": [ ],
          "pc": "170"
        },

        {
          "code": "Push { 1, 2, 3, 4, 5 }",
          "explain": "push constant { 1, 2, 3, 4, 5 }",
          "explain2": { "text": "push constant { 1, 2, 3, 4, 5 }", "args": [] },
          "npc": "172",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "171"
        },

        {
          "code": "LoadVar last",
          "explain": "push value ({ 2 }) of variable \"last\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "atom", "value": "last" } ] },
          "npc": "173",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "172"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "174",
          "local": { },
          "push": [ ],
          "pc": "173"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 2 }, { 1, 2, 3, 4, 5 }); the second integer minus the first; push result ({ 1, 3, 4, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "175",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "174"
        }

      ],
      "ctxbag": {
          "7fd199f02afa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd199f02afa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "175",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "8" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
          "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "273",
      "tid": "0",
      "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
      "name": "__init__()",
      "choice": { "type": "int", "value": "5" },
      "context": {
        "tid": "0",
        "hvalue": "7fd199f02afa",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "175",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "8" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
        "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ 1, 3, 4, 5 }) with choice (5)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "int", "value": "5" } ] },
          "choose": { "type": "int", "value": "5" },
          "npc": "176",
          "fp": "1",
          "trace": [
{"pc": "176","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "175"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (5) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "5" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "5" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3, 4, 2, 1, 2]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (5, []); insert first value into the second; push result ([5])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([5], [1, 2, 3, 4, 2, 1, 2]); concatenate the lists; push result ([1, 2, 3, 4, 2, 1, 2, 5])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4, 2, 1, 2, 5]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (5, [?clock3]); insert first value into the second; push result ([?clock3, 5])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "5" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "5" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 5]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "5" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "5" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "5" } ] },
"method": "ref(?clock3, 5)","calltype": "normal","vars":{ "x": { "type": "int", "value": "5" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "5" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 5]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "5" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "5" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "5" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([4, 2, 1], 5); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "5" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2, 4 }, 4); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 4 }, { 1, 2, 4 }); the second integer minus the first; push result ({ 1, 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2, 1]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2 }, 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 2 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 2 }, { 1, 2 }); the second integer minus the first; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2, 1]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][2]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1 }, 1); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][2]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 1 }, { 1 }); the second integer minus the first; push result ({})",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({}) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([4, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([4, 2, 1]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 3); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "3" }, { "type": "int", "value": "0" } ] },
          "npc": "81",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (0) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"][0]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({}, 4); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock3[\"entries\"]); push result (?clock3[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (5) and address (?clock3[\"entries\"][0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "5" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock3); push result (?clock3[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([5, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([5, 2, 1]); compute the length of the list; push result (3)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (3, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock3[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (5)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 5); add the integers; push result (6)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (6) and address (?clock3[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "6" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "5" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (5, {}); insert first value into the second; push result ({ 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 5 }, {}); union; push result ({ 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 5 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "5" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "5" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (5, [?clock4]); insert first value into the second; push result ([?clock4, 5])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "5" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "5" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 5]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "5" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "5" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "5" } ] },
"method": "ref(?clock4, 5)","calltype": "normal","vars":{ "x": { "type": "int", "value": "5" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "5" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 5]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "5" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "5" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "5" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([1, 2, 3, 4], 5); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "5" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][0]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 2, 3, 4 }, 1); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][0]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 1 }, { 1, 2, 3, 4 }); the second integer minus the first; push result ({ 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 2, 3, 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 2, 3, 4 }, 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 2, 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 2 }, { 2, 3, 4 }); the second integer minus the first; push result ({ 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 3, 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][2]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 3, 4 }, 3); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "3" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 3, 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][2]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (3, {}); insert first value into the second; push result ({ 3 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 3 }, { 3, 4 }); the second integer minus the first; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "3" } ] }, { "type": "set", "value": [{ "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 4 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 3); second value modulo the first; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "3" }, { "type": "int", "value": "3" } ] },
          "npc": "81",
          "pop": "1",
          "push": [ ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "4" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (3, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][3])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][3]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 4 }, 4); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" }, { "type": "bool", "value": "True" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (True), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "48",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "49",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "48"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "50",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "49"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "51",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "50"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "52",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "51"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 4 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "53",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "52"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "54",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "53"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "55",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "54"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "56",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "55"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "57",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "56"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "58",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "57"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "59",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "58"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "60",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "59"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "61",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "60"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (3, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][3])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ] },
          "npc": "62",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] } ],
          "pc": "61"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][3]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "3" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "63",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "62"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (4, {}); insert first value into the second; push result ({ 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ] },
          "npc": "64",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] } ],
          "pc": "63"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 4 }, { 4 }); the second integer minus the first; push result ({})",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [{ "type": "int", "value": "4" } ] }, { "type": "set", "value": [] } ] },
          "npc": "65",
          "pop": "2",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "64"
        },

        {
          "code": "Store",
          "explain": "pop value ({}) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "66",
          "pop": "2",
          "push": [ ],
          "pc": "65"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "67",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "66"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "68",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "67"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "69",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "68"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "70",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "69"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "71",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "70"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "72",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "71"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "73",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "72"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "74",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "73"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 3); add the integers; push result (4)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "74"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "76",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "75"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "77",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "76"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "78",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "77"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([1, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "79",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "78"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([1, 2, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "80",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "79"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 4); second value modulo the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "4" }, { "type": "int", "value": "0" } ] },
          "npc": "81",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "80"
        },

        {
          "code": "Store",
          "explain": "pop value (0) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "82",
          "pop": "2",
          "push": [ ],
          "pc": "81"
        },

        {
          "code": "Jump 33",
          "explain": "set program counter to 33",
          "explain2": { "text": "set program counter to 33", "args": [] },
          "npc": "33",
          "push": [ ],
          "pc": "82"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][0]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({}, 1); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (5) and address (?clock4[\"entries\"][0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "5" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "0" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (0)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "0" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 0); add the integers; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([5, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([5, 2, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 1); second value modulo the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "4" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (4)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 4); add the integers; push result (5)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (5) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "5" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "5" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({})",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (5, {}); insert first value into the second; push result ({ 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 5 }, {}); union; push result ({ 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 5 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "5" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "5" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (5)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (6)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (6, 5); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "6" }, { "type": "int", "value": "5" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (5) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "5" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (5, {}); insert first value into the second; push result ({ 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 5 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (8) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (9) to i; push new index (9) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (9) and True", "args": [ { "type": "int", "value": "8" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "9" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "9" }, "last": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "9" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (9) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "9" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "9" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 9); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "9" }, { "type": "bool", "value": "False" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (False), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "170",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "171",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } },
          "push": [ ],
          "pc": "170"
        },

        {
          "code": "Push { 1, 2, 3, 4, 5 }",
          "explain": "push constant { 1, 2, 3, 4, 5 }",
          "explain2": { "text": "push constant { 1, 2, 3, 4, 5 }", "args": [] },
          "npc": "172",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "171"
        },

        {
          "code": "LoadVar last",
          "explain": "push value ({ 5 }) of variable \"last\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "atom", "value": "last" } ] },
          "npc": "173",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "172"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "174",
          "local": { },
          "push": [ ],
          "pc": "173"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 5 }, { 1, 2, 3, 4, 5 }); the second integer minus the first; push result ({ 1, 2, 3, 4 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "175",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "174"
        }

      ],
      "ctxbag": {
          "7fd1ad807dfa": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd1ad807dfa",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "175",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "9" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }],
          "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "914",
      "tid": "0",
      "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } },
      "name": "__init__()",
      "choice": { "type": "int", "value": "1" },
      "context": {
        "tid": "0",
        "hvalue": "7fd1ad807dfa",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "175",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "9" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }],
        "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ 1, 2, 3, 4 }) with choice (1)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "1" } ] },
          "choose": { "type": "int", "value": "1" },
          "npc": "176",
          "fp": "1",
          "trace": [
{"pc": "176","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "175"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (1) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "1" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3, 4, 2, 1, 2, 5]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, []); insert first value into the second; push result ([1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([1], [1, 2, 3, 4, 2, 1, 2, 5]); concatenate the lists; push result ([1, 2, 3, 4, 2, 1, 2, 5, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4, 2, 1, 2, 5, 1]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?clock3]); insert first value into the second; push result ([?clock3, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 1]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] },
"method": "ref(?clock3, 1)","calltype": "normal","vars":{ "x": { "type": "int", "value": "1" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 1]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([5, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([5, 2, 1], 1); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 5 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 1 }, { 5 }); union; push result ({ 1, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 5 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (1, [?clock4]); insert first value into the second; push result ([?clock4, 1])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 1]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] },
"method": "ref(?clock4, 1)","calltype": "normal","vars":{ "x": { "type": "int", "value": "1" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 1]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "1" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "1" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([5, 2, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([5, 2, 3, 4], 1); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "1" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][1]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 5 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 5 }, 2); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (1) and address (?clock4[\"entries\"][1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (1)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "1" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 1); add the integers; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([5, 1, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([5, 1, 3, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 2); second value modulo the first; push result (2)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "2" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "5" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (5)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "5" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 5); add the integers; push result (6)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (6) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "6" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "1" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 5 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "5" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 1 }, { 5 }); union; push result ({ 1, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 5 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "1" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (6)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (6)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (6, 6); check if second value is less than or equal to the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "6" }, { "type": "int", "value": "6" }, { "type": "bool", "value": "True" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (True); do not raise exception",
          "explain2": { "text": "pop a value (True); do not raise exception", "args": [ ] },
          "npc": "209",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        },

        {
          "code": "ReadonlyDec",
          "explain": "decrement readonly counter from 1 to 0: no longer readonly",
          "explain2": { "text": "decrement readonly counter from 1 to 0: no longer readonly", "args": [ ] },
          "npc": "210",
          "readonly": "0",
          "push": [ ],
          "pc": "209"
        },

        {
          "code": "AtomicDec",
          "explain": "decrement atomic counter from 2 to 1: remains atomic",
          "explain2": { "text": "decrement atomic counter from 2 to 1: remains atomic", "args": [ ] },
          "npc": "211",
          "atomic": "1",
          "push": [ ],
          "pc": "210"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "212",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "211"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (1) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "x" } ] },
          "npc": "213",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "212"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "214",
          "local": { },
          "push": [ ],
          "pc": "213"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (1, {}); insert first value into the second; push result ({ 1 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "215",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "214"
        },

        {
          "code": "StoreVar last",
          "explain": "pop value ({ 1 }) and store locally in variable \\\"last\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"last\"", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "216",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "pop": "1",
          "push": [ ],
          "pc": "215"
        },

        {
          "code": "Jump 160",
          "explain": "set program counter to 160",
          "explain2": { "text": "set program counter to 160", "args": [] },
          "npc": "160",
          "push": [ ],
          "pc": "216"
        },

        {
          "code": "Cut(i)",
          "explain": "pop index (9) and value ({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100 }); assign value (10) to i; push new index (10) and True",
          "explain2": { "text": "pop index (#+) and value (#+); assign value (#+) to i; push new index (10) and True", "args": [ { "type": "int", "value": "9" }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "10" } ] },
          "npc": "161",
          "local": { "i": { "type": "int", "value": "10" }, "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "pop": "1",
          "push": [ { "type": "int", "value": "10" }, { "type": "bool", "value": "True" } ],
          "pc": "160"
        },

        {
          "code": "JumpCond False 217",
          "explain": "pop value (True), compare to False, and jump to 217 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 217 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "162",
          "pop": "1",
          "push": [ ],
          "pc": "161"
        },

        {
          "code": "LoadVar i",
          "explain": "push value (10) of variable \"i\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "10" }, { "type": "atom", "value": "i" } ] },
          "npc": "163",
          "push": [ { "type": "int", "value": "10" } ],
          "pc": "162"
        },

        {
          "code": "Push 5",
          "explain": "push constant 5",
          "explain2": { "text": "push constant 5", "args": [] },
          "npc": "164",
          "push": [ { "type": "int", "value": "5" } ],
          "pc": "163"
        },

        {
          "code": "2-ary <",
          "explain": "pop 2 values (5, 10); check if second value is less than the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than the first; push result (#+)", "args": [ { "type": "int", "value": "5" }, { "type": "int", "value": "10" }, { "type": "bool", "value": "False" } ] },
          "npc": "165",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "164"
        },

        {
          "code": "JumpCond False 170",
          "explain": "pop value (False), compare to False, and jump to 170 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 170 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "170",
          "pop": "1",
          "push": [ ],
          "pc": "165"
        },

        {
          "code": "DelVar i",
          "explain": "delete method variable i",
          "explain2": { "text": "delete method variable i", "args": [] },
          "npc": "171",
          "local": { "last": { "type": "set", "value": [{ "type": "int", "value": "1" } ] } },
          "push": [ ],
          "pc": "170"
        },

        {
          "code": "Push { 1, 2, 3, 4, 5 }",
          "explain": "push constant { 1, 2, 3, 4, 5 }",
          "explain2": { "text": "push constant { 1, 2, 3, 4, 5 }", "args": [] },
          "npc": "172",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "171"
        },

        {
          "code": "LoadVar last",
          "explain": "push value ({ 1 }) of variable \"last\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "atom", "value": "last" } ] },
          "npc": "173",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] } ],
          "pc": "172"
        },

        {
          "code": "DelVar last",
          "explain": "delete method variable last",
          "explain2": { "text": "delete method variable last", "args": [] },
          "npc": "174",
          "local": { },
          "push": [ ],
          "pc": "173"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values ({ 1 }, { 1, 2, 3, 4, 5 }); the second integer minus the first; push result ({ 2, 3, 4, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "175",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } ],
          "pc": "174"
        }

      ],
      "ctxbag": {
          "7fd1ad80d5ca": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd1ad80d5ca",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "175",
          "sp": "4",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "10" }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
          "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "5230",
      "tid": "0",
      "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } },
      "name": "__init__()",
      "choice": { "type": "int", "value": "2" },
      "context": {
        "tid": "0",
        "hvalue": "7fd1ad80d5ca",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "175",
        "sp": "4",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "10" }, { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }],
        "trace": [
{"pc": "175","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ 2, 3, 4, 5 }) with choice (2)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" } ] }, { "type": "int", "value": "2" } ] },
          "choose": { "type": "int", "value": "2" },
          "npc": "176",
          "fp": "1",
          "trace": [
{"pc": "176","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "175"
        },

        {
          "code": "StoreVar x",
          "explain": "pop value (2) and store locally in variable \\\"x\\\"",
          "explain2": { "text": "pop value (#+) and store locally in variable \"x\"", "args": [ { "type": "int", "value": "2" } ] },
          "npc": "177",
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ ],
          "pc": "176"
        },

        {
          "code": "Load refs",
          "explain": "push value ([1, 2, 3, 4, 2, 1, 2, 5, 1]) of variable refs",
          "explain2": { "text": "push value (#+) of variable refs", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "178",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] } ],
          "pc": "177"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "179",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "178"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "180",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "179"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, []); insert first value into the second; push result ([2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "181",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "180"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values ([2], [1, 2, 3, 4, 2, 1, 2, 5, 1]); concatenate the lists; push result ([1, 2, 3, 4, 2, 1, 2, 5, 1, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); concatenate the lists; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "2" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" } ] }, { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "182",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } ],
          "pc": "181"
        },

        {
          "code": "Store refs",
          "explain": "pop value ([1, 2, 3, 4, 2, 1, 2, 5, 1, 2]) and store into variable refs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "refs" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "183",
          "pop": "1",
          "push": [ ],
          "pc": "182"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "184",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "183"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "185",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "184"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock3, []); insert first value into the second; push result ([?clock3])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ] },
          "npc": "186",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] } ],
          "pc": "185"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "187",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "186"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock3]); insert first value into the second; push result ([?clock3, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "188",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "187"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock3, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock3, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3010" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "188"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock3, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock3); push result (?clock3[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"entries\"]) and push value ([5, 2, 1])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([5, 2, 1], 2); check if the second value is a member of the first; push result (True)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "True" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (True), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] },
          "npc": "117",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock3) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock3); push result (?clock3[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"recent\"]) and push value ({ 1, 5 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1, 5 }); union; push result ({ 1, 2, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 5 }) and address (?clock3[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "189",
          "fp": "1",
          "trace": [
{"pc": "189","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "190",
          "pop": "1",
          "push": [ ],
          "pc": "189"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "191",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "190"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "192",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "191"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (?clock4, []); insert first value into the second; push result ([?clock4])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ] },
          "npc": "193",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] } ],
          "pc": "192"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "194",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "193"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (2, [?clock4]); insert first value into the second; push result ([?clock4, 2])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ] }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ] },
          "npc": "195",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "194"
        },

        {
          "code": "Apply PC(25)",
          "explain": "pop an argument ([?clock4, 2]) and call method (25: \"ref\")",
          "explain2": { "text": "pop an argument (#+) and call method (25: #+)", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "25",
          "fp": "6",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0},{"pc": "25","xpc": "25","method_name": { "type": "atom", "value": "ref" },
"method_arg": { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] },
"method": "ref(?clock4, 2)","calltype": "normal","vars":{ "x": { "type": "int", "value": "2" } },"sp": 5}
          ],
          "pop": "1",
          "push": [ { "type": "list", "value": [] }, { "type": "int", "value": "3122" }, { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] } ],
          "pc": "195"
        },

        {
          "code": "Frame ref(clock, x)",
          "explain": "pop argument ([?clock4, 2]), assign to (clock, x), and run method \"ref\"",
          "explain2": { "text": "pop argument (#+), assign to (clock, x), and run method #+", "args": [ { "type": "list", "value": [{ "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "int", "value": "2" } ] }, { "type": "atom", "value": "ref" } ] },
          "npc": "26",
          "local": { "clock": { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, "x": { "type": "int", "value": "2" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [{ "key": { "type": "atom", "value": "x" }, "value": { "type": "int", "value": "2" } } ] } ],
          "pc": "25"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "27",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "26"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "28",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "27"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "29",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "28"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "30",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "29"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([5, 1, 3, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "31",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] } ],
          "pc": "30"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ([5, 1, 3, 4], 2); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "2" }, { "type": "bool", "value": "False" } ] },
          "npc": "32",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "31"
        },

        {
          "code": "JumpCond True 117",
          "explain": "pop value (False), compare to True, and jump to 117 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 117 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "33",
          "pop": "1",
          "push": [ ],
          "pc": "32"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "34",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "33"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "35",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "34"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "36",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "35"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "37",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "36"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "38",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "37"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "38"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "40",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "39"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "41",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "40"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"][2]) and push value (3)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] }, { "type": "int", "value": "3" } ] },
          "npc": "42",
          "pop": "1",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "41"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "43",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "42"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "44",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "43"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "45",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "44"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 5 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "46",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ],
          "pc": "45"
        },

        {
          "code": "2-ary in",
          "explain": "pop 2 values ({ 1, 5 }, 3); check if the second value is a member of the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if the second value is a member of the first; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] }, { "type": "int", "value": "3" }, { "type": "bool", "value": "False" } ] },
          "npc": "47",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "46"
        },

        {
          "code": "JumpCond False 83",
          "explain": "pop value (False), compare to False, and jump to 83 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 83 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] },
          "npc": "83",
          "pop": "1",
          "push": [ ],
          "pc": "47"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "84",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "83"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "85",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "84"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "86",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "85"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "87",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "86"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "88",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "87"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "89",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "88"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "90",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "89"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (2, ?clock4[\"entries\"]); push result (?clock4[\"entries\"][2])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "npc": "91",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ],
          "pc": "90"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "92",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "91"
        },

        {
          "code": "Store",
          "explain": "pop value (2) and address (?clock4[\"entries\"][2]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "2" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" }, { "type": "int", "value": "2" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "2" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "93",
          "pop": "2",
          "push": [ ],
          "pc": "92"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "94",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "93"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "95",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "94"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "96",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "95"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "97",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "96"
        },

        {
          "code": "Push \"hand\"",
          "explain": "push constant \"hand\"",
          "explain2": { "text": "push constant \"hand\"", "args": [] },
          "npc": "98",
          "push": [ { "type": "atom", "value": "hand" } ],
          "pc": "97"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"hand\", ?clock4); push result (?clock4[\"hand\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "hand" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "npc": "99",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ],
          "pc": "98"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"hand\"]) and push value (2)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] }, { "type": "int", "value": "2" } ] },
          "npc": "100",
          "pop": "1",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "99"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "101",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "100"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 2); add the integers; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" } ] },
          "npc": "102",
          "pop": "2",
          "push": [ { "type": "int", "value": "3" } ],
          "pc": "101"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "103",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "102"
        },

        {
          "code": "Push \"entries\"",
          "explain": "push constant \"entries\"",
          "explain2": { "text": "push constant \"entries\"", "args": [] },
          "npc": "104",
          "push": [ { "type": "atom", "value": "entries" } ],
          "pc": "103"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"entries\", ?clock4); push result (?clock4[\"entries\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "entries" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ] },
          "npc": "105",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] } ],
          "pc": "104"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"entries\"]) and push value ([5, 1, 2, 4])",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "entries" } ] }, { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ] },
          "npc": "106",
          "pop": "1",
          "push": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } ],
          "pc": "105"
        },

        {
          "code": "1-ary len",
          "explain": "pop a value ([5, 1, 2, 4]); compute the length of the list; push result (4)",
          "explain2": { "text": "pop a value (#+); compute the length of the list; push result (#+)", "args": [ { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] }, { "type": "int", "value": "4" } ] },
          "npc": "107",
          "pop": "1",
          "push": [ { "type": "int", "value": "4" } ],
          "pc": "106"
        },

        {
          "code": "2-ary %",
          "explain": "pop 2 values (4, 3); second value modulo the first; push result (3)",
          "explain2": { "text": "pop 2 values (#+, #+); second value modulo the first; push result (#+)", "args": [ { "type": "int", "value": "4" }, { "type": "int", "value": "3" }, { "type": "int", "value": "3" } ] },
          "npc": "108",
          "pop": "1",
          "push": [ ],
          "pc": "107"
        },

        {
          "code": "Store",
          "explain": "pop value (3) and address (?clock4[\"hand\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "3" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "hand" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "109",
          "pop": "2",
          "push": [ ],
          "pc": "108"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "110",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "109"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "111",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "110"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "112",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "111"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "113",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "112"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (6)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "114",
          "pop": "1",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "113"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "115",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "114"
        },

        {
          "code": "2-ary +",
          "explain": "pop 2 values (1, 6); add the integers; push result (7)",
          "explain2": { "text": "pop 2 values (#+, #+); add the integers; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" } ] },
          "npc": "116",
          "pop": "2",
          "push": [ { "type": "int", "value": "7" } ],
          "pc": "115"
        },

        {
          "code": "Store",
          "explain": "pop value (7) and address (?clock4[\"misses\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "int", "value": "7" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "7" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "117",
          "pop": "2",
          "push": [ ],
          "pc": "116"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "118",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "117"
        },

        {
          "code": "JumpCond True 131",
          "explain": "pop value (False), compare to True, and jump to 131 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 131 if the same", "args": [ { "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] },
          "npc": "119",
          "pop": "1",
          "push": [ ],
          "pc": "118"
        },

        {
          "code": "LoadVar clock",
          "explain": "push value (?clock4) of variable \"clock\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "atom", "value": "clock" } ] },
          "npc": "120",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "119"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "121",
          "local": { "x": { "type": "int", "value": "2" } },
          "push": [ ],
          "pc": "120"
        },

        {
          "code": "Push \"recent\"",
          "explain": "push constant \"recent\"",
          "explain2": { "text": "push constant \"recent\"", "args": [] },
          "npc": "122",
          "push": [ { "type": "atom", "value": "recent" } ],
          "pc": "121"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"recent\", ?clock4); push result (?clock4[\"recent\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "recent" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "npc": "123",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "122"
        },

        {
          "code": "Dup",
          "explain": "push a copy of the top value on the stack",
          "explain2": { "text": "push a copy of the top value on the stack", "args": [] },
          "npc": "124",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ],
          "pc": "123"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"recent\"]) and push value ({ 1, 5 })",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "125",
          "pop": "1",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] } ],
          "pc": "124"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "126",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "125"
        },

        {
          "code": "LoadVar x",
          "explain": "push value (2) of variable \"x\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "2" }, { "type": "atom", "value": "x" } ] },
          "npc": "127",
          "push": [ { "type": "int", "value": "2" } ],
          "pc": "126"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "128",
          "local": { },
          "push": [ ],
          "pc": "127"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (2, {}); insert first value into the second; push result ({ 2 })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "int", "value": "2" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ] },
          "npc": "129",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] } ],
          "pc": "128"
        },

        {
          "code": "2-ary |",
          "explain": "pop 2 values ({ 2 }, { 1, 5 }); union; push result ({ 1, 2, 5 })",
          "explain2": { "text": "pop 2 values (#+, #+); union; push result (#+)", "args": [ { "type": "set", "value": [{ "type": "int", "value": "2" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "5" } ] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ] },
          "npc": "130",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } ],
          "pc": "129"
        },

        {
          "code": "Store",
          "explain": "pop value ({ 1, 2, 5 }) and address (?clock4[\"recent\"]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "recent" } ] } ] },
          "shared": { "clock3": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "1" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "6" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } } ] }, "clock4": { "type": "dict", "value": [{ "key": { "type": "atom", "value": "entries" }, "value": { "type": "list", "value": [{ "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "4" } ] } }, { "key": { "type": "atom", "value": "hand" }, "value": { "type": "int", "value": "3" } }, { "key": { "type": "atom", "value": "misses" }, "value": { "type": "int", "value": "7" } }, { "key": { "type": "atom", "value": "recent" }, "value": { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" } ] } } ] }, "refs": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "2" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "5" }, { "type": "int", "value": "1" }, { "type": "int", "value": "2" } ] } },
          "npc": "131",
          "pop": "2",
          "push": [ ],
          "pc": "130"
        },

        {
          "code": "DelVar clock",
          "explain": "delete method variable clock",
          "explain2": { "text": "delete method variable clock", "args": [] },
          "npc": "132",
          "push": [ ],
          "pc": "131"
        },

        {
          "code": "DelVar x",
          "explain": "delete method variable x",
          "explain2": { "text": "delete method variable x", "args": [] },
          "npc": "133",
          "push": [ ],
          "pc": "132"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "196",
          "fp": "1",
          "trace": [
{"pc": "196","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "local": { "x": { "type": "int", "value": "2" } },
          "pop": "3",
          "push": [ { "type": "address" } ],
          "pc": "133"
        },

        {
          "code": "Pop",
          "explain": "pop and discard value ()",
          "explain2": { "text": "pop and discard value ()", "args": [ { "type": "address" } ] },
          "npc": "197",
          "pop": "1",
          "push": [ ],
          "pc": "196"
        },

        {
          "code": "AtomicInc(lazy)",
          "explain": "increment atomic counter from 1 to 2: remains atomic",
          "explain2": { "text": "increment atomic counter from 1 to 2: remains atomic", "args": [ ] },
          "npc": "198",
          "atomic": "2",
          "push": [ ],
          "pc": "197"
        },

        {
          "code": "ReadonlyInc",
          "explain": "increment readonly counter from 0 to 1: becomes readonly",
          "explain2": { "text": "increment readonly counter from 0 to 1: becomes readonly", "args": [ ] },
          "npc": "199",
          "readonly": "1",
          "push": [ ],
          "pc": "198"
        },

        {
          "code": "Push ?clock4",
          "explain": "push constant ?clock4",
          "explain2": { "text": "push constant ?clock4", "args": [] },
          "npc": "200",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] } ],
          "pc": "199"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "201",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "200"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock4); push result (?clock4[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "202",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "201"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock4[\"misses\"]) and push value (7)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock4" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "7" } ] },
          "npc": "203",
          "pop": "1",
          "push": [ { "type": "int", "value": "7" } ],
          "pc": "202"
        },

        {
          "code": "Push ?clock3",
          "explain": "push constant ?clock3",
          "explain2": { "text": "push constant ?clock3", "args": [] },
          "npc": "204",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] } ],
          "pc": "203"
        },

        {
          "code": "Push \"misses\"",
          "explain": "push constant \"misses\"",
          "explain2": { "text": "push constant \"misses\"", "args": [] },
          "npc": "205",
          "push": [ { "type": "atom", "value": "misses" } ],
          "pc": "204"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (\"misses\", ?clock3); push result (?clock3[\"misses\"])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "atom", "value": "misses" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ] },
          "npc": "206",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] } ],
          "pc": "205"
        },

        {
          "code": "Load",
          "explain": "pop address (?clock3[\"misses\"]) and push value (6)",
          "explain2": { "text": "pop address (#+) and push value (#+)", "args": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "clock3" }, { "type": "atom", "value": "misses" } ] }, { "type": "int", "value": "6" } ] },
          "npc": "207",
          "pop": "1",
          "push": [ { "type": "int", "value": "6" } ],
          "pc": "206"
        },

        {
          "code": "2-ary <=",
          "explain": "pop 2 values (6, 7); check if second value is less than or equal to the first; push result (False)",
          "explain2": { "text": "pop 2 values (#+, #+); check if second value is less than or equal to the first; push result (#+)", "args": [ { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "bool", "value": "False" } ] },
          "npc": "208",
          "pop": "2",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "207"
        },

        {
          "code": "Assert",
          "explain": "pop a value (False) and raise exception",
          "explain2": { "text": "pop a value (False) and raise exception", "args": [ ] },
          "npc": "208",
          "failure": "Harmony assertion failed",
          "mode": "failed",
          "pop": "1",
          "push": [ ],
          "pc": "208"
        }

      ],
      "ctxbag": {
          "7fd199f4723a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7fd199f4723a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "208",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "2" }, { "type": "int", "value": "3" }, { "type": "int", "value": "4" }, { "type": "int", "value": "5" }, { "type": "int", "value": "6" }, { "type": "int", "value": "7" }, { "type": "int", "value": "8" }, { "type": "int", "value": "9" }, { "type": "int", "value": "10" }, { "type": "int", "value": "11" }, { "type": "int", "value": "12" }, { "type": "int", "value": "13" }, { "type": "int", "value": "14" }, { "type": "int", "value": "15" }, { "type": "int", "value": "16" }, { "type": "int", "value": "17" }, { "type": "int", "value": "18" }, { "type": "int", "value": "19" }, { "type": "int", "value": "20" }, { "type": "int", "value": "21" }, { "type": "int", "value": "22" }, { "type": "int", "value": "23" }, { "type": "int", "value": "24" }, { "type": "int", "value": "25" }, { "type": "int", "value": "26" }, { "type": "int", "value": "27" }, { "type": "int", "value": "28" }, { "type": "int", "value": "29" }, { "type": "int", "value": "30" }, { "type": "int", "value": "31" }, { "type": "int", "value": "32" }, { "type": "int", "value": "33" }, { "type": "int", "value": "34" }, { "type": "int", "value": "35" }, { "type": "int", "value": "36" }, { "type": "int", "value": "37" }, { "type": "int", "value": "38" }, { "type": "int", "value": "39" }, { "type": "int", "value": "40" }, { "type": "int", "value": "41" }, { "type": "int", "value": "42" }, { "type": "int", "value": "43" }, { "type": "int", "value": "44" }, { "type": "int", "value": "45" }, { "type": "int", "value": "46" }, { "type": "int", "value": "47" }, { "type": "int", "value": "48" }, { "type": "int", "value": "49" }, { "type": "int", "value": "50" }, { "type": "int", "value": "51" }, { "type": "int", "value": "52" }, { "type": "int", "value": "53" }, { "type": "int", "value": "54" }, { "type": "int", "value": "55" }, { "type": "int", "value": "56" }, { "type": "int", "value": "57" }, { "type": "int", "value": "58" }, { "type": "int", "value": "59" }, { "type": "int", "value": "60" }, { "type": "int", "value": "61" }, { "type": "int", "value": "62" }, { "type": "int", "value": "63" }, { "type": "int", "value": "64" }, { "type": "int", "value": "65" }, { "type": "int", "value": "66" }, { "type": "int", "value": "67" }, { "type": "int", "value": "68" }, { "type": "int", "value": "69" }, { "type": "int", "value": "70" }, { "type": "int", "value": "71" }, { "type": "int", "value": "72" }, { "type": "int", "value": "73" }, { "type": "int", "value": "74" }, { "type": "int", "value": "75" }, { "type": "int", "value": "76" }, { "type": "int", "value": "77" }, { "type": "int", "value": "78" }, { "type": "int", "value": "79" }, { "type": "int", "value": "80" }, { "type": "int", "value": "81" }, { "type": "int", "value": "82" }, { "type": "int", "value": "83" }, { "type": "int", "value": "84" }, { "type": "int", "value": "85" }, { "type": "int", "value": "86" }, { "type": "int", "value": "87" }, { "type": "int", "value": "88" }, { "type": "int", "value": "89" }, { "type": "int", "value": "90" }, { "type": "int", "value": "91" }, { "type": "int", "value": "92" }, { "type": "int", "value": "93" }, { "type": "int", "value": "94" }, { "type": "int", "value": "95" }, { "type": "int", "value": "96" }, { "type": "int", "value": "97" }, { "type": "int", "value": "98" }, { "type": "int", "value": "99" }, { "type": "int", "value": "100" } ] }, { "type": "int", "value": "10" }],
          "trace": [
{"pc": "208","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ "x": { "type": "int", "value": "2" } },"sp": 0}
          ],
          "failure": "Harmony assertion failed",
          "this": { "type": "dict", "value": [] },
          "atomic": "2",
          "readonly": "1",
          "mode": "failed"
        }
      ]
    }

  ]
}
