{
  "nstates": 2,
  "issue": "No issues",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/lock.hny",
            "lines": [
                "def Lock() returns result:",
                "    result = False",
                "",
                "def acquire(lk):",
                "    atomically when not !lk:",
                "        !lk = True",
                "",
                "def release(lk):",
                "    atomically:",
                "        assert !lk",
                "        !lk = False"
              ],
            "identifiers": {
                "release": "constant",
                "this": "local-var",
                "Lock": "constant",
                "lk": "local-const",
                "___": "___",
                "acquire": "constant"
              }
          }
      },
    "labels": {
        "__end__": 44
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 42",
            "jump over method definition: set program counter to 42"
          ],
        [
            "Frame Lock()",
            "start of method Lock"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 42",
            "jump over method definition: set program counter to 42"
          ],
        [
            "Frame acquire(lk)",
            "start of method acquire"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 16",
            "pop a value and jump to 16 if the value is False"
          ],
        [
            "Jump 19",
            "set program counter to 19"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 9",
            "set program counter to 9"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "DelVar lk",
            "delete method variable lk"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 42",
            "jump over method definition: set program counter to 42"
          ],
        [
            "Frame release(lk)",
            "start of method release"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar lk",
            "push the value of lk"
          ],
        [
            "DelVar lk",
            "delete method variable lk"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                1,
                1,
                12,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                18
              ],
            "line": 2,
            "endcolumn": 18,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                18
              ],
            "line": 2,
            "endcolumn": 18,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                18
              ],
            "line": 2,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                16
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                16
              ],
            "line": 4,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                5,
                16,
                7,
                6
              ],
            "line": 5,
            "endcolumn": 6,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                7,
                6
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                9,
                6,
                18
              ],
            "line": 6,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                16,
                5,
                27
              ],
            "line": 5,
            "endcolumn": 27,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                16
              ],
            "line": 4,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                16
              ],
            "line": 8,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                16
              ],
            "line": 8,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                15
              ],
            "line": 9,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 19,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                9,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                15
              ],
            "line": 9,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                1,
                8,
                16
              ],
            "line": 8,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                1,
                1,
                12,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                1,
                1,
                12,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "42",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Lock",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "42",
            "op": "Jump"
          },
        {
            "args": "lk",
            "name": "acquire",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "16",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "19",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "9",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": "lk",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "42",
            "op": "Jump"
          },
        {
            "args": "lk",
            "name": "release",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "lk",
            "op": "LoadVar"
          },
        {
            "value": "lk",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "symbols": {

  },
  "nodes": [
    {
      "idx": 0,
      "transitions": [

      ],
      "type": "initial"
    }
  ],
  "profile": [
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0
  ]
}
