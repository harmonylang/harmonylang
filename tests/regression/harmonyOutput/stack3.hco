{
  "nstates": 2,
  "issue": "No issues",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/stack3.hny",
            "lines": [
                "def Stack() returns stack:",
                "    stack = ()",
                "",
                "def push(st, v):",
                "    (!st) = (v, !st)",
                "",
                "def pop(st) returns next:",
                "    let (top, rest) = !st:",
                "        next = top",
                "        !st = rest"
              ],
            "identifiers": {
                "top": "local-const",
                "rest": "local-const",
                "this": "local-var",
                "v": "local-const",
                "Stack": "constant",
                "___": "___",
                "pop": "constant",
                "st": "local-const",
                "push": "constant"
              }
          }
      },
    "labels": {
        "__end__": 37
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 35",
            "jump over method definition: set program counter to 35"
          ],
        [
            "Frame Stack()",
            "start of method Stack"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "StoreVar stack",
            "pop a value and store in stack"
          ],
        [
            "ReturnOp(stack)",
            "restore caller method state and push stack"
          ],
        [
            "DelVar stack",
            "delete method variable stack"
          ],
        [
            "Jump 35",
            "jump over method definition: set program counter to 35"
          ],
        [
            "Frame push(st, v)",
            "start of method push"
          ],
        [
            "LoadVar st",
            "push the value of st"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar st",
            "push the value of st"
          ],
        [
            "DelVar st",
            "delete method variable st"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 35",
            "jump over method definition: set program counter to 35"
          ],
        [
            "Frame pop(st)",
            "start of method pop"
          ],
        [
            "LoadVar st",
            "push the value of st"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar (top, rest)",
            "pop a value and store in (top, rest)"
          ],
        [
            "LoadVar top",
            "push the value of top"
          ],
        [
            "DelVar top",
            "delete method variable top"
          ],
        [
            "StoreVar next",
            "pop a value and store in next"
          ],
        [
            "LoadVar st",
            "push the value of st"
          ],
        [
            "DelVar st",
            "delete method variable st"
          ],
        [
            "LoadVar rest",
            "push the value of rest"
          ],
        [
            "DelVar rest",
            "delete method variable rest"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "ReturnOp(next)",
            "restore caller method state and push next"
          ],
        [
            "DelVar next",
            "delete method variable next"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                1,
                1,
                11,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                14
              ],
            "line": 2,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                14
              ],
            "line": 2,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                26
              ],
            "line": 1,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                16
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                16
              ],
            "line": 4,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 8,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 19,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 19,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 19,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                20
              ],
            "line": 5,
            "endcolumn": 11,
            "column": 6
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                16
              ],
            "line": 4,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                25
              ],
            "line": 8,
            "endcolumn": 25,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                25
              ],
            "line": 8,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                25
              ],
            "line": 8,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                18
              ],
            "line": 9,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                18
              ],
            "line": 9,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                18
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 11,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                18
              ],
            "line": 10,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                25
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                1,
                1,
                11,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                1,
                1,
                11,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "35",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "Stack",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "stack",
            "op": "StoreVar"
          },
        {
            "result": "stack",
            "op": "Return"
          },
        {
            "value": "stack",
            "op": "DelVar"
          },
        {
            "pc": "35",
            "op": "Jump"
          },
        {
            "args": "(st, v)",
            "name": "push",
            "op": "Frame"
          },
        {
            "value": "st",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "st",
            "op": "LoadVar"
          },
        {
            "value": "st",
            "op": "DelVar"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "35",
            "op": "Jump"
          },
        {
            "args": "st",
            "name": "pop",
            "op": "Frame"
          },
        {
            "value": "st",
            "op": "LoadVar"
          },
        {
            "op": "Load"
          },
        {
            "value": "(top, rest)",
            "op": "StoreVar"
          },
        {
            "value": "top",
            "op": "LoadVar"
          },
        {
            "value": "top",
            "op": "DelVar"
          },
        {
            "value": "next",
            "op": "StoreVar"
          },
        {
            "value": "st",
            "op": "LoadVar"
          },
        {
            "value": "st",
            "op": "DelVar"
          },
        {
            "value": "rest",
            "op": "LoadVar"
          },
        {
            "value": "rest",
            "op": "DelVar"
          },
        {
            "op": "Store"
          },
        {
            "result": "next",
            "op": "Return"
          },
        {
            "value": "next",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "symbols": {

  },
  "nodes": [
    {
      "idx": 0,
      "transitions": [

      ],
      "type": "initial"
    }
  ],
  "profile": [
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0
  ]
}
