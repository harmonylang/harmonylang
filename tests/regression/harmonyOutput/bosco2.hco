{
  "nstates": 581,
  "issue": "No issues",
  "hvm": {
    "modules": {
        "bag": {
            "file": "/private/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmp1l3504ko/env/lib/python3.12/site-packages/harmony_model_checker/modules/bag.hny",
            "lines": [
                "def empty() returns bg:",
                "    bg = {:}",
                "",
                "def fromSet(s) returns bg:",
                "    bg = { elt:1 for elt in s }",
                "",
                "def fromList(a) returns bg:",
                "    bg = {:}",
                "    for v in a:",
                "        if v in bg:",
                "            bg[v] += 1",
                "        else:",
                "            bg[v] = 1",
                "",
                "builtin multiplicity \"bag$multiplicity\"",
                "def multiplicity(bg, elt) returns count:",
                "    if elt in bg:",
                "        count = bg[elt]",
                "    else:",
                "        count = 0",
                "",
                "builtin size \"bag$size\"",
                "def size(bg) returns count:",
                "    count = 0",
                "    for _:c in bg:",
                "        count += c",
                "",
                "builtin bmin \"bag$bmin\"",
                "def bmin(bg) returns count:",
                "    assert bg != {:}",
                "    count = min(keys(bg))",
                "",
                "builtin bmax \"bag$bmax\"",
                "def bmax(bg) returns count:",
                "    assert bg != {:}",
                "    count = max(keys(bg))",
                "",
                "def bchoose(bg) returns elt:",
                "    elt = choose(keys(bg))",
                "",
                "builtin add \"bag$add\"",
                "def add(bg, elt) returns result:",
                "    result = bg",
                "    if elt in result:",
                "        result[elt] += 1",
                "    else:",
                "        result[elt] = 1",
                "",
                "builtin remove \"bag$remove\"",
                "def remove(bg, elt) returns result:",
                "    result = bg",
                "    if elt in result:",
                "        assert result[elt] > 0",
                "        result[elt] -= 1",
                "        if result[elt] == 0:",
                "            del result[elt]",
                "",
                "# Return set of all subbags of bg of size k",
                "def combinations(bg, k) returns result:",
                "    if k == 0:",
                "        result = { {:} }",
                "    else:",
                "        let n = size(bg):",
                "            if k > n:",
                "                result = {}",
                "            elif k == n:",
                "                result = { bg }",
                "            else:",
                "                let hd = bmin(bg) let tl = remove(bg, hd):",
                "                    result = { add(x, hd) for x in combinations(tl, k - 1) }",
                "                                | combinations(tl, k)"
              ],
            "identifiers": {
                "tl": "local-const",
                "fromSet": "constant",
                "x": "local-const",
                "empty": "constant",
                "multiplicity": "constant",
                "size": "constant",
                "n": "local-const",
                "k": "local-const",
                "hd": "local-const",
                "a": "local-const",
                "bmax": "constant",
                "add": "constant",
                "c": "local-const",
                "combinations": "constant",
                "elt": "local-const",
                "this": "local-var",
                "remove": "constant",
                "v": "local-const",
                "s": "local-const",
                "___": "___",
                "fromList": "constant",
                "bchoose": "constant",
                "bmin": "constant",
                "bg": "local-const"
              }
          },
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/bosco2.hny",
            "lines": [
                "import bag",
                "",
                "const F = 1",
                "const N = (3 * F) + 1",
                "const NROUNDS = 3",
                "",
                "let n_zeroes = choose { 0 .. N / 2 }:",
                "    proposals = ([0,] * n_zeroes) + ([1,] * (N - n_zeroes))",
                "network = bag.empty()",
                "",
                "def broadcast(msg):",
                "    atomically network = bag.add(network, msg)",
                "",
                "def receive(round) returns quorum:",
                "    let msgs = { e:c for (r,e):c in network where r == round }:",
                "        quorum = {} if bag.size(msgs) < N else { msgs }",
                "",
                "def processor(proposal):",
                "    var estimate, decided = proposal, False",
                "    broadcast(0, estimate)",
                "    for round in {0..NROUNDS-1}:",
                "        atomically when exists msgs in receive(round):",
                "            let choices = bag.combinations(msgs, N - F)",
                "            let quorum = choose(choices)",
                "            let count = [ bag.multiplicity(quorum, i) for i in { 0..1 } ]:",
                "                assert count[0] != count[1]",
                "                estimate = 0 if count[0] > count[1] else 1",
                "                if count[estimate] == (N - F):",
                "                    if not decided:",
                "                        print estimate",
                "                        decided = True",
                "                    assert estimate in proposals           # validity",
                "                broadcast(round + 1, estimate)",
                "",
                "print proposals",
                "for i in {0..N-1}:",
                "    spawn processor(proposals[i])"
              ],
            "identifiers": {
                "NROUNDS": "constant",
                "bag": "module",
                "receive": "constant",
                "decided": "local-var",
                "round": "local-const",
                "i": "local-const",
                "choices": "local-const",
                "estimate": "local-var",
                "e": "local-const",
                "count": "local-const",
                "c": "local-const",
                "n_zeroes": "local-const",
                "processor": "constant",
                "this": "local-var",
                "broadcast": "constant",
                "msgs": "local-const",
                "quorum": "local-const",
                "msg": "local-const",
                "r": "local-const",
                "proposal": "local-const",
                "proposals": "global",
                "___": "___",
                "N": "constant",
                "network": "global",
                "F": "constant"
              }
          }
      },
    "labels": {
        "__end__": 587
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 63",
            "jump over method definition: set program counter to 63"
          ],
        [
            "Frame empty()",
            "start of method empty"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Jump 63",
            "jump over method definition: set program counter to 63"
          ],
        [
            "Frame fromSet(s)",
            "start of method fromSet"
          ],
        [
            "Push {:}",
            "initialize accumulator for dict comprehension: push constant {:}"
          ],
        [
            "StoreVar $accu8",
            "initialize accumulator for dict comprehension: pop a value and store in $accu8"
          ],
        [
            "LoadVar s",
            "push the value of s"
          ],
        [
            "DelVar s",
            "delete method variable s"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(elt)",
            "get next element and assign to elt; push False or True depending on success"
          ],
        [
            "JumpCond False 24",
            "check if loop is done: pop a value and jump to 24 if the value is False"
          ],
        [
            "LoadVar $accu8",
            "load accumulator: push the value of $accu8"
          ],
        [
            "DelVar $accu8",
            "delete method variable $accu8"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar $accu8",
            "update accumulator: pop a value and store in $accu8"
          ],
        [
            "Jump 14",
            "set program counter to 14"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "LoadVar $accu8",
            "load final accumulator result: push the value of $accu8"
          ],
        [
            "DelVar $accu8",
            "delete method variable $accu8"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Jump 63",
            "jump over method definition: set program counter to 63"
          ],
        [
            "Frame fromList(a)",
            "start of method fromList"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "StoreVar bg",
            "pop a value and store in bg"
          ],
        [
            "LoadVar a",
            "push the value of a"
          ],
        [
            "DelVar a",
            "delete method variable a"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(v)",
            "get next element and assign to v; push False or True depending on success"
          ],
        [
            "JumpCond False 60",
            "check if loop is done: pop a value and jump to 60 if the value is False"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 53",
            "pop a value and jump to 53 if the value is False"
          ],
        [
            "Push ?bg",
            "push constant ?bg"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar [bg]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 37",
            "set program counter to 37"
          ],
        [
            "Push ?bg",
            "push constant ?bg"
          ],
        [
            "LoadVar v",
            "push the value of v"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar [bg]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 37",
            "set program counter to 37"
          ],
        [
            "DelVar v",
            "delete method variable v"
          ],
        [
            "ReturnOp(bg)",
            "restore caller method state and push bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Push PC(66)",
            "push constant PC(66)"
          ],
        [
            "Builtin(bag$multiplicity)",
            "top of stack is a built-in operation called bag$multiplicity"
          ],
        [
            "Jump 85",
            "jump over method definition: set program counter to 85"
          ],
        [
            "Frame multiplicity(bg, elt)",
            "start of method multiplicity"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 79",
            "pop a value and jump to 79 if the value is False"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "Jump 83",
            "set program counter to 83"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(88)",
            "push constant PC(88)"
          ],
        [
            "Builtin(bag$size)",
            "top of stack is a built-in operation called bag$size"
          ],
        [
            "Jump 107",
            "jump over method definition: set program counter to 107"
          ],
        [
            "Frame size(bg)",
            "start of method size"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(_, c)",
            "get next element and assign to _:c; push False or True depending on success"
          ],
        [
            "DelVar _",
            "delete method variable _"
          ],
        [
            "JumpCond False 104",
            "check if loop is done: pop a value and jump to 104 if the value is False"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "Jump 94",
            "set program counter to 94"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(110)",
            "push constant PC(110)"
          ],
        [
            "Builtin(bag$bmin)",
            "top of stack is a built-in operation called bag$bmin"
          ],
        [
            "Jump 126",
            "jump over method definition: set program counter to 126"
          ],
        [
            "Frame bmin(bg)",
            "start of method bmin"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "1-ary min",
            "pop 1 value and push the result of applying min"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Push PC(129)",
            "push constant PC(129)"
          ],
        [
            "Builtin(bag$bmax)",
            "top of stack is a built-in operation called bag$bmax"
          ],
        [
            "Jump 154",
            "jump over method definition: set program counter to 154"
          ],
        [
            "Frame bmax(bg)",
            "start of method bmax"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "1-ary max",
            "pop 1 value and push the result of applying max"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "ReturnOp(count)",
            "restore caller method state and push count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "Jump 154",
            "jump over method definition: set program counter to 154"
          ],
        [
            "Frame bchoose(bg)",
            "start of method bchoose"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "1-ary keys",
            "pop 1 value and push the result of applying keys"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar elt",
            "pop a value and store in elt"
          ],
        [
            "ReturnOp(elt)",
            "restore caller method state and push elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "Push PC(157)",
            "push constant PC(157)"
          ],
        [
            "Builtin(bag$add)",
            "top of stack is a built-in operation called bag$add"
          ],
        [
            "Jump 183",
            "jump over method definition: set program counter to 183"
          ],
        [
            "Frame add(bg, elt)",
            "start of method add"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 176",
            "pop a value and jump to 176 if the value is False"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "Jump 182",
            "set program counter to 182"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push PC(186)",
            "push constant PC(186)"
          ],
        [
            "Builtin(bag$remove)",
            "top of stack is a built-in operation called bag$remove"
          ],
        [
            "Jump 318",
            "jump over method definition: set program counter to 318"
          ],
        [
            "Frame remove(bg, elt)",
            "start of method remove"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "JumpCond False 226",
            "pop a value and jump to 226 if the value is False"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "StoreVar [result]",
            "pop a value and the address of a method variable and store the value at that address"
          ],
        [
            "LoadVar result",
            "push the value of result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 226",
            "pop a value and jump to 226 if the value is False"
          ],
        [
            "Push ?result",
            "push constant ?result"
          ],
        [
            "LoadVar elt",
            "push the value of elt"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "DelVar [result]",
            "pop an address of a method variable and delete that variable"
          ],
        [
            "DelVar elt",
            "delete method variable elt"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Jump 318",
            "jump over method definition: set program counter to 318"
          ],
        [
            "Frame combinations(bg, k)",
            "start of method combinations"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 242",
            "pop a value and jump to 242 if the value is False"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 317",
            "set program counter to 317"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Apply PC(88)",
            "call method PC(88)"
          ],
        [
            "StoreVar n",
            "pop a value and store in n"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 255",
            "pop a value and jump to 255 if the value is False"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 317",
            "set program counter to 317"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "LoadVar n",
            "push the value of n"
          ],
        [
            "DelVar n",
            "delete method variable n"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 267",
            "pop a value and jump to 267 if the value is False"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "Jump 317",
            "set program counter to 317"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "Apply PC(110)",
            "call method PC(110)"
          ],
        [
            "StoreVar hd",
            "pop a value and store in hd"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar bg",
            "push the value of bg"
          ],
        [
            "DelVar bg",
            "delete method variable bg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(186)",
            "call method PC(186)"
          ],
        [
            "StoreVar tl",
            "pop a value and store in tl"
          ],
        [
            "Push {}",
            "initialize accumulator for set comprehension: push constant {}"
          ],
        [
            "StoreVar $accu231",
            "initialize accumulator for set comprehension: pop a value and store in $accu231"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(229)",
            "call method PC(229)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(x)",
            "get next element and assign to x; push False or True depending on success"
          ],
        [
            "JumpCond False 303",
            "check if loop is done: pop a value and jump to 303 if the value is False"
          ],
        [
            "LoadVar $accu231",
            "load accumulator: push the value of $accu231"
          ],
        [
            "DelVar $accu231",
            "delete method variable $accu231"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar x",
            "push the value of x"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar hd",
            "push the value of hd"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(157)",
            "call method PC(157)"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar $accu231",
            "update accumulator: pop a value and store in $accu231"
          ],
        [
            "Jump 289",
            "set program counter to 289"
          ],
        [
            "DelVar hd",
            "delete method variable hd"
          ],
        [
            "DelVar x",
            "delete method variable x"
          ],
        [
            "LoadVar $accu231",
            "load final accumulator result: push the value of $accu231"
          ],
        [
            "DelVar $accu231",
            "delete method variable $accu231"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar tl",
            "push the value of tl"
          ],
        [
            "DelVar tl",
            "delete method variable tl"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar k",
            "push the value of k"
          ],
        [
            "DelVar k",
            "delete method variable k"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(229)",
            "call method PC(229)"
          ],
        [
            "2-ary |",
            "pop 2 values and push the result of applying |"
          ],
        [
            "StoreVar result",
            "pop a value and store in result"
          ],
        [
            "ReturnOp(result)",
            "restore caller method state and push result"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary /",
            "pop 2 values and push the result of applying /"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar n_zeroes",
            "pop a value and store in n_zeroes"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar n_zeroes",
            "push the value of n_zeroes"
          ],
        [
            "2-ary *",
            "pop 2 values and push the result of applying *"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "LoadVar n_zeroes",
            "push the value of n_zeroes"
          ],
        [
            "DelVar n_zeroes",
            "delete method variable n_zeroes"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary *",
            "pop 2 values and push the result of applying *"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store proposals",
            "pop a value and store it in shared variable proposals"
          ],
        [
            "Push PC(2)",
            "push constant PC(2)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store network",
            "pop a value and store it in shared variable network"
          ],
        [
            "Jump 564",
            "jump over method definition: set program counter to 564"
          ],
        [
            "Frame broadcast(msg)",
            "start of method broadcast"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Push PC(157)",
            "push constant PC(157)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Load network",
            "push value of shared variable network"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar msg",
            "push the value of msg"
          ],
        [
            "DelVar msg",
            "delete method variable msg"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Store network",
            "pop a value and store it in shared variable network"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 564",
            "jump over method definition: set program counter to 564"
          ],
        [
            "Frame receive(round)",
            "start of method receive"
          ],
        [
            "Push {:}",
            "initialize accumulator for dict comprehension: push constant {:}"
          ],
        [
            "StoreVar $accu306",
            "initialize accumulator for dict comprehension: pop a value and store in $accu306"
          ],
        [
            "Load network",
            "push value of shared variable network"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "Cut((r, e), c)",
            "get next element and assign to (r, e):c; push False or True depending on success"
          ],
        [
            "JumpCond False 384",
            "check if loop is done: pop a value and jump to 384 if the value is False"
          ],
        [
            "LoadVar r",
            "push the value of r"
          ],
        [
            "DelVar r",
            "delete method variable r"
          ],
        [
            "LoadVar round",
            "push the value of round"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 366",
            "pop a value and jump to 366 if the value is False"
          ],
        [
            "LoadVar $accu306",
            "load accumulator: push the value of $accu306"
          ],
        [
            "DelVar $accu306",
            "delete method variable $accu306"
          ],
        [
            "LoadVar e",
            "push the value of e"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "LoadVar c",
            "push the value of c"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "3-ary DictAdd",
            "pop 3 values and push the result of applying DictAdd"
          ],
        [
            "StoreVar $accu306",
            "update accumulator: pop a value and store in $accu306"
          ],
        [
            "Jump 366",
            "set program counter to 366"
          ],
        [
            "DelVar c",
            "delete method variable c"
          ],
        [
            "DelVar e",
            "delete method variable e"
          ],
        [
            "DelVar r",
            "delete method variable r"
          ],
        [
            "DelVar round",
            "delete method variable round"
          ],
        [
            "LoadVar $accu306",
            "load final accumulator result: push the value of $accu306"
          ],
        [
            "DelVar $accu306",
            "delete method variable $accu306"
          ],
        [
            "StoreVar msgs",
            "pop a value and store in msgs"
          ],
        [
            "Push PC(88)",
            "push constant PC(88)"
          ],
        [
            "LoadVar msgs",
            "push the value of msgs"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "2-ary <",
            "pop 2 values and push the result of applying <"
          ],
        [
            "JumpCond False 401",
            "pop a value and jump to 401 if the value is False"
          ],
        [
            "DelVar msgs",
            "delete method variable msgs"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Jump 405",
            "set program counter to 405"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "LoadVar msgs",
            "push the value of msgs"
          ],
        [
            "DelVar msgs",
            "delete method variable msgs"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "StoreVar quorum",
            "pop a value and store in quorum"
          ],
        [
            "ReturnOp(quorum)",
            "restore caller method state and push quorum"
          ],
        [
            "DelVar quorum",
            "delete method variable quorum"
          ],
        [
            "Jump 564",
            "jump over method definition: set program counter to 564"
          ],
        [
            "Frame processor(proposal)",
            "start of method processor"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar proposal",
            "push the value of proposal"
          ],
        [
            "DelVar proposal",
            "delete method variable proposal"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar (estimate, decided)",
            "pop a value and store in (estimate, decided)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar estimate",
            "push the value of estimate"
          ],
        [
            "DelVar estimate",
            "delete method variable estimate"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(346)",
            "call method PC(346)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Push 3",
            "push constant 3"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(round)",
            "get next element and assign to round; push False or True depending on success"
          ],
        [
            "JumpCond False 561",
            "check if loop is done: pop a value and jump to 561 if the value is False"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar round",
            "push the value of round"
          ],
        [
            "Apply PC(361)",
            "call method PC(361)"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 445",
            "pop a value and jump to 445 if the value is False"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 433",
            "set program counter to 433"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar msgs",
            "pop a value and store in msgs"
          ],
        [
            "Jump 451",
            "set program counter to 451"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 433",
            "set program counter to 433"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "Push PC(229)",
            "push constant PC(229)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar msgs",
            "push the value of msgs"
          ],
        [
            "DelVar msgs",
            "delete method variable msgs"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "StoreVar choices",
            "pop a value and store in choices"
          ],
        [
            "LoadVar choices",
            "push the value of choices"
          ],
        [
            "DelVar choices",
            "delete method variable choices"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "StoreVar quorum",
            "pop a value and store in quorum"
          ],
        [
            "Push ()",
            "initialize accumulator for list comprehension: push constant ()"
          ],
        [
            "StoreVar $accu394",
            "initialize accumulator for list comprehension: pop a value and store in $accu394"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 490",
            "check if loop is done: pop a value and jump to 490 if the value is False"
          ],
        [
            "LoadVar $accu394",
            "load accumulator: push the value of $accu394"
          ],
        [
            "DelVar $accu394",
            "delete method variable $accu394"
          ],
        [
            "Push PC(66)",
            "push constant PC(66)"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar quorum",
            "push the value of quorum"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "StoreVar $accu394",
            "update accumulator: pop a value and store in $accu394"
          ],
        [
            "Jump 474",
            "set program counter to 474"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "DelVar quorum",
            "delete method variable quorum"
          ],
        [
            "LoadVar $accu394",
            "load final accumulator result: push the value of $accu394"
          ],
        [
            "DelVar $accu394",
            "delete method variable $accu394"
          ],
        [
            "StoreVar count",
            "pop a value and store in count"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary !=",
            "pop 2 values and push the result of applying !="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary >",
            "pop 2 values and push the result of applying >"
          ],
        [
            "JumpCond False 521",
            "pop a value and jump to 521 if the value is False"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Jump 522",
            "set program counter to 522"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "StoreVar estimate",
            "pop a value and store in estimate"
          ],
        [
            "LoadVar count",
            "push the value of count"
          ],
        [
            "DelVar count",
            "delete method variable count"
          ],
        [
            "LoadVar estimate",
            "push the value of estimate"
          ],
        [
            "2-ary Closure",
            "pop 2 values and push the result of applying Closure"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "JumpCond False 548",
            "pop a value and jump to 548 if the value is False"
          ],
        [
            "LoadVar decided",
            "push the value of decided"
          ],
        [
            "JumpCond True 540",
            "pop a value and jump to 540 if the value is True"
          ],
        [
            "DelVar decided",
            "delete method variable decided"
          ],
        [
            "LoadVar estimate",
            "push the value of estimate"
          ],
        [
            "Print",
            "pop a value and add to print history"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "StoreVar decided",
            "pop a value and store in decided"
          ],
        [
            "AtomicInc(lazy)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "ReadonlyInc",
            "increment readonly counter of context; thread cannot mutate shared variables if > 0"
          ],
        [
            "LoadVar estimate",
            "push the value of estimate"
          ],
        [
            "Load proposals",
            "push value of shared variable proposals"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReadonlyDec",
            "decrement readonly counter of context"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "LoadVar round",
            "push the value of round"
          ],
        [
            "DelVar round",
            "delete method variable round"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "LoadVar estimate",
            "push the value of estimate"
          ],
        [
            "DelVar estimate",
            "delete method variable estimate"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Apply PC(346)",
            "call method PC(346)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Jump 431",
            "set program counter to 431"
          ],
        [
            "DelVar decided",
            "delete method variable decided"
          ],
        [
            "DelVar round",
            "delete method variable round"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Load proposals",
            "push value of shared variable proposals"
          ],
        [
            "Print",
            "pop a value and add to print history"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Push 4",
            "push constant 4"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary ..",
            "pop 2 values and push the result of applying .."
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Cut(i)",
            "get next element and assign to i; push False or True depending on success"
          ],
        [
            "JumpCond False 584",
            "check if loop is done: pop a value and jump to 584 if the value is False"
          ],
        [
            "Push ?PC(409)",
            "push constant ?PC(409)"
          ],
        [
            "Push ?proposals",
            "push constant ?proposals"
          ],
        [
            "LoadVar i",
            "push the value of i"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Jump 572",
            "set program counter to 572"
          ],
        [
            "DelVar i",
            "delete method variable i"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 38,
            "stmt": [
                1,
                1,
                38,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 12,
            "column": 10
          },
        {
            "module": "bag",
            "endline": 2,
            "stmt": [
                2,
                5,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                23
              ],
            "line": 1,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 14,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 29,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 5,
            "stmt": [
                5,
                5,
                5,
                31
              ],
            "line": 5,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                26
              ],
            "line": 4,
            "endcolumn": 26,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                12
              ],
            "line": 8,
            "endcolumn": 12,
            "column": 10
          },
        {
            "module": "bag",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                12
              ],
            "line": 8,
            "endcolumn": 8,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 12,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 18,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 22,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 11,
            "stmt": [
                11,
                13,
                11,
                22
              ],
            "line": 11,
            "endcolumn": 20,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                19
              ],
            "line": 10,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 21,
            "column": 21
          },
        {
            "module": "bag",
            "endline": 13,
            "stmt": [
                13,
                13,
                13,
                21
              ],
            "line": 13,
            "endcolumn": 19,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 9,
            "stmt": [
                9,
                5,
                9,
                14
              ],
            "line": 9,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                27
              ],
            "line": 7,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                39
              ],
            "line": 15,
            "endcolumn": 20,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                39
              ],
            "line": 15,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 16,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 23,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 18,
            "stmt": [
                18,
                9,
                18,
                23
              ],
            "line": 18,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                17
              ],
            "line": 17,
            "endcolumn": 17,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 20,
            "stmt": [
                20,
                9,
                20,
                17
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 16,
            "stmt": [
                16,
                1,
                16,
                40
              ],
            "line": 16,
            "endcolumn": 40,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 22,
            "stmt": [
                22,
                1,
                22,
                23
              ],
            "line": 22,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 24,
            "stmt": [
                24,
                5,
                24,
                13
              ],
            "line": 24,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 24,
            "stmt": [
                24,
                5,
                24,
                13
              ],
            "line": 24,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 26,
            "stmt": [
                26,
                9,
                26,
                18
              ],
            "line": 26,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 25,
            "stmt": [
                25,
                5,
                25,
                17
              ],
            "line": 25,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 23,
            "stmt": [
                23,
                1,
                23,
                27
              ],
            "line": 23,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                23
              ],
            "line": 28,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 28,
            "stmt": [
                28,
                1,
                28,
                23
              ],
            "line": 28,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 30,
            "stmt": [
                30,
                5,
                30,
                20
              ],
            "line": 30,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 31,
            "stmt": [
                31,
                5,
                31,
                25
              ],
            "line": 31,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 29,
            "stmt": [
                29,
                1,
                29,
                27
              ],
            "line": 29,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 33,
            "stmt": [
                33,
                1,
                33,
                23
              ],
            "line": 33,
            "endcolumn": 12,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 33,
            "stmt": [
                33,
                1,
                33,
                23
              ],
            "line": 33,
            "endcolumn": 23,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 13,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 35,
            "stmt": [
                35,
                5,
                35,
                20
              ],
            "line": 35,
            "endcolumn": 20,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 36,
            "stmt": [
                36,
                5,
                36,
                25
              ],
            "line": 36,
            "endcolumn": 11,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 34,
            "stmt": [
                34,
                1,
                34,
                27
              ],
            "line": 34,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 24,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 25,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 26,
            "column": 11
          },
        {
            "module": "bag",
            "endline": 39,
            "stmt": [
                39,
                5,
                39,
                26
              ],
            "line": 39,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 38,
            "stmt": [
                38,
                1,
                38,
                28
              ],
            "line": 38,
            "endcolumn": 28,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 41,
            "stmt": [
                41,
                1,
                41,
                21
              ],
            "line": 41,
            "endcolumn": 11,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 41,
            "stmt": [
                41,
                1,
                41,
                21
              ],
            "line": 41,
            "endcolumn": 21,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 43,
            "stmt": [
                43,
                5,
                43,
                15
              ],
            "line": 43,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 20,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 45,
            "stmt": [
                45,
                9,
                45,
                24
              ],
            "line": 45,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 44,
            "stmt": [
                44,
                5,
                44,
                21
              ],
            "line": 44,
            "endcolumn": 21,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 47,
            "stmt": [
                47,
                9,
                47,
                23
              ],
            "line": 47,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 42,
            "stmt": [
                42,
                1,
                42,
                32
              ],
            "line": 42,
            "endcolumn": 32,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 49,
            "stmt": [
                49,
                1,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 49,
            "stmt": [
                49,
                1,
                49,
                27
              ],
            "line": 49,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "bag",
            "endline": 51,
            "stmt": [
                51,
                5,
                51,
                15
              ],
            "line": 51,
            "endcolumn": 12,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 10,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 20,
            "column": 15
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 20,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 52,
            "stmt": [
                52,
                5,
                52,
                21
              ],
            "line": 52,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 21,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 25,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 26,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 53,
            "stmt": [
                53,
                9,
                53,
                30
              ],
            "line": 53,
            "endcolumn": 30,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 14,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 18,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 24,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 54,
            "stmt": [
                54,
                9,
                54,
                24
              ],
            "line": 54,
            "endcolumn": 22,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 17,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 21,
            "column": 19
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 22,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 22,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 27
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 27,
            "column": 12
          },
        {
            "module": "bag",
            "endline": 55,
            "stmt": [
                55,
                9,
                55,
                28
              ],
            "line": 55,
            "endcolumn": 10,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 26,
            "column": 24
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 27,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 56,
            "stmt": [
                56,
                13,
                56,
                27
              ],
            "line": 56,
            "endcolumn": 27,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 50,
            "stmt": [
                50,
                1,
                50,
                35
              ],
            "line": 50,
            "endcolumn": 35,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 8,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 13,
            "column": 8
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 6,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 22,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 61,
            "stmt": [
                61,
                9,
                61,
                24
              ],
            "line": 61,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 60,
            "stmt": [
                60,
                5,
                60,
                14
              ],
            "line": 60,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 23,
            "column": 22
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 63,
            "stmt": [
                63,
                9,
                63,
                24
              ],
            "line": 63,
            "endcolumn": 15,
            "column": 9
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 20,
            "column": 16
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 14,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 27,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 65,
            "stmt": [
                65,
                17,
                65,
                27
              ],
            "line": 65,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 64,
            "stmt": [
                64,
                13,
                64,
                21
              ],
            "line": 64,
            "endcolumn": 21,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 23
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 23,
            "column": 18
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 16,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 29,
            "column": 28
          },
        {
            "module": "bag",
            "endline": 67,
            "stmt": [
                67,
                17,
                67,
                31
              ],
            "line": 67,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 66,
            "stmt": [
                66,
                13,
                66,
                24
              ],
            "line": 66,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 32,
            "column": 31
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 33,
            "column": 26
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                17,
                69,
                33
              ],
            "line": 69,
            "endcolumn": 24,
            "column": 17
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 52,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 52,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 55
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 56,
            "column": 51
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 57,
            "column": 44
          },
        {
            "module": "bag",
            "endline": 69,
            "stmt": [
                69,
                35,
                69,
                57
              ],
            "line": 69,
            "endcolumn": 42,
            "column": 35
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 66,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 73
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 69
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 73,
            "column": 65
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 34,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 36,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 39
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 41,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 74
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 74,
            "column": 32
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 49,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 71,
            "endcolumn": 53,
            "column": 35
          },
        {
            "module": "bag",
            "endline": 71,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 53,
            "column": 30
          },
        {
            "module": "bag",
            "endline": 70,
            "stmt": [
                70,
                21,
                71,
                53
              ],
            "line": 70,
            "endcolumn": 28,
            "column": 21
          },
        {
            "module": "bag",
            "endline": 59,
            "stmt": [
                59,
                1,
                59,
                39
              ],
            "line": 59,
            "endcolumn": 39,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 34
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 36,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                1,
                7,
                36
              ],
            "line": 7,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 20,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 32,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 32,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 40,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 40,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 46,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 57,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 57,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 57,
            "column": 46
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 58,
            "column": 38
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 59,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                5,
                8,
                59
              ],
            "line": 8,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 19,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                1,
                9,
                21
              ],
            "line": 9,
            "endcolumn": 9,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 19,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 46,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 32,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 45,
            "column": 34
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 40,
            "column": 34
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 45,
            "column": 34
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 45,
            "column": 43
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 45,
            "column": 43
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 45,
            "column": 34
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 46,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 46,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                16,
                12,
                46
              ],
            "line": 12,
            "endcolumn": 46,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                19
              ],
            "line": 11,
            "endcolumn": 19,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                1,
                14,
                34
              ],
            "line": 14,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                1,
                14,
                34
              ],
            "line": 14,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 43,
            "column": 37
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 51,
            "column": 51
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 56
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 51
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 56
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 60,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                5,
                15,
                62
              ],
            "line": 15,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 36,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 37,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 37,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 41,
            "column": 41
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 41,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 55,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 19,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 53,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 53,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 53,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 53,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                9,
                16,
                55
              ],
            "line": 16,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                1,
                14,
                34
              ],
            "line": 14,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                1,
                14,
                34
              ],
            "line": 14,
            "endcolumn": 34,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                24
              ],
            "line": 18,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                24
              ],
            "line": 18,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 36,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 36,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 43,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 43,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                5,
                19,
                43
              ],
            "line": 19,
            "endcolumn": 43,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 25,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 25,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 25,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 26,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                5,
                20,
                26
              ],
            "line": 20,
            "endcolumn": 26,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 19,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 28,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 30,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 30,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 7,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 34,
            "stmt": [
                22,
                20,
                34,
                6
              ],
            "line": 22,
            "endcolumn": 6,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                34,
                6
              ],
            "line": 22,
            "endcolumn": 20,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 52,
            "column": 48
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 40
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 53
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 42,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 47,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 50,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 54
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 54,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 55,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 55,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 23,
            "stmt": [
                23,
                13,
                23,
                68
              ],
            "line": 23,
            "endcolumn": 25,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                13,
                24,
                53
              ],
            "line": 24,
            "endcolumn": 39,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                13,
                24,
                53
              ],
            "line": 24,
            "endcolumn": 39,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                13,
                24,
                53
              ],
            "line": 24,
            "endcolumn": 40,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 24,
            "stmt": [
                24,
                13,
                24,
                53
              ],
            "line": 24,
            "endcolumn": 24,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 66,
            "column": 66
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 69,
            "column": 69
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 69,
            "column": 66
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 29,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 29,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 29,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 42,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 52,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 49,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 52,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 52,
            "column": 52
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 52,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 53,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 53,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 71
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 71,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 25,
            "stmt": [
                25,
                13,
                25,
                73
              ],
            "line": 25,
            "endcolumn": 23,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 28,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 30,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 31,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 40,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 42,
            "column": 42
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 36
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 22,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 26,
            "stmt": [
                26,
                17,
                26,
                43
              ],
            "line": 26,
            "endcolumn": 43,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 37,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 39,
            "column": 39
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 40,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 48,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 50,
            "column": 50
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 51,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 51,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 51,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 58,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 28,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 31,
            "column": 30
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 58,
            "column": 58
          },
        {
            "module": "__main__",
            "endline": 27,
            "stmt": [
                27,
                17,
                27,
                58
              ],
            "line": 27,
            "endcolumn": 26,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 33,
            "column": 26
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 34,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 34,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 40,
            "column": 40
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 44,
            "column": 44
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 44,
            "column": 40
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 45,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 28,
            "stmt": [
                28,
                17,
                28,
                46
              ],
            "line": 28,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                21,
                29,
                35
              ],
            "line": 29,
            "endcolumn": 34,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 29,
            "stmt": [
                29,
                21,
                29,
                35
              ],
            "line": 29,
            "endcolumn": 22,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                25,
                30,
                38
              ],
            "line": 30,
            "endcolumn": 38,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                25,
                30,
                38
              ],
            "line": 30,
            "endcolumn": 38,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 30,
            "stmt": [
                30,
                25,
                30,
                38
              ],
            "line": 30,
            "endcolumn": 38,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 31,
            "stmt": [
                31,
                25,
                31,
                38
              ],
            "line": 31,
            "endcolumn": 38,
            "column": 35
          },
        {
            "module": "__main__",
            "endline": 31,
            "stmt": [
                31,
                25,
                31,
                38
              ],
            "line": 31,
            "endcolumn": 33,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 48,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 48,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 35,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 48,
            "column": 40
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 48,
            "column": 28
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 26,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 48,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 32,
            "stmt": [
                32,
                21,
                32,
                48
              ],
            "line": 32,
            "endcolumn": 48,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 45,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 31,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 31,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 35,
            "column": 35
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 35,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 45,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 45,
            "column": 38
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 45,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 46,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 33,
            "stmt": [
                33,
                17,
                33,
                46
              ],
            "line": 33,
            "endcolumn": 46,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 22,
            "stmt": [
                22,
                20,
                22,
                53
              ],
            "line": 22,
            "endcolumn": 53,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                21,
                5,
                21,
                31
              ],
            "line": 21,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                24
              ],
            "line": 18,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                24
              ],
            "line": 18,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                1,
                18,
                24
              ],
            "line": 18,
            "endcolumn": 24,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 35,
            "stmt": [
                35,
                1,
                35,
                15
              ],
            "line": 35,
            "endcolumn": 15,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 35,
            "stmt": [
                35,
                1,
                35,
                15
              ],
            "line": 35,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 11,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 16,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 19,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 31,
            "column": 31
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 32,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 33,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 33,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 37,
            "stmt": [
                37,
                5,
                37,
                33
              ],
            "line": 37,
            "endcolumn": 33,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 36,
            "stmt": [
                36,
                1,
                36,
                17
              ],
            "line": 36,
            "endcolumn": 17,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 38,
            "stmt": [
                1,
                1,
                38,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 38,
            "stmt": [
                1,
                1,
                38,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 38,
            "stmt": [
                1,
                1,
                38,
                6
              ],
            "line": 1,
            "endcolumn": 6,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "63",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "empty",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "pc": "63",
            "op": "Jump"
          },
        {
            "args": "s",
            "name": "fromSet",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu8",
            "op": "StoreVar"
          },
        {
            "value": "s",
            "op": "LoadVar"
          },
        {
            "value": "s",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "Cut"
          },
        {
            "pc": "24",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu8",
            "op": "LoadVar"
          },
        {
            "value": "$accu8",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "$accu8",
            "op": "StoreVar"
          },
        {
            "pc": "14",
            "op": "Jump"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": "$accu8",
            "op": "LoadVar"
          },
        {
            "value": "$accu8",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "pc": "63",
            "op": "Jump"
          },
        {
            "args": "a",
            "name": "fromList",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "StoreVar"
          },
        {
            "value": "a",
            "op": "LoadVar"
          },
        {
            "value": "a",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "Cut"
          },
        {
            "pc": "60",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "53",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "bg"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "37",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "bg"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "v",
            "op": "LoadVar"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "37",
            "op": "Jump"
          },
        {
            "value": "v",
            "op": "DelVar"
          },
        {
            "result": "bg",
            "op": "Return"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "66"
              },
            "op": "Push"
          },
        {
            "value": "bag$multiplicity",
            "op": "Builtin"
          },
        {
            "pc": "85",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "multiplicity",
            "op": "Frame"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "79",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "pc": "83",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "88"
              },
            "op": "Push"
          },
        {
            "value": "bag$size",
            "op": "Builtin"
          },
        {
            "pc": "107",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "size",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "c",
            "key": "_",
            "op": "Cut"
          },
        {
            "value": "_",
            "op": "DelVar"
          },
        {
            "pc": "104",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "pc": "94",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "110"
              },
            "op": "Push"
          },
        {
            "value": "bag$bmin",
            "op": "Builtin"
          },
        {
            "pc": "126",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bmin",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "min",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "129"
              },
            "op": "Push"
          },
        {
            "value": "bag$bmax",
            "op": "Builtin"
          },
        {
            "pc": "154",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bmax",
            "op": "Frame"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "arity": 1,
            "value": "max",
            "op": "Nary"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "result": "count",
            "op": "Return"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "pc": "154",
            "op": "Jump"
          },
        {
            "args": "bg",
            "name": "bchoose",
            "op": "Frame"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 1,
            "value": "keys",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "value": "elt",
            "op": "StoreVar"
          },
        {
            "result": "elt",
            "op": "Return"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "157"
              },
            "op": "Push"
          },
        {
            "value": "bag$add",
            "op": "Builtin"
          },
        {
            "pc": "183",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "add",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "176",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "pc": "182",
            "op": "Jump"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Push"
          },
        {
            "value": "bag$remove",
            "op": "Builtin"
          },
        {
            "pc": "318",
            "op": "Jump"
          },
        {
            "args": "(bg, elt)",
            "name": "remove",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "pc": "226",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "op": "StoreVar"
          },
        {
            "value": "result",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "226",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "result"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-2"
                  }
              },
            "op": "Push"
          },
        {
            "value": "elt",
            "op": "LoadVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "DelVar"
          },
        {
            "value": "elt",
            "op": "DelVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "pc": "318",
            "op": "Jump"
          },
        {
            "args": "(bg, k)",
            "name": "combinations",
            "op": "Frame"
          },
        {
            "value": "result",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "242",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "317",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "88"
              },
            "op": "Apply"
          },
        {
            "value": "n",
            "op": "StoreVar"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "255",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "317",
            "op": "Jump"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "LoadVar"
          },
        {
            "value": "n",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "267",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "pc": "317",
            "op": "Jump"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "110"
              },
            "op": "Apply"
          },
        {
            "value": "hd",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "bg",
            "op": "LoadVar"
          },
        {
            "value": "bg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "186"
              },
            "op": "Apply"
          },
        {
            "value": "tl",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu231",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "229"
              },
            "op": "Apply"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "Cut"
          },
        {
            "pc": "303",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu231",
            "op": "LoadVar"
          },
        {
            "value": "$accu231",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "x",
            "op": "LoadVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "hd",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "157"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "$accu231",
            "op": "StoreVar"
          },
        {
            "pc": "289",
            "op": "Jump"
          },
        {
            "value": "hd",
            "op": "DelVar"
          },
        {
            "value": "x",
            "op": "DelVar"
          },
        {
            "value": "$accu231",
            "op": "LoadVar"
          },
        {
            "value": "$accu231",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "tl",
            "op": "LoadVar"
          },
        {
            "value": "tl",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "k",
            "op": "LoadVar"
          },
        {
            "value": "k",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "229"
              },
            "op": "Apply"
          },
        {
            "arity": 2,
            "value": "|",
            "op": "Nary"
          },
        {
            "value": "result",
            "op": "StoreVar"
          },
        {
            "result": "result",
            "op": "Return"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "/",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "value": "n_zeroes",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "n_zeroes",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "*",
            "op": "Nary"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "value": "n_zeroes",
            "op": "LoadVar"
          },
        {
            "value": "n_zeroes",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "*",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "proposals"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "network"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "564",
            "op": "Jump"
          },
        {
            "args": "msg",
            "name": "broadcast",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": {
                "type": "pc",
                "value": "157"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "network"
                  }
              ],
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "msg",
            "op": "LoadVar"
          },
        {
            "value": "msg",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "network"
                  }
              ],
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "564",
            "op": "Jump"
          },
        {
            "args": "round",
            "name": "receive",
            "op": "Frame"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu306",
            "op": "StoreVar"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "network"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "c",
            "key": "(r, e)",
            "op": "Cut"
          },
        {
            "pc": "384",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "r",
            "op": "LoadVar"
          },
        {
            "value": "r",
            "op": "DelVar"
          },
        {
            "value": "round",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "366",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu306",
            "op": "LoadVar"
          },
        {
            "value": "$accu306",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "LoadVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "c",
            "op": "LoadVar"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "arity": 3,
            "value": "DictAdd",
            "op": "Nary"
          },
        {
            "value": "$accu306",
            "op": "StoreVar"
          },
        {
            "pc": "366",
            "op": "Jump"
          },
        {
            "value": "c",
            "op": "DelVar"
          },
        {
            "value": "e",
            "op": "DelVar"
          },
        {
            "value": "r",
            "op": "DelVar"
          },
        {
            "value": "round",
            "op": "DelVar"
          },
        {
            "value": "$accu306",
            "op": "LoadVar"
          },
        {
            "value": "$accu306",
            "op": "DelVar"
          },
        {
            "value": "msgs",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "88"
              },
            "op": "Push"
          },
        {
            "value": "msgs",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "<",
            "op": "Nary"
          },
        {
            "pc": "401",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "msgs",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "pc": "405",
            "op": "Jump"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "msgs",
            "op": "LoadVar"
          },
        {
            "value": "msgs",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": "quorum",
            "op": "StoreVar"
          },
        {
            "result": "quorum",
            "op": "Return"
          },
        {
            "value": "quorum",
            "op": "DelVar"
          },
        {
            "pc": "564",
            "op": "Jump"
          },
        {
            "args": "proposal",
            "name": "processor",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "proposal",
            "op": "LoadVar"
          },
        {
            "value": "proposal",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "(estimate, decided)",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "estimate",
            "op": "LoadVar"
          },
        {
            "value": "estimate",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "346"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 3
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "round",
            "op": "Cut"
          },
        {
            "pc": "561",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "round",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "361"
              },
            "op": "Apply"
          },
        {
            "op": "Dup"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "445",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "op": "Pop"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "433",
            "op": "Jump"
          },
        {
            "op": "Choose"
          },
        {
            "value": "msgs",
            "op": "StoreVar"
          },
        {
            "pc": "451",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "433",
            "op": "Jump"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "value": {
                "type": "pc",
                "value": "229"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "msgs",
            "op": "LoadVar"
          },
        {
            "value": "msgs",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "choices",
            "op": "StoreVar"
          },
        {
            "value": "choices",
            "op": "LoadVar"
          },
        {
            "value": "choices",
            "op": "DelVar"
          },
        {
            "op": "Choose"
          },
        {
            "value": "quorum",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "$accu394",
            "op": "StoreVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "490",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "$accu394",
            "op": "LoadVar"
          },
        {
            "value": "$accu394",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "pc",
                "value": "66"
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "quorum",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "$accu394",
            "op": "StoreVar"
          },
        {
            "pc": "474",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "value": "quorum",
            "op": "DelVar"
          },
        {
            "value": "$accu394",
            "op": "LoadVar"
          },
        {
            "value": "$accu394",
            "op": "DelVar"
          },
        {
            "value": "count",
            "op": "StoreVar"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "!=",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": ">",
            "op": "Nary"
          },
        {
            "pc": "521",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "pc": "522",
            "op": "Jump"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "estimate",
            "op": "StoreVar"
          },
        {
            "value": "count",
            "op": "LoadVar"
          },
        {
            "value": "count",
            "op": "DelVar"
          },
        {
            "value": "estimate",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "Closure",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "pc": "548",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": "decided",
            "op": "LoadVar"
          },
        {
            "pc": "540",
            "cond": {
                "type": "bool",
                "value": "True"
              },
            "op": "JumpCond"
          },
        {
            "value": "decided",
            "op": "DelVar"
          },
        {
            "value": "estimate",
            "op": "LoadVar"
          },
        {
            "op": "Print"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "value": "decided",
            "op": "StoreVar"
          },
        {
            "lazy": "True",
            "op": "AtomicInc"
          },
        {
            "op": "ReadonlyInc"
          },
        {
            "value": "estimate",
            "op": "LoadVar"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "proposals"
                  }
              ],
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "op": "ReadonlyDec"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": "round",
            "op": "LoadVar"
          },
        {
            "value": "round",
            "op": "DelVar"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": "estimate",
            "op": "LoadVar"
          },
        {
            "value": "estimate",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "pc",
                "value": "346"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "op": "AtomicDec"
          },
        {
            "pc": "431",
            "op": "Jump"
          },
        {
            "value": "decided",
            "op": "DelVar"
          },
        {
            "value": "round",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "proposals"
                  }
              ],
            "op": "Load"
          },
        {
            "op": "Print"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 4
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "..",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "Cut"
          },
        {
            "pc": "584",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "409"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "proposals"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "i",
            "op": "LoadVar"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "pc": "572",
            "op": "Jump"
          },
        {
            "value": "i",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "symbols": {
     "3": { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
     "2": { "type": "list", "value": [{ "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
     "1": { "type": "list", "value": [{ "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
     "4": { "type": "int", "value": "1" },
     "5": { "type": "int", "value": "0" }
  },
  "nodes": [
    {
      "idx": 0,
      "transitions": [
        [[],[1]]
      ],
      "type": "initial"
    },
    {
      "idx": 1,
      "transitions": [
        [[3],[4]],
        [[2],[3]],
        [[1],[2]]
      ],
      "type": "normal"
    },
    {
      "idx": 2,
      "transitions": [
        [[],[5]]
      ],
      "type": "normal"
    },
    {
      "idx": 3,
      "transitions": [
        [[],[6,7]]
      ],
      "type": "normal"
    },
    {
      "idx": 4,
      "transitions": [
        [[],[8,9]]
      ],
      "type": "normal"
    },
    {
      "idx": 5,
      "transitions": [
        [[],[10,11]]
      ],
      "type": "normal"
    },
    {
      "idx": 6,
      "transitions": [
        [[],[12,13,14]]
      ],
      "type": "normal"
    },
    {
      "idx": 7,
      "transitions": [
        [[],[13,15]]
      ],
      "type": "normal"
    },
    {
      "idx": 8,
      "transitions": [
        [[],[16,17,18]]
      ],
      "type": "normal"
    },
    {
      "idx": 9,
      "transitions": [
        [[],[17,19,20]]
      ],
      "type": "normal"
    },
    {
      "idx": 10,
      "transitions": [
        [[],[21,22]]
      ],
      "type": "normal"
    },
    {
      "idx": 11,
      "transitions": [
        [[],[22,11]]
      ],
      "type": "normal"
    },
    {
      "idx": 12,
      "transitions": [
        [[],[23,24,25]]
      ],
      "type": "normal"
    },
    {
      "idx": 13,
      "transitions": [
        [[],[24,26,27]]
      ],
      "type": "normal"
    },
    {
      "idx": 14,
      "transitions": [
        [[],[25,26,14]]
      ],
      "type": "normal"
    },
    {
      "idx": 15,
      "transitions": [
        [[],[27,15]]
      ],
      "type": "normal"
    },
    {
      "idx": 16,
      "transitions": [
        [[],[28,29]]
      ],
      "type": "normal"
    },
    {
      "idx": 17,
      "transitions": [
        [[],[28,30,31,32]]
      ],
      "type": "normal"
    },
    {
      "idx": 18,
      "transitions": [
        [[],[29,31,18]]
      ],
      "type": "normal"
    },
    {
      "idx": 19,
      "transitions": [
        [[],[30,33]]
      ],
      "type": "normal"
    },
    {
      "idx": 20,
      "transitions": [
        [[],[32,33,20]]
      ],
      "type": "normal"
    },
    {
      "idx": 21,
      "transitions": [
        [[],[40,41]]
      ],
      "type": "normal"
    },
    {
      "idx": 22,
      "transitions": [
        [[],[41,42,22]]
      ],
      "type": "normal"
    },
    {
      "idx": 23,
      "transitions": [
        [[],[43,44]]
      ],
      "type": "normal"
    },
    {
      "idx": 24,
      "transitions": [
        [[],[43,45,46]]
      ],
      "type": "normal"
    },
    {
      "idx": 25,
      "transitions": [
        [[],[44,45,47,25]]
      ],
      "type": "normal"
    },
    {
      "idx": 26,
      "transitions": [
        [[],[45,48,26]]
      ],
      "type": "normal"
    },
    {
      "idx": 27,
      "transitions": [
        [[],[46,48,27]]
      ],
      "type": "normal"
    },
    {
      "idx": 28,
      "transitions": [
        [[],[49,34,37]]
      ],
      "type": "normal"
    },
    {
      "idx": 29,
      "transitions": [
        [[],[34,50,29]]
      ],
      "type": "normal"
    },
    {
      "idx": 30,
      "transitions": [
        [[],[49,35,38]]
      ],
      "type": "normal"
    },
    {
      "idx": 31,
      "transitions": [
        [[],[34,35,36,31]]
      ],
      "type": "normal"
    },
    {
      "idx": 32,
      "transitions": [
        [[],[37,38,36,32]]
      ],
      "type": "normal"
    },
    {
      "idx": 33,
      "transitions": [
        [[],[38,39,33]]
      ],
      "type": "normal"
    },
    {
      "idx": 34,
      "transitions": [
        [[],[56,57,58,34]]
      ],
      "type": "normal"
    },
    {
      "idx": 35,
      "transitions": [
        [[],[56,59,35]]
      ],
      "type": "normal"
    },
    {
      "idx": 36,
      "transitions": [
        [[],[58,59,36]]
      ],
      "type": "normal"
    },
    {
      "idx": 37,
      "transitions": [
        [[],[60,58,37]]
      ],
      "type": "normal"
    },
    {
      "idx": 38,
      "transitions": [
        [[],[60,59,61,38]]
      ],
      "type": "normal"
    },
    {
      "idx": 39,
      "transitions": [
        [[],[61,39]]
      ],
      "type": "normal"
    },
    {
      "idx": 40,
      "transitions": [
        [[],[62]]
      ],
      "type": "normal"
    },
    {
      "idx": 41,
      "transitions": [
        [[],[62,63,41]]
      ],
      "type": "normal"
    },
    {
      "idx": 42,
      "transitions": [
        [[],[63,42]]
      ],
      "type": "normal"
    },
    {
      "idx": 43,
      "transitions": [
        [[],[51,55]]
      ],
      "type": "normal"
    },
    {
      "idx": 44,
      "transitions": [
        [[],[51,52,44]]
      ],
      "type": "normal"
    },
    {
      "idx": 45,
      "transitions": [
        [[],[51,53,54,45]]
      ],
      "type": "normal"
    },
    {
      "idx": 46,
      "transitions": [
        [[],[55,54,46]]
      ],
      "type": "normal"
    },
    {
      "idx": 47,
      "transitions": [
        [[],[52,53,47]]
      ],
      "type": "normal"
    },
    {
      "idx": 48,
      "transitions": [
        [[],[54,48]]
      ],
      "type": "normal"
    },
    {
      "idx": 49,
      "transitions": [
        [[],[56,60]]
      ],
      "type": "normal"
    },
    {
      "idx": 50,
      "transitions": [
        [[],[57,50]]
      ],
      "type": "normal"
    },
    {
      "idx": 51,
      "transitions": [
        [[],[64,65,51]]
      ],
      "type": "normal"
    },
    {
      "idx": 52,
      "transitions": [
        [[],[64,66,52]]
      ],
      "type": "normal"
    },
    {
      "idx": 53,
      "transitions": [
        [[],[64,67,53]]
      ],
      "type": "normal"
    },
    {
      "idx": 54,
      "transitions": [
        [[],[65,67,54]]
      ],
      "type": "normal"
    },
    {
      "idx": 55,
      "transitions": [
        [[],[65,55]]
      ],
      "type": "normal"
    },
    {
      "idx": 56,
      "transitions": [
        [[],[68,69,56]]
      ],
      "type": "normal"
    },
    {
      "idx": 57,
      "transitions": [
        [[],[68,70,57]]
      ],
      "type": "normal"
    },
    {
      "idx": 58,
      "transitions": [
        [[],[69,70,58]]
      ],
      "type": "normal"
    },
    {
      "idx": 59,
      "transitions": [
        [[],[69,72,59]]
      ],
      "type": "normal"
    },
    {
      "idx": 60,
      "transitions": [
        [[],[69,71,60]]
      ],
      "type": "normal"
    },
    {
      "idx": 61,
      "transitions": [
        [[],[71,72,61]]
      ],
      "type": "normal"
    },
    {
      "idx": 62,
      "transitions": [
        [[],[73,62]]
      ],
      "type": "normal"
    },
    {
      "idx": 63,
      "transitions": [
        [[],[73,74,63]]
      ],
      "type": "normal"
    },
    {
      "idx": 64,
      "transitions": [
        [[],[75,76,64]]
      ],
      "type": "normal"
    },
    {
      "idx": 65,
      "transitions": [
        [[],[76,65]]
      ],
      "type": "normal"
    },
    {
      "idx": 66,
      "transitions": [
        [[],[75,66]]
      ],
      "type": "normal"
    },
    {
      "idx": 67,
      "transitions": [
        [[],[76,67]]
      ],
      "type": "normal"
    },
    {
      "idx": 68,
      "transitions": [
        [[],[77,68]]
      ],
      "type": "normal"
    },
    {
      "idx": 69,
      "transitions": [
        [[],[77,78,69]]
      ],
      "type": "normal"
    },
    {
      "idx": 70,
      "transitions": [
        [[],[77,70]]
      ],
      "type": "normal"
    },
    {
      "idx": 71,
      "transitions": [
        [[],[78,71]]
      ],
      "type": "normal"
    },
    {
      "idx": 72,
      "transitions": [
        [[],[78,72]]
      ],
      "type": "normal"
    },
    {
      "idx": 73,
      "transitions": [
        [[],[79,73]]
      ],
      "type": "normal"
    },
    {
      "idx": 74,
      "transitions": [
        [[],[79,74]]
      ],
      "type": "normal"
    },
    {
      "idx": 75,
      "transitions": [
        [[],[80,75]]
      ],
      "type": "normal"
    },
    {
      "idx": 76,
      "transitions": [
        [[],[80,76]]
      ],
      "type": "normal"
    },
    {
      "idx": 77,
      "transitions": [
        [[],[81,77]]
      ],
      "type": "normal"
    },
    {
      "idx": 78,
      "transitions": [
        [[],[81,78]]
      ],
      "type": "normal"
    },
    {
      "idx": 79,
      "transitions": [
        [[],[82,79]]
      ],
      "type": "normal"
    },
    {
      "idx": 80,
      "transitions": [
        [[],[83]]
      ],
      "type": "normal"
    },
    {
      "idx": 81,
      "transitions": [
        [[],[84]]
      ],
      "type": "normal"
    },
    {
      "idx": 82,
      "transitions": [
        [[],[85]]
      ],
      "type": "normal"
    },
    {
      "idx": 83,
      "transitions": [
        [[],[86]]
      ],
      "type": "normal"
    },
    {
      "idx": 84,
      "transitions": [
        [[],[87]]
      ],
      "type": "normal"
    },
    {
      "idx": 85,
      "transitions": [
        [[],[88]]
      ],
      "type": "normal"
    },
    {
      "idx": 86,
      "transitions": [
        [[],[89]],
        [[4],[90]]
      ],
      "type": "normal"
    },
    {
      "idx": 87,
      "transitions": [
        [[],[91,92]]
      ],
      "type": "normal"
    },
    {
      "idx": 88,
      "transitions": [
        [[4],[93]]
      ],
      "type": "normal"
    },
    {
      "idx": 89,
      "transitions": [
        [[],[89,94]]
      ],
      "type": "normal"
    },
    {
      "idx": 90,
      "transitions": [
        [[],[90,95]]
      ],
      "type": "normal"
    },
    {
      "idx": 91,
      "transitions": [
        [[],[91,96]]
      ],
      "type": "normal"
    },
    {
      "idx": 92,
      "transitions": [
        [[],[92,97]]
      ],
      "type": "normal"
    },
    {
      "idx": 93,
      "transitions": [
        [[],[93,98]]
      ],
      "type": "normal"
    },
    {
      "idx": 94,
      "transitions": [
        [[],[99]]
      ],
      "type": "normal"
    },
    {
      "idx": 95,
      "transitions": [
        [[],[100]]
      ],
      "type": "normal"
    },
    {
      "idx": 96,
      "transitions": [
        [[],[101]]
      ],
      "type": "normal"
    },
    {
      "idx": 97,
      "transitions": [
        [[],[102]]
      ],
      "type": "normal"
    },
    {
      "idx": 98,
      "transitions": [
        [[],[103]]
      ],
      "type": "normal"
    },
    {
      "idx": 99,
      "transitions": [
        [[],[104]],
        [[4],[105]]
      ],
      "type": "normal"
    },
    {
      "idx": 100,
      "transitions": [
        [[],[105]],
        [[4],[106]]
      ],
      "type": "normal"
    },
    {
      "idx": 101,
      "transitions": [
        [[],[107,108]]
      ],
      "type": "normal"
    },
    {
      "idx": 102,
      "transitions": [
        [[],[108,109]]
      ],
      "type": "normal"
    },
    {
      "idx": 103,
      "transitions": [
        [[4],[110]]
      ],
      "type": "normal"
    },
    {
      "idx": 104,
      "transitions": [
        [[],[104,111]]
      ],
      "type": "normal"
    },
    {
      "idx": 105,
      "transitions": [
        [[],[105,105,112]]
      ],
      "type": "normal"
    },
    {
      "idx": 106,
      "transitions": [
        [[],[106,113]]
      ],
      "type": "normal"
    },
    {
      "idx": 107,
      "transitions": [
        [[],[107,114]]
      ],
      "type": "normal"
    },
    {
      "idx": 108,
      "transitions": [
        [[],[108,115]]
      ],
      "type": "normal"
    },
    {
      "idx": 109,
      "transitions": [
        [[],[109,116]]
      ],
      "type": "normal"
    },
    {
      "idx": 110,
      "transitions": [
        [[],[110,117]]
      ],
      "type": "normal"
    },
    {
      "idx": 111,
      "transitions": [
        [[],[118]]
      ],
      "type": "normal"
    },
    {
      "idx": 112,
      "transitions": [
        [[],[119]]
      ],
      "type": "normal"
    },
    {
      "idx": 113,
      "transitions": [
        [[],[120]]
      ],
      "type": "normal"
    },
    {
      "idx": 114,
      "transitions": [
        [[],[121]]
      ],
      "type": "normal"
    },
    {
      "idx": 115,
      "transitions": [
        [[],[122]]
      ],
      "type": "normal"
    },
    {
      "idx": 116,
      "transitions": [
        [[],[123]]
      ],
      "type": "normal"
    },
    {
      "idx": 117,
      "transitions": [
        [[],[124]]
      ],
      "type": "normal"
    },
    {
      "idx": 118,
      "transitions": [
        [[],[125]],
        [[4],[126]]
      ],
      "type": "normal"
    },
    {
      "idx": 119,
      "transitions": [
        [[],[126]],
        [[4],[127]]
      ],
      "type": "normal"
    },
    {
      "idx": 120,
      "transitions": [
        [[],[127]],
        [[4],[128]]
      ],
      "type": "normal"
    },
    {
      "idx": 121,
      "transitions": [
        [[],[129,130]]
      ],
      "type": "normal"
    },
    {
      "idx": 122,
      "transitions": [
        [[],[130,131]]
      ],
      "type": "normal"
    },
    {
      "idx": 123,
      "transitions": [
        [[],[131,132]]
      ],
      "type": "normal"
    },
    {
      "idx": 124,
      "transitions": [
        [[4],[133]]
      ],
      "type": "normal"
    },
    {
      "idx": 125,
      "transitions": [
        [[],[125,134]]
      ],
      "type": "normal"
    },
    {
      "idx": 126,
      "transitions": [
        [[],[126,126,135]]
      ],
      "type": "normal"
    },
    {
      "idx": 127,
      "transitions": [
        [[],[127,127,136]]
      ],
      "type": "normal"
    },
    {
      "idx": 128,
      "transitions": [
        [[],[128,137]]
      ],
      "type": "normal"
    },
    {
      "idx": 129,
      "transitions": [
        [[],[129,138]]
      ],
      "type": "normal"
    },
    {
      "idx": 130,
      "transitions": [
        [[],[130,139]]
      ],
      "type": "normal"
    },
    {
      "idx": 131,
      "transitions": [
        [[],[131,140]]
      ],
      "type": "normal"
    },
    {
      "idx": 132,
      "transitions": [
        [[],[132,141]]
      ],
      "type": "normal"
    },
    {
      "idx": 133,
      "transitions": [
        [[],[133,142]]
      ],
      "type": "normal"
    },
    {
      "idx": 134,
      "transitions": [
        [[],[143]]
      ],
      "type": "normal"
    },
    {
      "idx": 135,
      "transitions": [
        [[],[144]]
      ],
      "type": "normal"
    },
    {
      "idx": 136,
      "transitions": [
        [[],[145]]
      ],
      "type": "normal"
    },
    {
      "idx": 137,
      "transitions": [
        [[],[146]]
      ],
      "type": "normal"
    },
    {
      "idx": 138,
      "transitions": [
        [[],[147]]
      ],
      "type": "normal"
    },
    {
      "idx": 139,
      "transitions": [
        [[],[148]]
      ],
      "type": "normal"
    },
    {
      "idx": 140,
      "transitions": [
        [[],[149]]
      ],
      "type": "normal"
    },
    {
      "idx": 141,
      "transitions": [
        [[],[150]]
      ],
      "type": "normal"
    },
    {
      "idx": 142,
      "transitions": [
        [[],[151]]
      ],
      "type": "normal"
    },
    {
      "idx": 143,
      "transitions": [
        [[],[152]],
        [[4],[153]]
      ],
      "type": "normal"
    },
    {
      "idx": 144,
      "transitions": [
        [[],[153]],
        [[4],[154]]
      ],
      "type": "normal"
    },
    {
      "idx": 145,
      "transitions": [
        [[],[154]],
        [[4],[155]]
      ],
      "type": "normal"
    },
    {
      "idx": 146,
      "transitions": [
        [[],[155]],
        [[4],[156]]
      ],
      "type": "normal"
    },
    {
      "idx": 147,
      "transitions": [
        [[],[157,158]]
      ],
      "type": "normal"
    },
    {
      "idx": 148,
      "transitions": [
        [[],[158,159]]
      ],
      "type": "normal"
    },
    {
      "idx": 149,
      "transitions": [
        [[],[159,160]]
      ],
      "type": "normal"
    },
    {
      "idx": 150,
      "transitions": [
        [[],[160,161]]
      ],
      "type": "normal"
    },
    {
      "idx": 151,
      "transitions": [
        [[4],[162]]
      ],
      "type": "normal"
    },
    {
      "idx": 152,
      "transitions": [
        [[],[164]]
      ],
      "type": "normal"
    },
    {
      "idx": 153,
      "transitions": [
        [[],[165,166]]
      ],
      "type": "normal"
    },
    {
      "idx": 154,
      "transitions": [
        [[],[167,168]]
      ],
      "type": "normal"
    },
    {
      "idx": 155,
      "transitions": [
        [[],[169,170]]
      ],
      "type": "normal"
    },
    {
      "idx": 156,
      "transitions": [
        [[],[171]]
      ],
      "type": "normal"
    },
    {
      "idx": 157,
      "transitions": [
        [[],[172]]
      ],
      "type": "normal"
    },
    {
      "idx": 158,
      "transitions": [
        [[],[173]]
      ],
      "type": "normal"
    },
    {
      "idx": 159,
      "transitions": [
        [[],[174]]
      ],
      "type": "normal"
    },
    {
      "idx": 160,
      "transitions": [
        [[],[175]]
      ],
      "type": "normal"
    },
    {
      "idx": 161,
      "transitions": [
        [[],[176]]
      ],
      "type": "normal"
    },
    {
      "idx": 162,
      "transitions": [
        [[],[163]]
      ],
      "type": "normal"
    },
    {
      "idx": 163,
      "transitions": [
        [[],[181]]
      ],
      "type": "normal"
    },
    {
      "idx": 164,
      "transitions": [
        [[],[182]]
      ],
      "type": "normal"
    },
    {
      "idx": 165,
      "transitions": [
        [[],[183]]
      ],
      "type": "normal"
    },
    {
      "idx": 166,
      "transitions": [
        [[],[184]]
      ],
      "type": "normal"
    },
    {
      "idx": 167,
      "transitions": [
        [[],[185]]
      ],
      "type": "normal"
    },
    {
      "idx": 168,
      "transitions": [
        [[],[186]]
      ],
      "type": "normal"
    },
    {
      "idx": 169,
      "transitions": [
        [[],[187]]
      ],
      "type": "normal"
    },
    {
      "idx": 170,
      "transitions": [
        [[],[188]]
      ],
      "type": "normal"
    },
    {
      "idx": 171,
      "transitions": [
        [[],[189]]
      ],
      "type": "normal"
    },
    {
      "idx": 172,
      "transitions": [
        [[],[190]]
      ],
      "type": "normal"
    },
    {
      "idx": 173,
      "transitions": [
        [[],[177]]
      ],
      "type": "normal"
    },
    {
      "idx": 174,
      "transitions": [
        [[],[178]]
      ],
      "type": "normal"
    },
    {
      "idx": 175,
      "transitions": [
        [[],[179]]
      ],
      "type": "normal"
    },
    {
      "idx": 176,
      "transitions": [
        [[],[180]]
      ],
      "type": "normal"
    },
    {
      "idx": 177,
      "transitions": [
        [[],[194]],
        [[4],[195]]
      ],
      "type": "normal"
    },
    {
      "idx": 178,
      "transitions": [
        [[],[196,197]]
      ],
      "type": "normal"
    },
    {
      "idx": 179,
      "transitions": [
        [[],[198]],
        [[5],[199]]
      ],
      "type": "normal"
    },
    {
      "idx": 180,
      "transitions": [
        [[5],[200]]
      ],
      "type": "normal"
    },
    {
      "idx": 181,
      "transitions": [
        [[],[201]]
      ],
      "type": "normal"
    },
    {
      "idx": 182,
      "transitions": [
        [[4],[202]]
      ],
      "type": "normal"
    },
    {
      "idx": 183,
      "transitions": [
        [[4],[203]]
      ],
      "type": "normal"
    },
    {
      "idx": 184,
      "transitions": [
        [[],[202]]
      ],
      "type": "normal"
    },
    {
      "idx": 185,
      "transitions": [
        [[4],[192]]
      ],
      "type": "normal"
    },
    {
      "idx": 186,
      "transitions": [
        [[],[203]]
      ],
      "type": "normal"
    },
    {
      "idx": 187,
      "transitions": [
        [[4],[191]]
      ],
      "type": "normal"
    },
    {
      "idx": 188,
      "transitions": [
        [[],[192]]
      ],
      "type": "normal"
    },
    {
      "idx": 189,
      "transitions": [
        [[],[191]]
      ],
      "type": "normal"
    },
    {
      "idx": 190,
      "transitions": [
        [[4],[193]]
      ],
      "type": "normal"
    },
    {
      "idx": 191,
      "transitions": [
        [[],[204,191]]
      ],
      "type": "normal"
    },
    {
      "idx": 192,
      "transitions": [
        [[],[205,206,192]]
      ],
      "type": "normal"
    },
    {
      "idx": 193,
      "transitions": [
        [[],[207,193]]
      ],
      "type": "normal"
    },
    {
      "idx": 194,
      "transitions": [
        [[],[208,194]]
      ],
      "type": "normal"
    },
    {
      "idx": 195,
      "transitions": [
        [[],[209,195]]
      ],
      "type": "normal"
    },
    {
      "idx": 196,
      "transitions": [
        [[],[210,196]]
      ],
      "type": "normal"
    },
    {
      "idx": 197,
      "transitions": [
        [[],[211,197]]
      ],
      "type": "normal"
    },
    {
      "idx": 198,
      "transitions": [
        [[],[212,198]]
      ],
      "type": "normal"
    },
    {
      "idx": 199,
      "transitions": [
        [[],[213,199]]
      ],
      "type": "normal"
    },
    {
      "idx": 200,
      "transitions": [
        [[],[214,200]]
      ],
      "type": "normal"
    },
    {
      "idx": 201,
      "transitions": [
        [[],[215,201]]
      ],
      "type": "normal"
    },
    {
      "idx": 202,
      "transitions": [
        [[],[216,202]]
      ],
      "type": "normal"
    },
    {
      "idx": 203,
      "transitions": [
        [[],[217,218,203]]
      ],
      "type": "normal"
    },
    {
      "idx": 204,
      "transitions": [
        [[],[219]]
      ],
      "type": "normal"
    },
    {
      "idx": 205,
      "transitions": [
        [[],[220]]
      ],
      "type": "normal"
    },
    {
      "idx": 206,
      "transitions": [
        [[],[223]]
      ],
      "type": "normal"
    },
    {
      "idx": 207,
      "transitions": [
        [[],[224]]
      ],
      "type": "normal"
    },
    {
      "idx": 208,
      "transitions": [
        [[],[225]]
      ],
      "type": "normal"
    },
    {
      "idx": 209,
      "transitions": [
        [[],[226]]
      ],
      "type": "normal"
    },
    {
      "idx": 210,
      "transitions": [
        [[],[227]]
      ],
      "type": "normal"
    },
    {
      "idx": 211,
      "transitions": [
        [[],[228]]
      ],
      "type": "normal"
    },
    {
      "idx": 212,
      "transitions": [
        [[],[229]]
      ],
      "type": "normal"
    },
    {
      "idx": 213,
      "transitions": [
        [[],[230]]
      ],
      "type": "normal"
    },
    {
      "idx": 214,
      "transitions": [
        [[],[231]]
      ],
      "type": "normal"
    },
    {
      "idx": 215,
      "transitions": [
        [[],[232]]
      ],
      "type": "normal"
    },
    {
      "idx": 216,
      "transitions": [
        [[],[222]]
      ],
      "type": "normal"
    },
    {
      "idx": 217,
      "transitions": [
        [[],[221]]
      ],
      "type": "normal"
    },
    {
      "idx": 218,
      "transitions": [
        [[],[233]]
      ],
      "type": "normal"
    },
    {
      "idx": 219,
      "transitions": [
        [[],[239]]
      ],
      "type": "normal"
    },
    {
      "idx": 220,
      "transitions": [
        [[4],[239]]
      ],
      "type": "normal"
    },
    {
      "idx": 221,
      "transitions": [
        [[4],[240]]
      ],
      "type": "normal"
    },
    {
      "idx": 222,
      "transitions": [
        [[4],[241]]
      ],
      "type": "normal"
    },
    {
      "idx": 223,
      "transitions": [
        [[],[240]]
      ],
      "type": "normal"
    },
    {
      "idx": 224,
      "transitions": [
        [[4],[242]]
      ],
      "type": "normal"
    },
    {
      "idx": 225,
      "transitions": [
        [[],[243]],
        [[4],[244]]
      ],
      "type": "normal"
    },
    {
      "idx": 226,
      "transitions": [
        [[],[244]],
        [[4],[245]]
      ],
      "type": "normal"
    },
    {
      "idx": 227,
      "transitions": [
        [[],[246,247]]
      ],
      "type": "normal"
    },
    {
      "idx": 228,
      "transitions": [
        [[],[247,248]]
      ],
      "type": "normal"
    },
    {
      "idx": 229,
      "transitions": [
        [[],[234]],
        [[5],[235]]
      ],
      "type": "normal"
    },
    {
      "idx": 230,
      "transitions": [
        [[],[235]],
        [[5],[236]]
      ],
      "type": "normal"
    },
    {
      "idx": 231,
      "transitions": [
        [[5],[237]]
      ],
      "type": "normal"
    },
    {
      "idx": 232,
      "transitions": [
        [[],[238]]
      ],
      "type": "normal"
    },
    {
      "idx": 233,
      "transitions": [
        [[],[241]]
      ],
      "type": "normal"
    },
    {
      "idx": 234,
      "transitions": [
        [[],[254,234]]
      ],
      "type": "normal"
    },
    {
      "idx": 235,
      "transitions": [
        [[],[255,235,235]]
      ],
      "type": "normal"
    },
    {
      "idx": 236,
      "transitions": [
        [[],[256,236]]
      ],
      "type": "normal"
    },
    {
      "idx": 237,
      "transitions": [
        [[],[257,237]]
      ],
      "type": "normal"
    },
    {
      "idx": 238,
      "transitions": [
        [[],[258,238]]
      ],
      "type": "normal"
    },
    {
      "idx": 239,
      "transitions": [
        [[],[259,239]]
      ],
      "type": "normal"
    },
    {
      "idx": 240,
      "transitions": [
        [[],[260,261,240]]
      ],
      "type": "normal"
    },
    {
      "idx": 241,
      "transitions": [
        [[],[262,241]]
      ],
      "type": "normal"
    },
    {
      "idx": 242,
      "transitions": [
        [[],[263,242]]
      ],
      "type": "normal"
    },
    {
      "idx": 243,
      "transitions": [
        [[],[264,243]]
      ],
      "type": "normal"
    },
    {
      "idx": 244,
      "transitions": [
        [[],[249,244,244]]
      ],
      "type": "normal"
    },
    {
      "idx": 245,
      "transitions": [
        [[],[250,245]]
      ],
      "type": "normal"
    },
    {
      "idx": 246,
      "transitions": [
        [[],[251,246]]
      ],
      "type": "normal"
    },
    {
      "idx": 247,
      "transitions": [
        [[],[252,247]]
      ],
      "type": "normal"
    },
    {
      "idx": 248,
      "transitions": [
        [[],[253,248]]
      ],
      "type": "normal"
    },
    {
      "idx": 249,
      "transitions": [
        [[],[271]]
      ],
      "type": "normal"
    },
    {
      "idx": 250,
      "transitions": [
        [[],[272]]
      ],
      "type": "normal"
    },
    {
      "idx": 251,
      "transitions": [
        [[],[273]]
      ],
      "type": "normal"
    },
    {
      "idx": 252,
      "transitions": [
        [[],[274]]
      ],
      "type": "normal"
    },
    {
      "idx": 253,
      "transitions": [
        [[],[275]]
      ],
      "type": "normal"
    },
    {
      "idx": 254,
      "transitions": [
        [[],[276]]
      ],
      "type": "normal"
    },
    {
      "idx": 255,
      "transitions": [
        [[],[277]]
      ],
      "type": "normal"
    },
    {
      "idx": 256,
      "transitions": [
        [[],[278]]
      ],
      "type": "normal"
    },
    {
      "idx": 257,
      "transitions": [
        [[],[279]]
      ],
      "type": "normal"
    },
    {
      "idx": 258,
      "transitions": [
        [[],[280]]
      ],
      "type": "normal"
    },
    {
      "idx": 259,
      "transitions": [
        [[],[265]]
      ],
      "type": "normal"
    },
    {
      "idx": 260,
      "transitions": [
        [[],[266]]
      ],
      "type": "normal"
    },
    {
      "idx": 261,
      "transitions": [
        [[],[267]]
      ],
      "type": "normal"
    },
    {
      "idx": 262,
      "transitions": [
        [[],[268]]
      ],
      "type": "normal"
    },
    {
      "idx": 263,
      "transitions": [
        [[],[269]]
      ],
      "type": "normal"
    },
    {
      "idx": 264,
      "transitions": [
        [[],[270]]
      ],
      "type": "normal"
    },
    {
      "idx": 265,
      "transitions": [
        [[],[289]]
      ],
      "type": "normal"
    },
    {
      "idx": 266,
      "transitions": [
        [[4],[289]]
      ],
      "type": "normal"
    },
    {
      "idx": 267,
      "transitions": [
        [[],[290]]
      ],
      "type": "normal"
    },
    {
      "idx": 268,
      "transitions": [
        [[4],[290]]
      ],
      "type": "normal"
    },
    {
      "idx": 269,
      "transitions": [
        [[4],[291]]
      ],
      "type": "normal"
    },
    {
      "idx": 270,
      "transitions": [
        [[],[292]],
        [[4],[293]]
      ],
      "type": "normal"
    },
    {
      "idx": 271,
      "transitions": [
        [[],[293]],
        [[4],[294]]
      ],
      "type": "normal"
    },
    {
      "idx": 272,
      "transitions": [
        [[],[294]],
        [[4],[295]]
      ],
      "type": "normal"
    },
    {
      "idx": 273,
      "transitions": [
        [[],[296,297]]
      ],
      "type": "normal"
    },
    {
      "idx": 274,
      "transitions": [
        [[],[297,281]]
      ],
      "type": "normal"
    },
    {
      "idx": 275,
      "transitions": [
        [[],[281,282]]
      ],
      "type": "normal"
    },
    {
      "idx": 276,
      "transitions": [
        [[],[283]],
        [[5],[284]]
      ],
      "type": "normal"
    },
    {
      "idx": 277,
      "transitions": [
        [[],[284]],
        [[5],[285]]
      ],
      "type": "normal"
    },
    {
      "idx": 278,
      "transitions": [
        [[],[285]],
        [[5],[286]]
      ],
      "type": "normal"
    },
    {
      "idx": 279,
      "transitions": [
        [[5],[287]]
      ],
      "type": "normal"
    },
    {
      "idx": 280,
      "transitions": [
        [[],[288]]
      ],
      "type": "normal"
    },
    {
      "idx": 281,
      "transitions": [
        [[],[305,281]]
      ],
      "type": "normal"
    },
    {
      "idx": 282,
      "transitions": [
        [[],[306,282]]
      ],
      "type": "normal"
    },
    {
      "idx": 283,
      "transitions": [
        [[],[307,283]]
      ],
      "type": "normal"
    },
    {
      "idx": 284,
      "transitions": [
        [[],[308,284,284]]
      ],
      "type": "normal"
    },
    {
      "idx": 285,
      "transitions": [
        [[],[309,285,285]]
      ],
      "type": "normal"
    },
    {
      "idx": 286,
      "transitions": [
        [[],[310,286]]
      ],
      "type": "normal"
    },
    {
      "idx": 287,
      "transitions": [
        [[],[311,287]]
      ],
      "type": "normal"
    },
    {
      "idx": 288,
      "transitions": [
        [[],[312,288]]
      ],
      "type": "normal"
    },
    {
      "idx": 289,
      "transitions": [
        [[],[313,289]]
      ],
      "type": "normal"
    },
    {
      "idx": 290,
      "transitions": [
        [[],[314,290]]
      ],
      "type": "normal"
    },
    {
      "idx": 291,
      "transitions": [
        [[],[298,291]]
      ],
      "type": "normal"
    },
    {
      "idx": 292,
      "transitions": [
        [[],[299,292]]
      ],
      "type": "normal"
    },
    {
      "idx": 293,
      "transitions": [
        [[],[300,293,293]]
      ],
      "type": "normal"
    },
    {
      "idx": 294,
      "transitions": [
        [[],[301,294,294]]
      ],
      "type": "normal"
    },
    {
      "idx": 295,
      "transitions": [
        [[],[302,295]]
      ],
      "type": "normal"
    },
    {
      "idx": 296,
      "transitions": [
        [[],[303,296]]
      ],
      "type": "normal"
    },
    {
      "idx": 297,
      "transitions": [
        [[],[304,297]]
      ],
      "type": "normal"
    },
    {
      "idx": 298,
      "transitions": [
        [[],[322]]
      ],
      "type": "normal"
    },
    {
      "idx": 299,
      "transitions": [
        [[],[323]]
      ],
      "type": "normal"
    },
    {
      "idx": 300,
      "transitions": [
        [[],[324]]
      ],
      "type": "normal"
    },
    {
      "idx": 301,
      "transitions": [
        [[],[325]]
      ],
      "type": "normal"
    },
    {
      "idx": 302,
      "transitions": [
        [[],[326]]
      ],
      "type": "normal"
    },
    {
      "idx": 303,
      "transitions": [
        [[],[327]]
      ],
      "type": "normal"
    },
    {
      "idx": 304,
      "transitions": [
        [[],[328]]
      ],
      "type": "normal"
    },
    {
      "idx": 305,
      "transitions": [
        [[],[329]]
      ],
      "type": "normal"
    },
    {
      "idx": 306,
      "transitions": [
        [[],[330]]
      ],
      "type": "normal"
    },
    {
      "idx": 307,
      "transitions": [
        [[],[331]]
      ],
      "type": "normal"
    },
    {
      "idx": 308,
      "transitions": [
        [[],[315]]
      ],
      "type": "normal"
    },
    {
      "idx": 309,
      "transitions": [
        [[],[316]]
      ],
      "type": "normal"
    },
    {
      "idx": 310,
      "transitions": [
        [[],[317]]
      ],
      "type": "normal"
    },
    {
      "idx": 311,
      "transitions": [
        [[],[318]]
      ],
      "type": "normal"
    },
    {
      "idx": 312,
      "transitions": [
        [[],[319]]
      ],
      "type": "normal"
    },
    {
      "idx": 313,
      "transitions": [
        [[],[320]]
      ],
      "type": "normal"
    },
    {
      "idx": 314,
      "transitions": [
        [[],[321]]
      ],
      "type": "normal"
    },
    {
      "idx": 315,
      "transitions": [
        [[],[341]],
        [[5],[342]]
      ],
      "type": "normal"
    },
    {
      "idx": 316,
      "transitions": [
        [[],[342]],
        [[5],[343]]
      ],
      "type": "normal"
    },
    {
      "idx": 317,
      "transitions": [
        [[],[343]],
        [[5],[344]]
      ],
      "type": "normal"
    },
    {
      "idx": 318,
      "transitions": [
        [[5],[345]]
      ],
      "type": "normal"
    },
    {
      "idx": 319,
      "transitions": [
        [[],[346]]
      ],
      "type": "normal"
    },
    {
      "idx": 320,
      "transitions": [
        [[],[347]]
      ],
      "type": "normal"
    },
    {
      "idx": 321,
      "transitions": [
        [[4],[347]]
      ],
      "type": "normal"
    },
    {
      "idx": 322,
      "transitions": [
        [[4],[348]]
      ],
      "type": "normal"
    },
    {
      "idx": 323,
      "transitions": [
        [[],[349]],
        [[4],[350]]
      ],
      "type": "normal"
    },
    {
      "idx": 324,
      "transitions": [
        [[],[350]],
        [[4],[332]]
      ],
      "type": "normal"
    },
    {
      "idx": 325,
      "transitions": [
        [[],[332]],
        [[4],[333]]
      ],
      "type": "normal"
    },
    {
      "idx": 326,
      "transitions": [
        [[],[333]],
        [[4],[334]]
      ],
      "type": "normal"
    },
    {
      "idx": 327,
      "transitions": [
        [[],[335,336]]
      ],
      "type": "normal"
    },
    {
      "idx": 328,
      "transitions": [
        [[],[336,337]]
      ],
      "type": "normal"
    },
    {
      "idx": 329,
      "transitions": [
        [[],[337,338]]
      ],
      "type": "normal"
    },
    {
      "idx": 330,
      "transitions": [
        [[],[338,339]]
      ],
      "type": "normal"
    },
    {
      "idx": 331,
      "transitions": [
        [[],[340]],
        [[5],[341]]
      ],
      "type": "normal"
    },
    {
      "idx": 332,
      "transitions": [
        [[],[351,352]]
      ],
      "type": "normal"
    },
    {
      "idx": 333,
      "transitions": [
        [[],[353,354]]
      ],
      "type": "normal"
    },
    {
      "idx": 334,
      "transitions": [
        [[],[355]]
      ],
      "type": "normal"
    },
    {
      "idx": 335,
      "transitions": [
        [[],[356]]
      ],
      "type": "normal"
    },
    {
      "idx": 336,
      "transitions": [
        [[],[357]]
      ],
      "type": "normal"
    },
    {
      "idx": 337,
      "transitions": [
        [[],[358]]
      ],
      "type": "normal"
    },
    {
      "idx": 338,
      "transitions": [
        [[],[359]]
      ],
      "type": "normal"
    },
    {
      "idx": 339,
      "transitions": [
        [[],[360]]
      ],
      "type": "normal"
    },
    {
      "idx": 340,
      "transitions": [
        [[],[361]]
      ],
      "type": "normal"
    },
    {
      "idx": 341,
      "transitions": [
        [[],[362,363]]
      ],
      "type": "normal"
    },
    {
      "idx": 342,
      "transitions": [
        [[],[364,365]]
      ],
      "type": "normal"
    },
    {
      "idx": 343,
      "transitions": [
        [[],[366,367]]
      ],
      "type": "normal"
    },
    {
      "idx": 344,
      "transitions": [
        [[],[368]]
      ],
      "type": "normal"
    },
    {
      "idx": 345,
      "transitions": [
        [[],[369]]
      ],
      "type": "normal"
    },
    {
      "idx": 346,
      "transitions": [
        [[],[370]]
      ],
      "type": "normal"
    },
    {
      "idx": 347,
      "transitions": [
        [[],[371]]
      ],
      "type": "normal"
    },
    {
      "idx": 348,
      "transitions": [
        [[],[372]]
      ],
      "type": "normal"
    },
    {
      "idx": 349,
      "transitions": [
        [[],[373]]
      ],
      "type": "normal"
    },
    {
      "idx": 350,
      "transitions": [
        [[],[374,375]]
      ],
      "type": "normal"
    },
    {
      "idx": 351,
      "transitions": [
        [[],[376]]
      ],
      "type": "normal"
    },
    {
      "idx": 352,
      "transitions": [
        [[],[377]]
      ],
      "type": "normal"
    },
    {
      "idx": 353,
      "transitions": [
        [[],[378]]
      ],
      "type": "normal"
    },
    {
      "idx": 354,
      "transitions": [
        [[],[379]]
      ],
      "type": "normal"
    },
    {
      "idx": 355,
      "transitions": [
        [[],[380]]
      ],
      "type": "normal"
    },
    {
      "idx": 356,
      "transitions": [
        [[],[381]]
      ],
      "type": "normal"
    },
    {
      "idx": 357,
      "transitions": [
        [[],[382]]
      ],
      "type": "normal"
    },
    {
      "idx": 358,
      "transitions": [
        [[],[383]]
      ],
      "type": "normal"
    },
    {
      "idx": 359,
      "transitions": [
        [[],[384]]
      ],
      "type": "normal"
    },
    {
      "idx": 360,
      "transitions": [
        [[],[385]]
      ],
      "type": "normal"
    },
    {
      "idx": 361,
      "transitions": [
        [[],[386]]
      ],
      "type": "normal"
    },
    {
      "idx": 362,
      "transitions": [
        [[],[387]]
      ],
      "type": "normal"
    },
    {
      "idx": 363,
      "transitions": [
        [[],[388]]
      ],
      "type": "normal"
    },
    {
      "idx": 364,
      "transitions": [
        [[],[389]]
      ],
      "type": "normal"
    },
    {
      "idx": 365,
      "transitions": [
        [[],[390]]
      ],
      "type": "normal"
    },
    {
      "idx": 366,
      "transitions": [
        [[],[391]]
      ],
      "type": "normal"
    },
    {
      "idx": 367,
      "transitions": [
        [[],[392]]
      ],
      "type": "normal"
    },
    {
      "idx": 368,
      "transitions": [
        [[],[393]]
      ],
      "type": "normal"
    },
    {
      "idx": 369,
      "transitions": [
        [[],[394]]
      ],
      "type": "normal"
    },
    {
      "idx": 370,
      "transitions": [
        [[],[395]]
      ],
      "type": "normal"
    },
    {
      "idx": 371,
      "transitions": [
        [[],[396]]
      ],
      "type": "normal"
    },
    {
      "idx": 372,
      "transitions": [
        [[],[397]]
      ],
      "type": "normal"
    },
    {
      "idx": 373,
      "transitions": [
        [[],[398]]
      ],
      "type": "normal"
    },
    {
      "idx": 374,
      "transitions": [
        [[],[399]]
      ],
      "type": "normal"
    },
    {
      "idx": 375,
      "transitions": [
        [[],[400]]
      ],
      "type": "normal"
    },
    {
      "idx": 376,
      "transitions": [
        [[],[401]]
      ],
      "type": "normal"
    },
    {
      "idx": 377,
      "transitions": [
        [[4],[402]]
      ],
      "type": "normal"
    },
    {
      "idx": 378,
      "transitions": [
        [[],[402]]
      ],
      "type": "normal"
    },
    {
      "idx": 379,
      "transitions": [
        [[4],[403]]
      ],
      "type": "normal"
    },
    {
      "idx": 380,
      "transitions": [
        [[],[403]]
      ],
      "type": "normal"
    },
    {
      "idx": 381,
      "transitions": [
        [[4],[404]]
      ],
      "type": "normal"
    },
    {
      "idx": 382,
      "transitions": [
        [[],[405]],
        [[4],[405]]
      ],
      "type": "normal"
    },
    {
      "idx": 383,
      "transitions": [
        [[],[406,407]]
      ],
      "type": "normal"
    },
    {
      "idx": 384,
      "transitions": [
        [[],[408]],
        [[5],[408]]
      ],
      "type": "normal"
    },
    {
      "idx": 385,
      "transitions": [
        [[5],[409]]
      ],
      "type": "normal"
    },
    {
      "idx": 386,
      "transitions": [
        [[5],[413]]
      ],
      "type": "normal"
    },
    {
      "idx": 387,
      "transitions": [
        [[],[413]]
      ],
      "type": "normal"
    },
    {
      "idx": 388,
      "transitions": [
        [[5],[414]]
      ],
      "type": "normal"
    },
    {
      "idx": 389,
      "transitions": [
        [[],[414]]
      ],
      "type": "normal"
    },
    {
      "idx": 390,
      "transitions": [
        [[5],[415]]
      ],
      "type": "normal"
    },
    {
      "idx": 391,
      "transitions": [
        [[],[415]]
      ],
      "type": "normal"
    },
    {
      "idx": 392,
      "transitions": [
        [[5],[416]]
      ],
      "type": "normal"
    },
    {
      "idx": 393,
      "transitions": [
        [[],[416]]
      ],
      "type": "normal"
    },
    {
      "idx": 394,
      "transitions": [
        [[],[417]]
      ],
      "type": "normal"
    },
    {
      "idx": 395,
      "transitions": [
        [[],[418]]
      ],
      "type": "normal"
    },
    {
      "idx": 396,
      "transitions": [
        [[],[410]]
      ],
      "type": "normal"
    },
    {
      "idx": 397,
      "transitions": [
        [[],[411]]
      ],
      "type": "normal"
    },
    {
      "idx": 398,
      "transitions": [
        [[4],[412]]
      ],
      "type": "normal"
    },
    {
      "idx": 399,
      "transitions": [
        [[],[412]]
      ],
      "type": "normal"
    },
    {
      "idx": 400,
      "transitions": [
        [[4],[401]]
      ],
      "type": "normal"
    },
    {
      "idx": 401,
      "transitions": [
        [[],[428,429]]
      ],
      "type": "normal"
    },
    {
      "idx": 402,
      "transitions": [
        [[],[431,432]]
      ],
      "type": "normal"
    },
    {
      "idx": 403,
      "transitions": [
        [[],[433]]
      ],
      "type": "normal"
    },
    {
      "idx": 404,
      "transitions": [
        [[],[434]]
      ],
      "type": "normal"
    },
    {
      "idx": 405,
      "transitions": [
        [[],[435]]
      ],
      "type": "normal"
    },
    {
      "idx": 406,
      "transitions": [
        [[],[436]]
      ],
      "type": "normal"
    },
    {
      "idx": 407,
      "transitions": [
        [[],[437]]
      ],
      "type": "normal"
    },
    {
      "idx": 408,
      "transitions": [
        [[],[438]]
      ],
      "type": "normal"
    },
    {
      "idx": 409,
      "transitions": [
        [[],[439]]
      ],
      "type": "normal"
    },
    {
      "idx": 410,
      "transitions": [
        [[],[440]]
      ],
      "type": "normal"
    },
    {
      "idx": 411,
      "transitions": [
        [[],[419]]
      ],
      "type": "normal"
    },
    {
      "idx": 412,
      "transitions": [
        [[],[430]]
      ],
      "type": "normal"
    },
    {
      "idx": 413,
      "transitions": [
        [[],[420]]
      ],
      "type": "normal"
    },
    {
      "idx": 414,
      "transitions": [
        [[],[421,422]]
      ],
      "type": "normal"
    },
    {
      "idx": 415,
      "transitions": [
        [[],[423,424]]
      ],
      "type": "normal"
    },
    {
      "idx": 416,
      "transitions": [
        [[],[425]]
      ],
      "type": "normal"
    },
    {
      "idx": 417,
      "transitions": [
        [[],[426]]
      ],
      "type": "normal"
    },
    {
      "idx": 418,
      "transitions": [
        [[],[427]]
      ],
      "type": "normal"
    },
    {
      "idx": 419,
      "transitions": [
        [[],[443]]
      ],
      "type": "normal"
    },
    {
      "idx": 420,
      "transitions": [
        [[],[444]]
      ],
      "type": "normal"
    },
    {
      "idx": 421,
      "transitions": [
        [[],[445]]
      ],
      "type": "normal"
    },
    {
      "idx": 422,
      "transitions": [
        [[],[446]]
      ],
      "type": "normal"
    },
    {
      "idx": 423,
      "transitions": [
        [[],[447]]
      ],
      "type": "normal"
    },
    {
      "idx": 424,
      "transitions": [
        [[],[448]]
      ],
      "type": "normal"
    },
    {
      "idx": 425,
      "transitions": [
        [[],[449]]
      ],
      "type": "normal"
    },
    {
      "idx": 426,
      "transitions": [
        [[],[450]]
      ],
      "type": "normal"
    },
    {
      "idx": 427,
      "transitions": [
        [[],[451]]
      ],
      "type": "normal"
    },
    {
      "idx": 428,
      "transitions": [
        [[],[452]]
      ],
      "type": "normal"
    },
    {
      "idx": 429,
      "transitions": [
        [[],[453]]
      ],
      "type": "normal"
    },
    {
      "idx": 430,
      "transitions": [
        [[],[454]]
      ],
      "type": "normal"
    },
    {
      "idx": 431,
      "transitions": [
        [[],[455]]
      ],
      "type": "normal"
    },
    {
      "idx": 432,
      "transitions": [
        [[],[456]]
      ],
      "type": "normal"
    },
    {
      "idx": 433,
      "transitions": [
        [[],[457]]
      ],
      "type": "normal"
    },
    {
      "idx": 434,
      "transitions": [
        [[],[458]]
      ],
      "type": "normal"
    },
    {
      "idx": 435,
      "transitions": [
        [[],[459]]
      ],
      "type": "normal"
    },
    {
      "idx": 436,
      "transitions": [
        [[],[460]]
      ],
      "type": "normal"
    },
    {
      "idx": 437,
      "transitions": [
        [[],[461]]
      ],
      "type": "normal"
    },
    {
      "idx": 438,
      "transitions": [
        [[],[462]]
      ],
      "type": "normal"
    },
    {
      "idx": 439,
      "transitions": [
        [[],[441]]
      ],
      "type": "normal"
    },
    {
      "idx": 440,
      "transitions": [
        [[],[442]]
      ],
      "type": "normal"
    },
    {
      "idx": 441,
      "transitions": [
        [[5],[463]]
      ],
      "type": "normal"
    },
    {
      "idx": 442,
      "transitions": [
        [[],[464]]
      ],
      "type": "normal"
    },
    {
      "idx": 443,
      "transitions": [
        [[],[465]]
      ],
      "type": "normal"
    },
    {
      "idx": 444,
      "transitions": [
        [[5],[466]]
      ],
      "type": "normal"
    },
    {
      "idx": 445,
      "transitions": [
        [[],[466]]
      ],
      "type": "normal"
    },
    {
      "idx": 446,
      "transitions": [
        [[5],[467]]
      ],
      "type": "normal"
    },
    {
      "idx": 447,
      "transitions": [
        [[],[467]]
      ],
      "type": "normal"
    },
    {
      "idx": 448,
      "transitions": [
        [[5],[468]]
      ],
      "type": "normal"
    },
    {
      "idx": 449,
      "transitions": [
        [[],[468]]
      ],
      "type": "normal"
    },
    {
      "idx": 450,
      "transitions": [
        [[],[469]]
      ],
      "type": "normal"
    },
    {
      "idx": 451,
      "transitions": [
        [[],[470]]
      ],
      "type": "normal"
    },
    {
      "idx": 452,
      "transitions": [
        [[],[471]]
      ],
      "type": "normal"
    },
    {
      "idx": 453,
      "transitions": [
        [[4],[472]]
      ],
      "type": "normal"
    },
    {
      "idx": 454,
      "transitions": [
        [[4],[471]]
      ],
      "type": "normal"
    },
    {
      "idx": 455,
      "transitions": [
        [[],[472]]
      ],
      "type": "normal"
    },
    {
      "idx": 456,
      "transitions": [
        [[4],[473]]
      ],
      "type": "normal"
    },
    {
      "idx": 457,
      "transitions": [
        [[],[473]]
      ],
      "type": "normal"
    },
    {
      "idx": 458,
      "transitions": [
        [[4],[474]]
      ],
      "type": "normal"
    },
    {
      "idx": 459,
      "transitions": [
        [[],[475]],
        [[4],[475]]
      ],
      "type": "normal"
    },
    {
      "idx": 460,
      "transitions": [
        [[],[476,477]]
      ],
      "type": "normal"
    },
    {
      "idx": 461,
      "transitions": [
        [[],[477,478]]
      ],
      "type": "normal"
    },
    {
      "idx": 462,
      "transitions": [
        [[],[479]],
        [[5],[479]]
      ],
      "type": "normal"
    },
    {
      "idx": 463,
      "transitions": [
        [[],[480]]
      ],
      "type": "normal"
    },
    {
      "idx": 464,
      "transitions": [
        [[],[481]]
      ],
      "type": "normal"
    },
    {
      "idx": 465,
      "transitions": [
        [[],[482]]
      ],
      "type": "normal"
    },
    {
      "idx": 466,
      "transitions": [
        [[],[483]]
      ],
      "type": "normal"
    },
    {
      "idx": 467,
      "transitions": [
        [[],[484,485]]
      ],
      "type": "normal"
    },
    {
      "idx": 468,
      "transitions": [
        [[],[486]]
      ],
      "type": "normal"
    },
    {
      "idx": 469,
      "transitions": [
        [[],[487]]
      ],
      "type": "normal"
    },
    {
      "idx": 470,
      "transitions": [
        [[],[488]]
      ],
      "type": "normal"
    },
    {
      "idx": 471,
      "transitions": [
        [[],[489]]
      ],
      "type": "normal"
    },
    {
      "idx": 472,
      "transitions": [
        [[],[490,491]]
      ],
      "type": "normal"
    },
    {
      "idx": 473,
      "transitions": [
        [[],[492]]
      ],
      "type": "normal"
    },
    {
      "idx": 474,
      "transitions": [
        [[],[493]]
      ],
      "type": "normal"
    },
    {
      "idx": 475,
      "transitions": [
        [[],[494]]
      ],
      "type": "normal"
    },
    {
      "idx": 476,
      "transitions": [
        [[],[495]]
      ],
      "type": "normal"
    },
    {
      "idx": 477,
      "transitions": [
        [[],[496]]
      ],
      "type": "normal"
    },
    {
      "idx": 478,
      "transitions": [
        [[],[497]]
      ],
      "type": "normal"
    },
    {
      "idx": 479,
      "transitions": [
        [[],[498]]
      ],
      "type": "normal"
    },
    {
      "idx": 480,
      "transitions": [
        [[],[499]]
      ],
      "type": "normal"
    },
    {
      "idx": 481,
      "transitions": [
        [[],[500]]
      ],
      "type": "normal"
    },
    {
      "idx": 482,
      "transitions": [
        [[],[501]]
      ],
      "type": "normal"
    },
    {
      "idx": 483,
      "transitions": [
        [[],[502]]
      ],
      "type": "normal"
    },
    {
      "idx": 484,
      "transitions": [
        [[],[503]]
      ],
      "type": "normal"
    },
    {
      "idx": 485,
      "transitions": [
        [[],[504]]
      ],
      "type": "normal"
    },
    {
      "idx": 486,
      "transitions": [
        [[],[505]]
      ],
      "type": "normal"
    },
    {
      "idx": 487,
      "transitions": [
        [[],[506]]
      ],
      "type": "normal"
    },
    {
      "idx": 488,
      "transitions": [
        [[],[507]]
      ],
      "type": "normal"
    },
    {
      "idx": 489,
      "transitions": [
        [[],[508]]
      ],
      "type": "normal"
    },
    {
      "idx": 490,
      "transitions": [
        [[],[509]]
      ],
      "type": "normal"
    },
    {
      "idx": 491,
      "transitions": [
        [[],[510]]
      ],
      "type": "normal"
    },
    {
      "idx": 492,
      "transitions": [
        [[],[511]]
      ],
      "type": "normal"
    },
    {
      "idx": 493,
      "transitions": [
        [[],[512]]
      ],
      "type": "normal"
    },
    {
      "idx": 494,
      "transitions": [
        [[],[513]]
      ],
      "type": "normal"
    },
    {
      "idx": 495,
      "transitions": [
        [[],[514]]
      ],
      "type": "normal"
    },
    {
      "idx": 496,
      "transitions": [
        [[],[515]]
      ],
      "type": "normal"
    },
    {
      "idx": 497,
      "transitions": [
        [[],[516]]
      ],
      "type": "normal"
    },
    {
      "idx": 498,
      "transitions": [
        [[],[517]]
      ],
      "type": "normal"
    },
    {
      "idx": 499,
      "transitions": [
        [[5],[527]]
      ],
      "type": "normal"
    },
    {
      "idx": 500,
      "transitions": [
        [[],[528]]
      ],
      "type": "normal"
    },
    {
      "idx": 501,
      "transitions": [
        [[],[529]]
      ],
      "type": "normal"
    },
    {
      "idx": 502,
      "transitions": [
        [[5],[530]]
      ],
      "type": "normal"
    },
    {
      "idx": 503,
      "transitions": [
        [[],[530]]
      ],
      "type": "normal"
    },
    {
      "idx": 504,
      "transitions": [
        [[5],[531]]
      ],
      "type": "normal"
    },
    {
      "idx": 505,
      "transitions": [
        [[],[531]]
      ],
      "type": "normal"
    },
    {
      "idx": 506,
      "transitions": [
        [[],[532]]
      ],
      "type": "normal"
    },
    {
      "idx": 507,
      "transitions": [
        [[],[533]]
      ],
      "type": "normal"
    },
    {
      "idx": 508,
      "transitions": [
        [[4],[518]]
      ],
      "type": "normal"
    },
    {
      "idx": 509,
      "transitions": [
        [[],[518]]
      ],
      "type": "normal"
    },
    {
      "idx": 510,
      "transitions": [
        [[4],[519]]
      ],
      "type": "normal"
    },
    {
      "idx": 511,
      "transitions": [
        [[],[519]]
      ],
      "type": "normal"
    },
    {
      "idx": 512,
      "transitions": [
        [[4],[520]]
      ],
      "type": "normal"
    },
    {
      "idx": 513,
      "transitions": [
        [[],[521]],
        [[4],[521]]
      ],
      "type": "normal"
    },
    {
      "idx": 514,
      "transitions": [
        [[],[522,523]]
      ],
      "type": "normal"
    },
    {
      "idx": 515,
      "transitions": [
        [[],[523,524]]
      ],
      "type": "normal"
    },
    {
      "idx": 516,
      "transitions": [
        [[],[524,525]]
      ],
      "type": "normal"
    },
    {
      "idx": 517,
      "transitions": [
        [[],[526]],
        [[5],[526]]
      ],
      "type": "normal"
    },
    {
      "idx": 518,
      "transitions": [
        [[],[540]]
      ],
      "type": "normal"
    },
    {
      "idx": 519,
      "transitions": [
        [[],[541]]
      ],
      "type": "normal"
    },
    {
      "idx": 520,
      "transitions": [
        [[],[542]]
      ],
      "type": "normal"
    },
    {
      "idx": 521,
      "transitions": [
        [[],[543]]
      ],
      "type": "normal"
    },
    {
      "idx": 522,
      "transitions": [
        [[],[544]]
      ],
      "type": "normal"
    },
    {
      "idx": 523,
      "transitions": [
        [[],[545]]
      ],
      "type": "normal"
    },
    {
      "idx": 524,
      "transitions": [
        [[],[546]]
      ],
      "type": "normal"
    },
    {
      "idx": 525,
      "transitions": [
        [[],[547]]
      ],
      "type": "normal"
    },
    {
      "idx": 526,
      "transitions": [
        [[],[548]]
      ],
      "type": "normal"
    },
    {
      "idx": 527,
      "transitions": [
        [[],[549]]
      ],
      "type": "normal"
    },
    {
      "idx": 528,
      "transitions": [
        [[],[534]]
      ],
      "type": "normal"
    },
    {
      "idx": 529,
      "transitions": [
        [[],[535]]
      ],
      "type": "normal"
    },
    {
      "idx": 530,
      "transitions": [
        [[],[536]]
      ],
      "type": "normal"
    },
    {
      "idx": 531,
      "transitions": [
        [[],[537]]
      ],
      "type": "normal"
    },
    {
      "idx": 532,
      "transitions": [
        [[],[538]]
      ],
      "type": "normal"
    },
    {
      "idx": 533,
      "transitions": [
        [[],[539]]
      ],
      "type": "normal"
    },
    {
      "idx": 534,
      "transitions": [
        [[],[556]]
      ],
      "type": "normal"
    },
    {
      "idx": 535,
      "transitions": [
        [[],[557]]
      ],
      "type": "normal"
    },
    {
      "idx": 536,
      "transitions": [
        [[],[558]]
      ],
      "type": "normal"
    },
    {
      "idx": 537,
      "transitions": [
        [[],[559]]
      ],
      "type": "normal"
    },
    {
      "idx": 538,
      "transitions": [
        [[],[560]]
      ],
      "type": "normal"
    },
    {
      "idx": 539,
      "transitions": [
        [[],[561]]
      ],
      "type": "normal"
    },
    {
      "idx": 540,
      "transitions": [
        [[],[562]]
      ],
      "type": "normal"
    },
    {
      "idx": 541,
      "transitions": [
        [[],[563]]
      ],
      "type": "normal"
    },
    {
      "idx": 542,
      "transitions": [
        [[],[564]]
      ],
      "type": "normal"
    },
    {
      "idx": 543,
      "transitions": [
        [[],[565]]
      ],
      "type": "normal"
    },
    {
      "idx": 544,
      "transitions": [
        [[],[550]]
      ],
      "type": "normal"
    },
    {
      "idx": 545,
      "transitions": [
        [[],[551]]
      ],
      "type": "normal"
    },
    {
      "idx": 546,
      "transitions": [
        [[],[552]]
      ],
      "type": "normal"
    },
    {
      "idx": 547,
      "transitions": [
        [[],[553]]
      ],
      "type": "normal"
    },
    {
      "idx": 548,
      "transitions": [
        [[],[554]]
      ],
      "type": "normal"
    },
    {
      "idx": 549,
      "transitions": [
        [[],[555]]
      ],
      "type": "normal"
    },
    {
      "idx": 550,
      "transitions": [
        [[],[571,572]]
      ],
      "type": "normal"
    },
    {
      "idx": 551,
      "transitions": [
        [[],[572,573]]
      ],
      "type": "normal"
    },
    {
      "idx": 552,
      "transitions": [
        [[],[573,574]]
      ],
      "type": "normal"
    },
    {
      "idx": 553,
      "transitions": [
        [[],[574,575]]
      ],
      "type": "normal"
    },
    {
      "idx": 554,
      "transitions": [
        [[],[576]],
        [[5],[576]]
      ],
      "type": "normal"
    },
    {
      "idx": 555,
      "transitions": [
        [[5],[577]]
      ],
      "type": "normal"
    },
    {
      "idx": 556,
      "transitions": [
        [[],[578]]
      ],
      "type": "normal"
    },
    {
      "idx": 557,
      "transitions": [
        [[],[579]]
      ],
      "type": "normal"
    },
    {
      "idx": 558,
      "transitions": [
        [[5],[580]]
      ],
      "type": "normal"
    },
    {
      "idx": 559,
      "transitions": [
        [[],[580]]
      ],
      "type": "normal"
    },
    {
      "idx": 560,
      "transitions": [
        [[],[566]]
      ],
      "type": "normal"
    },
    {
      "idx": 561,
      "transitions": [
        [[],[567]]
      ],
      "type": "normal"
    },
    {
      "idx": 562,
      "transitions": [
        [[4],[568]]
      ],
      "type": "normal"
    },
    {
      "idx": 563,
      "transitions": [
        [[],[568]]
      ],
      "type": "normal"
    },
    {
      "idx": 564,
      "transitions": [
        [[4],[569]]
      ],
      "type": "normal"
    },
    {
      "idx": 565,
      "transitions": [
        [[],[570]],
        [[4],[570]]
      ],
      "type": "normal"
    },
    {
      "idx": 566,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 567,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 568,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 569,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 570,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 571,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 572,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 573,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 574,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 575,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 576,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 577,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 578,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 579,
      "transitions": [

      ],
      "type": "terminal"
    },
    {
      "idx": 580,
      "transitions": [

      ],
      "type": "terminal"
    }
  ],
  "profile": [
    1,
    1,
    3,
    3,
    3,
    3,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    328,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    865,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    342,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    586,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    342,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    798,
    798,
    798,
    798,
    798,
    798,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    684,
    684,
    684,
    684,
    684,
    684,
    684,
    0,
    0,
    0,
    0,
    0,
    0,
    684,
    684,
    684,
    684,
    684,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    738,
    738,
    396,
    396,
    396,
    396,
    396,
    396,
    396,
    396,
    396,
    396,
    396,
    396,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    342,
    798,
    1,
    1,
    1,
    1,
    1,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    0,
    181,
    181,
    181,
    181,
    181,
    956,
    956,
    956,
    956,
    775,
    775,
    775,
    775,
    775,
    242,
    242,
    242,
    242,
    242,
    242,
    242,
    242,
    242,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    67,
    67,
    67,
    114,
    114,
    114,
    114,
    181,
    181,
    0,
    0,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    190,
    190,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    181,
    67,
    67,
    67,
    67,
    114,
    114,
    114,
    0,
    0,
    0,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    114,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    492,
    492,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    328,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    66,
    66,
    98,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    84,
    84,
    52,
    52,
    52,
    52,
    52,
    84,
    84,
    84,
    84,
    84,
    84,
    84,
    84,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    164,
    76,
    76,
    76,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    15,
    15,
    12,
    12,
    12,
    12,
    12,
    12,
    12,
    12,
    12,
    12,
    3,
    3,
    0
  ]
}
