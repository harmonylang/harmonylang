{
  "nstates": 55,
  "issue": "Non-terminating state",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/naiveFlags.hny",
            "lines": [
                "in_cs = 0",
                "invariant in_cs in { 0, 1 }",
                "",
                "flags = [ False, False ]",
                "",
                "def thread(self):",
                "    while choose({ False, True }):",
                "        # Enter critical section",
                "        flags[self] = True",
                "        await not flags[1 - self]",
                "",
                "        atomically in_cs += 1",
                "        # Critical section",
                "        atomically in_cs -= 1",
                "",
                "        # Leave critical section",
                "        flags[self] = False",
                "",
                "spawn thread(0)",
                "spawn thread(1)"
              ],
            "identifiers": {
                "thread": "constant",
                "self": "local-const",
                "flags": "global",
                "in_cs": "global",
                "this": "local-var",
                "___": "___"
              }
          }
      },
    "labels": {
        "__end__": 77
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Store in_cs",
            "pop a value and store it in shared variable in_cs"
          ],
        [
            "Jump 14",
            "jump over invariant definition: set program counter to 14"
          ],
        [
            "Frame invariant()",
            "start of method invariant"
          ],
        [
            "Load in_cs",
            "push value of shared variable in_cs"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "2-ary in",
            "pop 2 values and push the result of applying in"
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Invariant 4",
            "test invariant"
          ],
        [
            "Push ()",
            "building a tuple: push constant ()"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary ListAdd",
            "pop 2 values and push the result of applying ListAdd"
          ],
        [
            "Store flags",
            "pop a value and store it in shared variable flags"
          ],
        [
            "Jump 65",
            "jump over method definition: set program counter to 65"
          ],
        [
            "Frame thread(self)",
            "start of method thread"
          ],
        [
            "Push {}",
            "push constant {}"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "2-ary SetAdd",
            "pop 2 values and push the result of applying SetAdd"
          ],
        [
            "Choose",
            "pop a set value and push one of its elements"
          ],
        [
            "JumpCond False 63",
            "pop a value and jump to 63 if the value is False"
          ],
        [
            "Push ?flags",
            "push constant ?flags"
          ],
        [
            "LoadVar self",
            "push the value of self"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Push ?flags",
            "push constant ?flags"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "LoadVar self",
            "push the value of self"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "1-ary not",
            "pop 1 value and push the result of applying not"
          ],
        [
            "JumpCond False 35",
            "pop a value and jump to 35 if the value is False"
          ],
        [
            "Jump 45",
            "set program counter to 45"
          ],
        [
            "Jump 35",
            "set program counter to 35"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Load in_cs",
            "push value of shared variable in_cs"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store in_cs",
            "pop a value and store it in shared variable in_cs"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "Load in_cs",
            "push value of shared variable in_cs"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary -",
            "pop 2 values and push the result of applying -"
          ],
        [
            "Store in_cs",
            "pop a value and store it in shared variable in_cs"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "Push ?flags",
            "push constant ?flags"
          ],
        [
            "LoadVar self",
            "push the value of self"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "Jump 23",
            "set program counter to 23"
          ],
        [
            "DelVar self",
            "delete method variable self"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ?PC(22)",
            "push constant ?PC(22)"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "Push ?PC(22)",
            "push constant ?PC(22)"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                1,
                1,
                21,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                9
              ],
            "line": 1,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                9
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 9,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 15,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 25,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 22,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 25,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 25,
            "column": 22
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 27,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                27
              ],
            "line": 2,
            "endcolumn": 27,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 22,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 15,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 22,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 22,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 22,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                24
              ],
            "line": 4,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                17
              ],
            "line": 6,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                17
              ],
            "line": 6,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 24,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 27
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 30,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 33,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 9,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 25,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 32,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 32,
            "column": 25
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 19
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 10,
            "stmt": [
                10,
                9,
                10,
                33
              ],
            "line": 10,
            "endcolumn": 33,
            "column": 33
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                20,
                12,
                29
              ],
            "line": 12,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                20,
                12,
                29
              ],
            "line": 12,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                20,
                12,
                29
              ],
            "line": 12,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                20,
                12,
                29
              ],
            "line": 12,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                20,
                12,
                29
              ],
            "line": 12,
            "endcolumn": 27,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                20,
                12,
                29
              ],
            "line": 12,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                20,
                14,
                29
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                20,
                14,
                29
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                20,
                14,
                29
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                20,
                14,
                29
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                20,
                14,
                29
              ],
            "line": 14,
            "endcolumn": 27,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 14,
            "stmt": [
                14,
                20,
                14,
                29
              ],
            "line": 14,
            "endcolumn": 29,
            "column": 20
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 18,
            "column": 15
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 19,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 27,
            "column": 23
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                9,
                17,
                27
              ],
            "line": 17,
            "endcolumn": 21,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                34
              ],
            "line": 7,
            "endcolumn": 34,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                17
              ],
            "line": 6,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                17
              ],
            "line": 6,
            "endcolumn": 17,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                1,
                19,
                15
              ],
            "line": 19,
            "endcolumn": 12,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                1,
                19,
                15
              ],
            "line": 19,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                1,
                19,
                15
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                1,
                19,
                15
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 19,
            "stmt": [
                19,
                1,
                19,
                15
              ],
            "line": 19,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                15
              ],
            "line": 20,
            "endcolumn": 12,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                15
              ],
            "line": 20,
            "endcolumn": 14,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                15
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                15
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                15
              ],
            "line": 20,
            "endcolumn": 15,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                1,
                1,
                21,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                1,
                1,
                21,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "in_cs"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "14",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "invariant",
            "op": "Frame"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "in_cs"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "in",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "4",
            "op": "Invariant",
            "pre": "False"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "ListAdd",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "flags"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "65",
            "op": "Jump"
          },
        {
            "args": "self",
            "name": "thread",
            "op": "Frame"
          },
        {
            "value": {
                "type": "set",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "SetAdd",
            "op": "Nary"
          },
        {
            "op": "Choose"
          },
        {
            "pc": "63",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "flags"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "self",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "flags"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "value": "self",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Load"
          },
        {
            "arity": 1,
            "value": "not",
            "op": "Nary"
          },
        {
            "pc": "35",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "45",
            "op": "Jump"
          },
        {
            "pc": "35",
            "op": "Jump"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "in_cs"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "in_cs"
                  }
              ],
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "in_cs"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "-",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "in_cs"
                  }
              ],
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "flags"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": "self",
            "op": "LoadVar"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "op": "Store"
          },
        {
            "pc": "23",
            "op": "Jump"
          },
        {
            "value": "self",
            "op": "DelVar"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "22"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "22"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "macrosteps": [
    {
      "id": "1",
      "tid": "0",
      "shared": { },
      "name": "__init__()",
      "context": {
        "tid": "0",
        "hvalue": "7faa62a1d21a",
        "fp": "1",
        "id": "0",
        "name": "__init__()",
        "entry": "0",
        "pc": "0",
        "sp": "1",
        "stack": [{ "type": "list", "value": [] }],
        "trace": [
{"pc": "0","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
        ],
        "atomic": "1",
        "next": { "type": "Frame", "name": "__init__", "args": "()", "value": { "type": "list", "value": [] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame __init__()",
          "explain": "pop argument () and run method \"__init__\"",
          "explain2": { "text": "pop argument () and run method #+", "args": [ { "type": "atom", "value": "__init__" } ] },
          "npc": "1",
          "fp": "1",
          "trace": [
{"pc": "1","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "0"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "1"
        },

        {
          "code": "Store in_cs",
          "explain": "pop value (0) and store into variable in_cs",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "in_cs" } ] } ] },
          "shared": { "in_cs": { "type": "int", "value": "0" } },
          "npc": "3",
          "pop": "1",
          "push": [ ],
          "pc": "2"
        },

        {
          "code": "Jump 14",
          "explain": "jump over invariant definition: set program counter to 14",
          "explain2": { "text": "jump over invariant definition: set program counter to 14", "args": [] },
          "npc": "14",
          "push": [ ],
          "pc": "3"
        },

        {
          "code": "Invariant 4",
          "explain": "test invariant",
          "explain2": { "text": "test invariant", "args": [] },
          "npc": "15",
          "push": [ ],
          "pc": "14"
        },

        {
          "code": "Push ()",
          "explain": "building a tuple: push constant ()",
          "explain2": { "text": "building a tuple: push constant ()", "args": [] },
          "npc": "16",
          "push": [ { "type": "list", "value": [] } ],
          "pc": "15"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "17",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "16"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (False, []); insert first value into the second; push result ([False])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "list", "value": [] }, { "type": "list", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "18",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "17"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "19",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "18"
        },

        {
          "code": "2-ary ListAdd",
          "explain": "pop 2 values (False, [False]); insert first value into the second; push result ([False, False])",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "list", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } ] },
          "npc": "20",
          "pop": "2",
          "push": [ { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] } ],
          "pc": "19"
        },

        {
          "code": "Store flags",
          "explain": "pop value ([False, False]) and store into variable flags",
          "explain2": { "text": "pop value (#+) and store into variable #@", "args": [ { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] } ] },
          "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
          "npc": "21",
          "pop": "1",
          "push": [ ],
          "pc": "20"
        },

        {
          "code": "Jump 65",
          "explain": "jump over method definition: set program counter to 65",
          "explain2": { "text": "jump over method definition: set program counter to 65", "args": [] },
          "npc": "65",
          "push": [ ],
          "pc": "21"
        },

        {
          "code": "Push ?PC(22)",
          "explain": "push constant ?PC(22)",
          "explain2": { "text": "push constant ?PC(22)", "args": [] },
          "npc": "66",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [ ] } ],
          "pc": "65"
        },

        {
          "code": "Push 0",
          "explain": "push constant 0",
          "explain2": { "text": "push constant 0", "args": [] },
          "npc": "67",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "66"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?PC(22)); push result (?PC(22)[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [{ "type": "int", "value": "0" } ] } ] },
          "npc": "68",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [{ "type": "int", "value": "0" } ] } ],
          "pc": "67"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "69",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "68"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (0), and pc (22: \"thread\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (22: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "0" }, { "type": "atom", "value": "thread" } ] },
          "npc": "70",
          "pop": "2",
          "push": [ ],
          "pc": "69"
        },

        {
          "code": "Push ?PC(22)",
          "explain": "push constant ?PC(22)",
          "explain2": { "text": "push constant ?PC(22)", "args": [] },
          "npc": "71",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [ ] } ],
          "pc": "70"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "72",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "71"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?PC(22)); push result (?PC(22)[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [ ] }, { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [{ "type": "int", "value": "1" } ] } ] },
          "npc": "73",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "22" }, "args": [{ "type": "int", "value": "1" } ] } ],
          "pc": "72"
        },

        {
          "code": "Push {:}",
          "explain": "push constant {:}",
          "explain2": { "text": "push constant {:}", "args": [] },
          "npc": "74",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "73"
        },

        {
          "code": "Spawn",
          "explain": "pop local state ({:}), arg (1), and pc (22: \"thread\"), and spawn thread",
          "explain2": { "text": "pop local state (#+), arg (#+), and pc (22: #+), and spawn thread", "args": [ { "type": "dict", "value": [] }, { "type": "int", "value": "1" }, { "type": "atom", "value": "thread" } ] },
          "npc": "75",
          "pop": "2",
          "push": [ ],
          "pc": "74"
        },

        {
          "code": "ReturnOp(result. None)",
          "explain": "pop caller's method variables and pc and push result (), or terminate if no caller",
          "explain2": { "text": "pop caller's method variables and pc and push result (), or terminate if no caller", "args": [ { "type": "address" } ] },
          "npc": "75",
          "mode": "terminated",
          "pop": "1",
          "push": [ { "type": "address" } ],
          "pc": "75"
        }

      ],
      "ctxbag": {
          "7faa53f000ea": "1",
          "7faa53f0013a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa53f000ea",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "22",
          "sp": "1",
          "stack": [{ "type": "int", "value": "0" }],
          "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "0" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7faa53f0013a",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "22",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "2",
      "tid": "1",
      "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
      "name": "thread(0)",
      "context": {
        "tid": "1",
        "hvalue": "7faa53f000ea",
        "fp": "1",
        "name": "thread(0)",
        "entry": "22",
        "pc": "22",
        "sp": "1",
        "stack": [{ "type": "int", "value": "0" }],
        "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "0" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame thread(self)",
          "explain": "pop argument (0), assign to self, and run method \"thread\"",
          "explain2": { "text": "pop argument (#+), assign to self, and run method #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "thread" } ] },
          "npc": "23",
          "fp": "1",
          "trace": [
{"pc": "23","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "local": { "self": { "type": "int", "value": "0" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "22"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "24",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "23"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "25",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "24"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "26",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "25"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "27",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "26"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "28",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "27"
        }

      ],
      "ctxbag": {
          "7faa53f0013a": "1",
          "7faa6980004a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa6980004a",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "28",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
          "trace": [
{"pc": "28","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "mode": "choosing"
        },
        {
          "tid": "2",
          "hvalue": "7faa53f0013a",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "22",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "5",
      "tid": "1",
      "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
      "name": "thread(0)",
      "choice": { "type": "bool", "value": "True" },
      "context": {
        "tid": "1",
        "hvalue": "7faa6980004a",
        "fp": "1",
        "name": "thread(0)",
        "entry": "22",
        "pc": "28",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
        "trace": [
{"pc": "28","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ False, True }) with choice (True)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "True" } ] },
          "choose": { "type": "bool", "value": "True" },
          "npc": "29",
          "fp": "1",
          "trace": [
{"pc": "29","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "28"
        },

        {
          "code": "JumpCond False 63",
          "explain": "pop value (True), compare to False, and jump to 63 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 63 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "30",
          "pop": "1",
          "push": [ ],
          "pc": "29"
        },

        {
          "code": "Push ?flags",
          "explain": "push constant ?flags",
          "explain2": { "text": "push constant ?flags", "args": [] },
          "npc": "31",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] } ],
          "pc": "30"
        },

        {
          "code": "LoadVar self",
          "explain": "push value (0) of variable \"self\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "self" } ] },
          "npc": "32",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "31"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?flags); push result (?flags[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "33",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] } ],
          "pc": "32"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "34",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "33"
        }

      ],
      "ctxbag": {
          "7faa53f0013a": "1",
          "7faa6580006a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa6580006a",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "34",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "34","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "flags[0]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7faa53f0013a",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "22",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "10",
      "tid": "1",
      "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
      "name": "thread(0)",
      "context": {
        "tid": "1",
        "hvalue": "7faa6580006a",
        "fp": "1",
        "name": "thread(0)",
        "entry": "22",
        "pc": "34",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] }, { "type": "bool", "value": "True" }],
        "trace": [
{"pc": "34","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "flags[0]", "value": { "type": "bool", "value": "True" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (True) and address (?flags[0]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] } ] },
          "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
          "npc": "35",
          "fp": "1",
          "trace": [
{"pc": "35","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "34"
        },

        {
          "code": "Push ?flags",
          "explain": "push constant ?flags",
          "explain2": { "text": "push constant ?flags", "args": [] },
          "npc": "36",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] } ],
          "pc": "35"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "37",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "36"
        },

        {
          "code": "LoadVar self",
          "explain": "push value (0) of variable \"self\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "0" }, { "type": "atom", "value": "self" } ] },
          "npc": "38",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "37"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (0, 1); the second integer minus the first; push result (1)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "int", "value": "1" }, { "type": "int", "value": "1" } ] },
          "npc": "39",
          "pop": "1",
          "push": [ ],
          "pc": "38"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?flags); push result (?flags[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "40",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] } ],
          "pc": "39"
        }

      ],
      "ctxbag": {
          "7faa53f0013a": "1",
          "7faa53f001ea": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa53f001ea",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "40",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "40","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "flags[1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7faa53f0013a",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "22",
          "sp": "1",
          "stack": [{ "type": "int", "value": "1" }],
          "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ },"sp": 0}
          ],
          "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "1" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "18",
      "tid": "2",
      "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
      "name": "thread(1)",
      "context": {
        "tid": "2",
        "hvalue": "7faa53f0013a",
        "fp": "1",
        "name": "thread(1)",
        "entry": "22",
        "pc": "22",
        "sp": "1",
        "stack": [{ "type": "int", "value": "1" }],
        "trace": [
{"pc": "22","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ },"sp": 0}
        ],
        "next": { "type": "Frame", "name": "thread", "args": "self", "value": { "type": "int", "value": "1" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Frame thread(self)",
          "explain": "pop argument (1), assign to self, and run method \"thread\"",
          "explain2": { "text": "pop argument (#+), assign to self, and run method #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "thread" } ] },
          "npc": "23",
          "fp": "1",
          "trace": [
{"pc": "23","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "local": { "self": { "type": "int", "value": "1" } },
          "pop": "1",
          "push": [ { "type": "dict", "value": [] } ],
          "pc": "22"
        },

        {
          "code": "Push {}",
          "explain": "push constant {}",
          "explain2": { "text": "push constant {}", "args": [] },
          "npc": "24",
          "push": [ { "type": "set", "value": [] } ],
          "pc": "23"
        },

        {
          "code": "Push False",
          "explain": "push constant False",
          "explain2": { "text": "push constant False", "args": [] },
          "npc": "25",
          "push": [ { "type": "bool", "value": "False" } ],
          "pc": "24"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (False, {}); insert first value into the second; push result ({ False })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "False" }, { "type": "set", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ] },
          "npc": "26",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" } ] } ],
          "pc": "25"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "27",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "26"
        },

        {
          "code": "2-ary SetAdd",
          "explain": "pop 2 values (True, { False }); insert first value into the second; push result ({ False, True })",
          "explain2": { "text": "pop 2 values (#+, #+); insert first value into the second; push result (#+)", "args": [ { "type": "bool", "value": "True" }, { "type": "set", "value": [{ "type": "bool", "value": "False" } ] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ] },
          "npc": "28",
          "pop": "2",
          "push": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } ],
          "pc": "27"
        }

      ],
      "ctxbag": {
          "7faa53f001ea": "1",
          "7faa6980009a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa53f001ea",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "40",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "40","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "flags[1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7faa6980009a",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "28",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
          "trace": [
{"pc": "28","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
          "mode": "choosing"
        }
      ]
    },
    {
      "id": "24",
      "tid": "2",
      "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
      "name": "thread(1)",
      "choice": { "type": "bool", "value": "True" },
      "context": {
        "tid": "2",
        "hvalue": "7faa6980009a",
        "fp": "1",
        "name": "thread(1)",
        "entry": "22",
        "pc": "28",
        "sp": "2",
        "stack": [{ "type": "dict", "value": [] }, { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }],
        "trace": [
{"pc": "28","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Choose", "value": { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Choose",
          "explain": "replace top of stack ({ False, True }) with choice (True)",
          "explain2": { "text": "replace top of stack (#+) with choice (#+)", "args": [ { "type": "set", "value": [{ "type": "bool", "value": "False" }, { "type": "bool", "value": "True" } ] }, { "type": "bool", "value": "True" } ] },
          "choose": { "type": "bool", "value": "True" },
          "npc": "29",
          "fp": "1",
          "trace": [
{"pc": "29","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "1",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "28"
        },

        {
          "code": "JumpCond False 63",
          "explain": "pop value (True), compare to False, and jump to 63 if the same",
          "explain2": { "text": "pop value (#+), compare to #+, and jump to 63 if the same", "args": [ { "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] },
          "npc": "30",
          "pop": "1",
          "push": [ ],
          "pc": "29"
        },

        {
          "code": "Push ?flags",
          "explain": "push constant ?flags",
          "explain2": { "text": "push constant ?flags", "args": [] },
          "npc": "31",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] } ],
          "pc": "30"
        },

        {
          "code": "LoadVar self",
          "explain": "push value (1) of variable \"self\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "self" } ] },
          "npc": "32",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "31"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (1, ?flags); push result (?flags[1])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] } ] },
          "npc": "33",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] } ],
          "pc": "32"
        },

        {
          "code": "Push True",
          "explain": "push constant True",
          "explain2": { "text": "push constant True", "args": [] },
          "npc": "34",
          "push": [ { "type": "bool", "value": "True" } ],
          "pc": "33"
        }

      ],
      "ctxbag": {
          "7faa53f001ea": "1",
          "7faa658000da": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa53f001ea",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "40",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "40","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "flags[1]" },
          "mode": "runnable"
        },
        {
          "tid": "2",
          "hvalue": "7faa658000da",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "34",
          "sp": "3",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
          "trace": [
{"pc": "34","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Store", "var": "flags[1]", "value": { "type": "bool", "value": "True" } },
          "mode": "runnable"
        }
      ]
    },
    {
      "id": "33",
      "tid": "2",
      "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "False" } ] }, "in_cs": { "type": "int", "value": "0" } },
      "name": "thread(1)",
      "context": {
        "tid": "2",
        "hvalue": "7faa658000da",
        "fp": "1",
        "name": "thread(1)",
        "entry": "22",
        "pc": "34",
        "sp": "3",
        "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] }, { "type": "bool", "value": "True" }],
        "trace": [
{"pc": "34","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
        ],
        "next": { "type": "Store", "var": "flags[1]", "value": { "type": "bool", "value": "True" } },
        "mode": "runnable"
      },
      "microsteps": [
        {
          "code": "Store",
          "explain": "pop value (True) and address (?flags[1]) and store",
          "explain2": { "text": "pop value (#+) and address (#+) and store", "args": [ { "type": "bool", "value": "True" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] } ] },
          "shared": { "flags": { "type": "list", "value": [{ "type": "bool", "value": "True" }, { "type": "bool", "value": "True" } ] }, "in_cs": { "type": "int", "value": "0" } },
          "npc": "35",
          "fp": "1",
          "trace": [
{"pc": "35","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "pop": "2",
          "push": [ ],
          "pc": "34"
        },

        {
          "code": "Push ?flags",
          "explain": "push constant ?flags",
          "explain2": { "text": "push constant ?flags", "args": [] },
          "npc": "36",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] } ],
          "pc": "35"
        },

        {
          "code": "Push 1",
          "explain": "push constant 1",
          "explain2": { "text": "push constant 1", "args": [] },
          "npc": "37",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "36"
        },

        {
          "code": "LoadVar self",
          "explain": "push value (1) of variable \"self\"",
          "explain2": { "text": "push value (#+) of variable #+", "args": [ { "type": "int", "value": "1" }, { "type": "atom", "value": "self" } ] },
          "npc": "38",
          "push": [ { "type": "int", "value": "1" } ],
          "pc": "37"
        },

        {
          "code": "2-ary -",
          "explain": "pop 2 values (1, 1); the second integer minus the first; push result (0)",
          "explain2": { "text": "pop 2 values (#+, #+); the second integer minus the first; push result (#+)", "args": [ { "type": "int", "value": "1" }, { "type": "int", "value": "1" }, { "type": "int", "value": "0" } ] },
          "npc": "39",
          "pop": "2",
          "push": [ { "type": "int", "value": "0" } ],
          "pc": "38"
        },

        {
          "code": "2-ary AddArg",
          "explain": "pop 2 values (0, ?flags); push result (?flags[0])",
          "explain2": { "text": "pop 2 values (#+, #+); push result (#+)", "args": [ { "type": "int", "value": "0" }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" } ] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] } ] },
          "npc": "40",
          "pop": "2",
          "push": [ { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] } ],
          "pc": "39"
        }

      ],
      "ctxbag": {
          "7faa53f001ea": "1",
          "7faa53f0024a": "1"
      },
      "contexts": [
        {
          "tid": "0",
          "hvalue": "7faa53f0016a",
          "fp": "1",
          "id": "0",
          "name": "__init__()",
          "entry": "0",
          "pc": "75",
          "sp": "1",
          "stack": [{ "type": "address" }],
          "trace": [
{"pc": "75","xpc": "0","method_name": { "type": "atom", "value": "__init__" },
"method_arg": { "type": "list", "value": [] },
"method": "__init__()","calltype": "process","vars":{ },"sp": 0}
          ],
          "atomic": "1",
          "mode": "terminated"
        },
        {
          "tid": "1",
          "hvalue": "7faa53f001ea",
          "fp": "1",
          "name": "thread(0)",
          "entry": "22",
          "pc": "40",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "1" } ] }],
          "trace": [
{"pc": "40","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "0" },
"method": "thread(0)","calltype": "process","vars":{ "self": { "type": "int", "value": "0" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "flags[1]" },
          "mode": "blocked"
        },
        {
          "tid": "2",
          "hvalue": "7faa53f0024a",
          "fp": "1",
          "name": "thread(1)",
          "entry": "22",
          "pc": "40",
          "sp": "2",
          "stack": [{ "type": "dict", "value": [] }, { "type": "address", "func": { "type": "pc", "value": "-1" }, "args": [{ "type": "atom", "value": "flags" }, { "type": "int", "value": "0" } ] }],
          "trace": [
{"pc": "40","xpc": "22","method_name": { "type": "atom", "value": "thread" },
"method_arg": { "type": "int", "value": "1" },
"method": "thread(1)","calltype": "process","vars":{ "self": { "type": "int", "value": "1" } },"sp": 0}
          ],
          "next": { "type": "Load", "var": "flags[0]" },
          "mode": "blocked"
        }
      ]
    }

  ]
}
