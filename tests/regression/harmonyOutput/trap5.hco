{
  "nstates": 16,
  "issue": "No issues",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/trap5.hny",
            "lines": [
                "count = 0",
                "done = False",
                "",
                "finally count == 2",
                "",
                "def increment():",
                "    let prior = setintlevel(True):",
                "        count += 1",
                "        setintlevel(prior)",
                "",
                "def handler():",
                "    increment()",
                "    done = True",
                "",
                "def main():",
                "    trap handler()",
                "    increment()",
                "    await done",
                "",
                "spawn main()"
              ],
            "identifiers": {
                "increment": "constant",
                "handler": "constant",
                "count": "global",
                "this": "local-var",
                "main": "constant",
                "done": "global",
                "___": "___",
                "prior": "local-const"
              }
          }
      },
    "labels": {
        "__end__": 56
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Store count",
            "pop a value and store it in shared variable count"
          ],
        [
            "Push False",
            "push constant False"
          ],
        [
            "Store done",
            "pop a value and store it in shared variable done"
          ],
        [
            "Jump 12",
            "jump over finally definition: set program counter to 12"
          ],
        [
            "Frame finally()",
            "start of method finally"
          ],
        [
            "Load count",
            "push value of shared variable count"
          ],
        [
            "Push 2",
            "push constant 2"
          ],
        [
            "2-ary ==",
            "pop 2 values and push the result of applying =="
          ],
        [
            "Assert",
            "pop a condition and raise exception if condition is false"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Finally 6",
            "test predicate over final state"
          ],
        [
            "Jump 49",
            "jump over method definition: set program counter to 49"
          ],
        [
            "Frame increment()",
            "start of method increment"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "SetIntLevel",
            "pops new boolean interrupt level and pushes old one"
          ],
        [
            "StoreVar prior",
            "pop a value and store in prior"
          ],
        [
            "Load count",
            "push value of shared variable count"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store count",
            "pop a value and store it in shared variable count"
          ],
        [
            "LoadVar prior",
            "push the value of prior"
          ],
        [
            "DelVar prior",
            "delete method variable prior"
          ],
        [
            "SetIntLevel",
            "pops new boolean interrupt level and pushes old one"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 49",
            "jump over method definition: set program counter to 49"
          ],
        [
            "Frame handler()",
            "start of method handler"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(14)",
            "call method PC(14)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Push True",
            "push constant True"
          ],
        [
            "Store done",
            "pop a value and store it in shared variable done"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Jump 49",
            "jump over method definition: set program counter to 49"
          ],
        [
            "Frame main()",
            "start of method main"
          ],
        [
            "Push ?PC(28)",
            "push constant ?PC(28)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Trap",
            "pop a pc and argument and set trap"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "Apply PC(14)",
            "call method PC(14)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "Load done",
            "push value of shared variable done"
          ],
        [
            "JumpCond False 44",
            "pop a value and jump to 44 if the value is False"
          ],
        [
            "Jump 48",
            "set program counter to 48"
          ],
        [
            "Jump 44",
            "set program counter to 44"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push ?PC(36)",
            "push constant ?PC(36)"
          ],
        [
            "Push ()",
            "push constant ()"
          ],
        [
            "2-ary AddArg",
            "pop 2 values and push the result of applying AddArg"
          ],
        [
            "Push {:}",
            "push constant {:}"
          ],
        [
            "Spawn",
            "pop thread-local state, argument, and pc and spawn a new thread"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                1,
                1,
                21,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                9
              ],
            "line": 1,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                9
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 12,
            "column": 8
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                1,
                2,
                12
              ],
            "line": 2,
            "endcolumn": 6,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 13,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                18
              ],
            "line": 4,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                16
              ],
            "line": 6,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                16
              ],
            "line": 6,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                33
              ],
            "line": 7,
            "endcolumn": 32,
            "column": 29
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                33
              ],
            "line": 7,
            "endcolumn": 33,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 7,
            "stmt": [
                7,
                5,
                7,
                33
              ],
            "line": 7,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                18
              ],
            "line": 8,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                18
              ],
            "line": 8,
            "endcolumn": 18,
            "column": 18
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                18
              ],
            "line": 8,
            "endcolumn": 18,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 8,
            "stmt": [
                8,
                9,
                8,
                18
              ],
            "line": 8,
            "endcolumn": 16,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 25,
            "column": 21
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 9,
            "stmt": [
                9,
                9,
                9,
                26
              ],
            "line": 9,
            "endcolumn": 26,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                6,
                1,
                6,
                16
              ],
            "line": 6,
            "endcolumn": 16,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                14
              ],
            "line": 11,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                14
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                15
              ],
            "line": 12,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                15
              ],
            "line": 12,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 12,
            "stmt": [
                12,
                5,
                12,
                15
              ],
            "line": 12,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                15
              ],
            "line": 13,
            "endcolumn": 15,
            "column": 12
          },
        {
            "module": "__main__",
            "endline": 13,
            "stmt": [
                13,
                5,
                13,
                15
              ],
            "line": 13,
            "endcolumn": 10,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 11,
            "stmt": [
                11,
                1,
                11,
                14
              ],
            "line": 11,
            "endcolumn": 14,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                11
              ],
            "line": 15,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                11
              ],
            "line": 15,
            "endcolumn": 11,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                18
              ],
            "line": 16,
            "endcolumn": 16,
            "column": 10
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                18
              ],
            "line": 16,
            "endcolumn": 18,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                18
              ],
            "line": 16,
            "endcolumn": 18,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 16,
            "stmt": [
                16,
                5,
                16,
                18
              ],
            "line": 16,
            "endcolumn": 18,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                15
              ],
            "line": 17,
            "endcolumn": 15,
            "column": 14
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                15
              ],
            "line": 17,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 17,
            "stmt": [
                17,
                5,
                17,
                15
              ],
            "line": 17,
            "endcolumn": 15,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 5
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 18,
            "stmt": [
                18,
                5,
                18,
                14
              ],
            "line": 18,
            "endcolumn": 14,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 15,
            "stmt": [
                15,
                1,
                15,
                11
              ],
            "line": 15,
            "endcolumn": 11,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                12
              ],
            "line": 20,
            "endcolumn": 10,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                12
              ],
            "line": 20,
            "endcolumn": 12,
            "column": 11
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                12
              ],
            "line": 20,
            "endcolumn": 12,
            "column": 7
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                12
              ],
            "line": 20,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 20,
            "stmt": [
                20,
                1,
                20,
                12
              ],
            "line": 20,
            "endcolumn": 12,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                1,
                1,
                21,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 21,
            "stmt": [
                1,
                1,
                21,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "count"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "bool",
                "value": "False"
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "done"
                  }
              ],
            "op": "Store"
          },
        {
            "pc": "12",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "finally",
            "op": "Frame"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "count"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 2
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "==",
            "op": "Nary"
          },
        {
            "op": "Assert"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "6",
            "op": "Finally"
          },
        {
            "pc": "49",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "increment",
            "op": "Frame"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "op": "SetIntLevel"
          },
        {
            "value": "prior",
            "op": "StoreVar"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "count"
                  }
              ],
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "count"
                  }
              ],
            "op": "Store"
          },
        {
            "value": "prior",
            "op": "LoadVar"
          },
        {
            "value": "prior",
            "op": "DelVar"
          },
        {
            "op": "SetIntLevel"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "49",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "handler",
            "op": "Frame"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "14"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": {
                "type": "bool",
                "value": "True"
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "done"
                  }
              ],
            "op": "Store"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "pc": "49",
            "op": "Jump"
          },
        {
            "args": "()",
            "name": "main",
            "op": "Frame"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "28"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "op": "Trap"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "14"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "done"
                  }
              ],
            "op": "Load"
          },
        {
            "pc": "44",
            "cond": {
                "type": "bool",
                "value": "False"
              },
            "op": "JumpCond"
          },
        {
            "pc": "48",
            "op": "Jump"
          },
        {
            "pc": "44",
            "op": "Jump"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "address",
                "args": [

                  ],
                "func": {
                    "type": "pc",
                    "value": "36"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "list",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "AddArg",
            "op": "Nary"
          },
        {
            "value": {
                "type": "dict",
                "value": [

                  ]
              },
            "op": "Push"
          },
        {
            "eternal": "False",
            "op": "Spawn"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "symbols": {

  },
  "nodes": [
    {
      "idx": 0,
      "component": 15,
      "transitions": [

      ],
      "type": "initial"
    }
  ],
  "profile": [
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    0,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0
  ]
}
