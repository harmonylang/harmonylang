{
  "nstates": 2,
  "issue": "No issues",
  "hvm": {
    "modules": {
        "__main__": {
            "file": "/var/folders/6n/pjbfqj310fz0rt3tlz28gcdc0000gn/T/tmpoigkn1jf/atomicinc.hny",
            "lines": [
                "def atomic_inc(ptr):",
                "    atomically !ptr += 1",
                "    ",
                "count = 0",
                "atomic_inc(?count)"
              ],
            "identifiers": {
                "ptr": "local-const",
                "atomic_inc": "constant",
                "count": "global",
                "this": "local-var",
                "___": "___"
              }
          }
      },
    "labels": {
        "__end__": 20
      },
    "pretty": [
        [
            "Frame __init__()",
            "start of method __init__"
          ],
        [
            "Jump 13",
            "jump over method definition: set program counter to 13"
          ],
        [
            "Frame atomic_inc(ptr)",
            "start of method atomic_inc"
          ],
        [
            "AtomicInc(eager)",
            "increment atomic counter of context; thread runs uninterrupted if larger than 0"
          ],
        [
            "LoadVar ptr",
            "push the value of ptr"
          ],
        [
            "DelVar ptr",
            "delete method variable ptr"
          ],
        [
            "Dup",
            "push a copy of the top value on the stack"
          ],
        [
            "Load",
            "pop an address and push the value at the address"
          ],
        [
            "Push 1",
            "push constant 1"
          ],
        [
            "2-ary +",
            "pop 2 values and push the result of applying +"
          ],
        [
            "Store",
            "pop a value and an address and store the value at the address"
          ],
        [
            "AtomicDec",
            "decrement atomic counter of context"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "Push 0",
            "push constant 0"
          ],
        [
            "Store count",
            "pop a value and store it in shared variable count"
          ],
        [
            "Push ?count",
            "push constant ?count"
          ],
        [
            "Apply PC(2)",
            "call method PC(2)"
          ],
        [
            "Pop",
            "discard the top value on the stack"
          ],
        [
            "ReturnOp(result. None)",
            "restore caller method state and push result"
          ],
        [
            "DelVar result",
            "delete method variable result"
          ]
      ],
    "locs": [
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                1,
                1,
                6,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                20
              ],
            "line": 1,
            "endcolumn": 3,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                20
              ],
            "line": 1,
            "endcolumn": 20,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 19,
            "column": 17
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 24,
            "column": 24
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 22,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 2,
            "stmt": [
                2,
                16,
                2,
                24
              ],
            "line": 2,
            "endcolumn": 24,
            "column": 16
          },
        {
            "module": "__main__",
            "endline": 1,
            "stmt": [
                1,
                1,
                1,
                20
              ],
            "line": 1,
            "endcolumn": 20,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                9
              ],
            "line": 4,
            "endcolumn": 9,
            "column": 9
          },
        {
            "module": "__main__",
            "endline": 4,
            "stmt": [
                4,
                1,
                4,
                9
              ],
            "line": 4,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                18
              ],
            "line": 5,
            "endcolumn": 17,
            "column": 13
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                18
              ],
            "line": 5,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 5,
            "stmt": [
                5,
                1,
                5,
                18
              ],
            "line": 5,
            "endcolumn": 18,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                1,
                1,
                6,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          },
        {
            "module": "__main__",
            "endline": 6,
            "stmt": [
                1,
                1,
                6,
                7
              ],
            "line": 1,
            "endcolumn": 7,
            "column": 1
          }
      ],
    "code": [
        {
            "args": "()",
            "name": "__init__",
            "op": "Frame"
          },
        {
            "pc": "13",
            "op": "Jump"
          },
        {
            "args": "ptr",
            "name": "atomic_inc",
            "op": "Frame"
          },
        {
            "lazy": "False",
            "op": "AtomicInc"
          },
        {
            "value": "ptr",
            "op": "LoadVar"
          },
        {
            "value": "ptr",
            "op": "DelVar"
          },
        {
            "op": "Dup"
          },
        {
            "op": "Load"
          },
        {
            "value": {
                "type": "int",
                "value": 1
              },
            "op": "Push"
          },
        {
            "arity": 2,
            "value": "+",
            "op": "Nary"
          },
        {
            "op": "Store"
          },
        {
            "op": "AtomicDec"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": {
                "type": "int",
                "value": 0
              },
            "op": "Push"
          },
        {
            "value": [
                {
                    "type": "atom",
                    "value": "count"
                  }
              ],
            "op": "Store"
          },
        {
            "value": {
                "type": "address",
                "args": [
                    {
                        "type": "atom",
                        "value": "count"
                      }
                  ],
                "func": {
                    "type": "pc",
                    "value": "-1"
                  }
              },
            "op": "Push"
          },
        {
            "value": {
                "type": "pc",
                "value": "2"
              },
            "op": "Apply"
          },
        {
            "op": "Pop"
          },
        {
            "result": "result",
            "default": {
                "type": "address"
              },
            "op": "Return"
          },
        {
            "value": "result",
            "op": "DelVar"
          }
      ]
  },
  "symbols": {

  },
  "nodes": [
    {
      "idx": 0,
      "transitions": [

      ],
      "type": "initial"
    }
  ],
  "profile": [
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0
  ]
}
