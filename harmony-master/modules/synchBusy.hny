def tas(lk):
    atomic:
        result = !lk
        !lk = True

def Lock():
    result = False

def lock(lk):
    await not tas(lk)

def unlock(lk):
    !lk = False

def Condition(lk):
    result = lk

def wait(c):
    unlock(!c)
    lock(!c)

def notify(c):
    pass

def notifyAll(c):
    pass

def Semaphore(cnt):
    result = cnt

def P(sema):
    let blocked = True:
        while blocked:
            atomic:
                if !sema > 0:
                    !sema -= 1
                    blocked = False
                
def V(sema):
    atomic: !sema += 1
